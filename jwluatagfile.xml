<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.2" doxygen_gitid="caa4e3de211fbbef2c3adf58a6bd4c86d0eb7cb8*">
  <compound kind="class">
    <name>__FCBase</name>
    <filename>class_____f_c_base.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>PDKFRAMEWORK_CLASSID</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a7ccc66e6b4ff6aad32163e30bc515239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FCID_FONTINFO</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a7ccc66e6b4ff6aad32163e30bc515239a2aca2ff0d93d7e1701c6634585d072d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FCID_NUMBER</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a7ccc66e6b4ff6aad32163e30bc515239aeec4740513f6106b46093a3f4d6671d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FCID_STRING</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a7ccc66e6b4ff6aad32163e30bc515239afa5899aa55d12ad6de79bd2e79c95789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MEASUREMENTUNITS</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_DEFAULT</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6a707eba9499cef193373ede69bfef3736</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_EVPUS</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6a0b105c0bf10993d38a0bb6fdb30a5478</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_INCHES</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6afbf3b5209071bd18acbf1fb1ca6909d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_CENTIMETERS</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6a22fedb5fa471001b099cc7d8dafd3ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_POINTS</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6ab36e86e89f3029e219b9cc1723626faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_PICAS</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6af382bf4d11095cdd20603b966ba92b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_SPACES</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6ab36860d891171922f1fdf33c912daee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_MILLIMETERS</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6a9eb7891cfe1766026f0a3f6b747f64a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FCID_FONTINFO</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a7ccc66e6b4ff6aad32163e30bc515239a2aca2ff0d93d7e1701c6634585d072d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FCID_NUMBER</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a7ccc66e6b4ff6aad32163e30bc515239aeec4740513f6106b46093a3f4d6671d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FCID_STRING</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a7ccc66e6b4ff6aad32163e30bc515239afa5899aa55d12ad6de79bd2e79c95789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_DEFAULT</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6a707eba9499cef193373ede69bfef3736</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_EVPUS</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6a0b105c0bf10993d38a0bb6fdb30a5478</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_INCHES</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6afbf3b5209071bd18acbf1fb1ca6909d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_CENTIMETERS</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6a22fedb5fa471001b099cc7d8dafd3ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_POINTS</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6ab36e86e89f3029e219b9cc1723626faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_PICAS</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6af382bf4d11095cdd20603b966ba92b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_SPACES</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6ab36860d891171922f1fdf33c912daee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEASUREMENTUNIT_MILLIMETERS</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9c34d7730c8104ce6e2275c55fc04de6a9eb7891cfe1766026f0a3f6b747f64a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>af6614232541d894894a764bb6b59ff32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>aacfbbd1979a79ad07a240b696d16d50f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCBase</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a19492e2b21a7db8115c11e9f82f935f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~__FCBase</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>aab08ccc118c52f8cf77b4257995f7d37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugMsgInt</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>ac1fe2c7cd7784046ac2535118cda4fbf</anchor>
      <arglist>(const char *pszPrefixText, int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugMsgHex</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>aec04ca32a6c566fb0de4fa555fea5abf</anchor>
      <arglist>(const char *pszPrefixText, int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugMsgString</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a0871d3c086d3dcc8fb126fbd7f1e57a8</anchor>
      <arglist>(const char *pszPrefixText, const char *thestring)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugMsg</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a7941fd97caaf38d36b4e9dc9dc03be83</anchor>
      <arglist>(const char *pszMsg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugOutMenuInfo</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>ae96de48cbc7212fc027ecea7cd66b5be</anchor>
      <arglist>(FCUI *pUI, int menuixd_horiz, int menuixd_vert) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DebugOutFormat</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a5b41a4cbf16846667d6b701e2a7c4b49</anchor>
      <arglist>(const char *fmt,...)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DebugDump</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>ac159aadbff65fd16f93a4a5cc36a8677</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DebugDataDump</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>ae0da6e7b94b34fa4ce6f21acc5dc6974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DebugDataByteArrayDump</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>afe56757edda61ebf652720f809bc691f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set16BitFlag</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a633a04e9563a89fe8d87902f3b94b5b2</anchor>
      <arglist>(FLAG_16 *flag, FLAG_16 flagbits, bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set32BitFlag</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a9740bae9acb274c2acead9ed4ef6956a</anchor>
      <arglist>(FLAG_32 *flag, FLAG_32 flagbits, bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBitFlag</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>aa3824a1e23738a931057f242b8a6bef3</anchor>
      <arglist>(FLAG_32 flag, FLAG_32 flagbits) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetBitCount</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a46ec3b1e2e387c92cd26da8f08f2010c</anchor>
      <arglist>(FLAG_32 flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpecific32Bit</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>abfebd1676cca4fd7117764bf66935243</anchor>
      <arglist>(FLAG_32 *flag, int bitnumber, bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUserData</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a850cb273bfe406eeadcc36339a61345d</anchor>
      <arglist>(void *pData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUserData2</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a0ddd3c721618c90235311e74e40c5e44</anchor>
      <arglist>(void *pData)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>GetUserData</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>aa60a94194f26d52f953b4305191d7a91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>GetUserData2</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a80b223f81a66dc348574fb8c3b9dd063</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsIdentical</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a5c3f33c925b4d20a49a6e20981c5e46d</anchor>
      <arglist>(__FCBase *pCompareObject)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StoreXML_String</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a62711324f4e02f11f2111618eb5a9390</anchor>
      <arglist>(tinyxml2::XMLElement *pParentNode, const char *pszElementName, FCString *pStringValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StoreXML_Integer</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a70c1643214ce287bcae7821e611e9654</anchor>
      <arglist>(tinyxml2::XMLElement *pParentNode, const char *pszElementName, int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StoreXML_Bool</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>aa9f18cbde7c1d404610ca0061d2cda62</anchor>
      <arglist>(tinyxml2::XMLElement *pParentNode, const char *pszElementName, bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StoreXML_StringAttribute</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>af7d2e2b0e0539c06abb79be6ae559997</anchor>
      <arglist>(tinyxml2::XMLElement *pNode, const char *pszAttributeName, FCString *pStringValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StoreXML_IntegerAttribute</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>afa4aeb62d43fb73e90b144a87b97fe8d</anchor>
      <arglist>(tinyxml2::XMLElement *pNode, const char *pszAttributeName, int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StoreXML_BoolAttribute</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a90a607b6bcdfa119ce836ecc56202f71</anchor>
      <arglist>(tinyxml2::XMLElement *pNode, const char *pszAttributeName, bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StoreXML_FloatAttribute</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>ad79401a99a558be7686a0c8272695491</anchor>
      <arglist>(tinyxml2::XMLElement *pNode, const char *pszAttributeName, float value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>StoreToXML</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>ad859449e4dde0088e68f2ec0b23128b4</anchor>
      <arglist>(tinyxml2::XMLElement *pParentNode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReadXML_String</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a0eee38bdd192419d40a1b9e52cb5e06d</anchor>
      <arglist>(tinyxml2::XMLElement *pParentNode, const char *pszElementName, FCString *pStringValue)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReadXML_Integer</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>aef00e79e1c548c81850621421578168a</anchor>
      <arglist>(tinyxml2::XMLElement *pParentNode, const char *pszElementName, int *pValue)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReadXML_Bool</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>aa0aa7da2ddbd20b7e5f9c77de92a19b1</anchor>
      <arglist>(tinyxml2::XMLElement *pParentNode, const char *pszElementName, bool *pValue)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReadXML_StringAttribute</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a057845bae2537db10950334dd501d02d</anchor>
      <arglist>(tinyxml2::XMLElement *pNode, const char *pszAttributeName, FCString *pStringValue)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReadXML_IntegerAttribute</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a879550c224c5d0ebe7a14f3636384711</anchor>
      <arglist>(tinyxml2::XMLElement *pNode, const char *pszAttributeName, int *pValue)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReadXML_BoolAttribute</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a51b8fb488d04444e367f30430ecb1001</anchor>
      <arglist>(tinyxml2::XMLElement *pNode, const char *pszAttributeName, bool *pValue)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReadXML_FloatAttribute</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a3bcbdb67c123cf1fc63c068ccef32e04</anchor>
      <arglist>(tinyxml2::XMLElement *pNode, const char *pszAttributeName, float *pValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReadFromXML</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>acc9a627e1efb124dbdaf19bfcf553233</anchor>
      <arglist>(tinyxml2::XMLElement *pParentNode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DebugOutPtr</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>acf2380f50b740233ff79a78a36c91720</anchor>
      <arglist>(const char *pszPrefixText, void *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DebugOutInt</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a959ecc937d4af30eb2db0683848a653f</anchor>
      <arglist>(const char *pszPrefixText, int i)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DebugOutFloat</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>abb59d3133d6ff5a087ab530feac72e65</anchor>
      <arglist>(const char *pszPrefixText, float f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DebugOutTag</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a82c116743f324c06b814de05b7626f9a</anchor>
      <arglist>(const char *pszPrefixText, EXTAG extag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DebugOutHex</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a4ef669d7bc871aa81f5986ee934633ee</anchor>
      <arglist>(const char *pszPrefixText, int i)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DebugOutBin</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>acb993f84c8a792cea4eb1bcbc7e7df1e</anchor>
      <arglist>(const char *pszPrefixText, int i)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DebugOutString</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>a46e7241e6d969a7ed615e397d085c1ac</anchor>
      <arglist>(const char *pszPrefixText, const char *thestring)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DebugOutString</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>af51866b4b37174be81fd8c5ab43ba9db</anchor>
      <arglist>(const char *pszPrefixText, FCString *pString)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DebugOutBool</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>ad88606e8450406124699b23abda86b60</anchor>
      <arglist>(const char *pszPrefixText, bool state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DebugOutBlock</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>af8340cedf266c64ea824cc7a3289e55c</anchor>
      <arglist>(const void *pBuffer, int startoffset, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DebugOutByteArrayBlock</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>aee793f5fc0b1ce8ab4b145e3234e8389</anchor>
      <arglist>(const void *pBuffer, int startoffset, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DebugOut</name>
      <anchorfile>class_____f_c_base.html</anchorfile>
      <anchor>aa1c9b53579e02fdd8f5deea1726c0781</anchor>
      <arglist>(const char *pszLine)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCBaseData</name>
    <filename>class_____f_c_base_data.html</filename>
    <base>__FCBase</base>
    <member kind="function" virtualness="pure">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a3ddb98d5afd4e9ccf7f102419ba245a0</anchor>
      <arglist>() const override=0</arglist>
    </member>
    <member kind="function">
      <type>EDOCID</type>
      <name>GetConnectedDocID</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a5bbea5e6d529f0170bdbe1a48abf093e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>VerifyConnectedDocID</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>ae2342036066ad36b02f373337f7799ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a079831695c81acd9d30e80a9f8857834</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EVERSION</type>
      <name>EnigmaVersion</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a72cee2892c0b13ddac2ae0cfa5ffda2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>DataSizeLoad</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a19b6cc2d1afdcb52f417aaae83e1d159</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>DataSizeSave</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a50759c8d94df137f70f365f348b9b716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a6bdcc52c0f70a66fa7603fce2af27a49</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_CloneFrom</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a7c3bd26c49488fa1994150b88307e277</anchor>
      <arglist>(__FCBaseData *pSource)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CloneMemoryFrom</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>ab996220331dbeb0d29f1d536ce61fb18</anchor>
      <arglist>(__FCBaseData *pSource)</arglist>
    </member>
    <member kind="function">
      <type>const EDataID *</type>
      <name>_GetDataID</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>aa16d993c457b83fa47b8c24bcbbd7b88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_GetLoadedSize</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a9b20bd22eb50314b22b8da6fc202148a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>GetDataBlock</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a3bb57118e833bc69d2718f7396eecf59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EXTAG</type>
      <name>GetCustomTag</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a556df781a2de5ede611e5b4b242e492e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCustomTag</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a7f839b5a7e167a00065c58b83567ac40</anchor>
      <arglist>(EXTAG tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCBaseData</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a3cb6a57aa8b50ffe7865c27d953fddd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~__FCBaseData</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>ab48584d1740e8b491f8691b861212cb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Save</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>ac9fb57999f225ca380980703c541333d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Reload</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>af9d75c3e07bb6d94a3d231fbb36a0e9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeleteData</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>aa22f3f1ac2f4ccbb23dcc39aa382605a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeepDeleteData</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a43826a503aea28bd41e022384644efe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a355e135fa010a7ab9fa3f173077afce6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>LoadLast</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>adddd702075c707f1f9246a5274f6e844</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>LoadNext</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>ab1b85cbc3dc5a5e26d2321d657302cc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>LoadPrevious</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a4eaadbafde9cdeeac875152f1d84eedb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__FCBaseData *</type>
      <name>CreateClone</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a9d9b0d3c2dc6a6d62d104e45e7c7f285</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>ab13555df57774bb20a736390ad486fad</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDataDump</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>ad9a29394086374952a828e15ff8f7d2e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDataByteArrayDump</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a2b9615ac74a336b9e0f98737c4847e93</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDataOffsetDump</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a2d4267f20f550365d9463d3ffa140979</anchor>
      <arglist>(int offset, int size)</arglist>
    </member>
    <member kind="function">
      <type>FCNumbers *</type>
      <name>CreateRawDataDump</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a3ab9b81215ed07e709f3970bbd936472</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void *</type>
      <name>Allocate</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>ae9a12e1344d4de2e308b69382c2fffe4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Deallocate</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a18a4039bcaf1deae6bec1b5fee193d41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsDynamicSize</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>aa9e47c1ac3abdc0d01724b0a88439be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>LoadDataBlock</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a7383d71747b9f09d5f061951a5bb8dfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ClearData</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a1c4bb7f89bd6689428986f9eb8cbde6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual twobyte</type>
      <name>CalcLastInci</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a15361596fe293688ae40c286e9b0f242</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual __FCBaseData *</type>
      <name>CreateObject</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a250dd093f51aed03cbf794cbc07c3baa</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>DataIsLoaded</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a61d42d34a054dfdb90b10141bb199cb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_TagDocumentID</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>abb3edd903dc50fe2bf0957be45708946</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EDOCID</type>
      <name>_connecteddocID</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>acd6db44cf6ccb9a7fd82636973cf2aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>_datablock</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a83cdb887c5212fc9a894ca1099a62369</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_heapdatablock</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>ab56e4a8a7a67f42b87ff698bce5bf197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_loadedsize</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>aff175549efabc68684daf11c7cfab4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EDataID</type>
      <name>_dataid</name>
      <anchorfile>class_____f_c_base_data.html</anchorfile>
      <anchor>a46738377792b605baa81dec7fc18ca67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCBaseStream</name>
    <filename>class_____f_c_base_stream.html</filename>
    <base>__FCBase</base>
  </compound>
  <compound kind="class">
    <name>__FCBrowserBase</name>
    <filename>class_____f_c_browser_base.html</filename>
    <base>__FCIteratorBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_browser_base.html</anchorfile>
      <anchor>a203e84ce36fde06abc128cad5d7dfdc5</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCBrowserBaseData</name>
    <filename>class_____f_c_browser_base_data.html</filename>
    <base>__FCBrowserBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_browser_base_data.html</anchorfile>
      <anchor>a999091302dfd9b47c6c9a6d2c429255e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>__FCBase *</type>
      <name>FindFirst</name>
      <anchorfile>class_____f_c_browser_base_data.html</anchorfile>
      <anchor>a38d584074b99175bf35da89c46baafe8</anchor>
      <arglist>(FCIteratorHandler *pIterator) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEach</name>
      <anchorfile>class_____f_c_browser_base_data.html</anchorfile>
      <anchor>ad70ba40ac9f4c90441486268e2de71d2</anchor>
      <arglist>(FCIteratorHandler *pIterator) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual __FCNoInciOther *</type>
      <name>CreateAnObject</name>
      <anchorfile>class_____f_c_browser_base_data.html</anchorfile>
      <anchor>aa12ad8595fd73295e73b0f12079e674b</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCBrowserNoInciOther</name>
    <filename>class_____f_c_browser_no_inci_other.html</filename>
    <base>__FCBrowserBaseData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_browser_no_inci_other.html</anchorfile>
      <anchor>a078740b262662d33b574e8ccb89250f8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ToEndFrom</name>
      <anchorfile>class_____f_c_browser_no_inci_other.html</anchorfile>
      <anchor>a77fd1d22da5483ffd902b3baed783db3</anchor>
      <arglist>(CMPER elementstart, FCIteratorHandler *pHandler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCount</name>
      <anchorfile>class_____f_c_browser_no_inci_other.html</anchorfile>
      <anchor>ade941bf0f852dc578f46ba4f015279f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>__FCNoInciOther *</type>
      <name>LoadAnElement</name>
      <anchorfile>class_____f_c_browser_no_inci_other.html</anchorfile>
      <anchor>a95fde21ce08ee5f2730cecd5521eed51</anchor>
      <arglist>(CMPER itemno)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCBrowserRegionBase</name>
    <filename>class_____f_c_browser_region_base.html</filename>
    <base>__FCBrowserBase</base>
    <member kind="function">
      <type>int</type>
      <name>ForEachInRegion</name>
      <anchorfile>class_____f_c_browser_region_base.html</anchorfile>
      <anchor>a4266a3a93c5ea5ccb7bd691d42ac0f0e</anchor>
      <arglist>(FCIteratorHandler *pIHandler, FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ForEach</name>
      <anchorfile>class_____f_c_browser_region_base.html</anchorfile>
      <anchor>a5ed869786d9e46cf462848fe574f5d13</anchor>
      <arglist>(FCIteratorHandler *pIHandler)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>RegionIterateCellHandler</name>
      <anchorfile>class_____f_c_browser_region_base.html</anchorfile>
      <anchor>a60af3e25913a2db8a17cbacba32e896c</anchor>
      <arglist>(FCCell *pCell, FCIteratorHandler *pIHandler, FCMusicRegion *pRegion)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCellDetail</name>
    <filename>class_____f_c_cell_detail.html</filename>
    <base>__FCBaseData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_cell_detail.html</anchorfile>
      <anchor>a61e4f06d0a420e764c6487417d2fdd75</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectCell</name>
      <anchorfile>class_____f_c_cell_detail.html</anchorfile>
      <anchor>a5ab458b772ad76573d56b468d98f1c69</anchor>
      <arglist>(FCCell *pCell)</arglist>
    </member>
    <member kind="function">
      <type>FCCell *</type>
      <name>GetConnectedCell</name>
      <anchorfile>class_____f_c_cell_detail.html</anchorfile>
      <anchor>a73885a31d85704a256bc9488abb02faf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_____f_c_cell_detail.html</anchorfile>
      <anchor>a8e007d27c5bcebcf9834d7b6592fc6b9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadLast</name>
      <anchorfile>class_____f_c_cell_detail.html</anchorfile>
      <anchor>a512d8df7c4c5227e76ecd59e48017c10</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadNext</name>
      <anchorfile>class_____f_c_cell_detail.html</anchorfile>
      <anchor>ad450e35d377cd8686f43717a21f37112</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadPrevious</name>
      <anchorfile>class_____f_c_cell_detail.html</anchorfile>
      <anchor>a39329186531d6f3afae616a051c19352</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_____f_c_cell_detail.html</anchorfile>
      <anchor>a95b8c5a67af2c35fe0e3071a62370e51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveNew</name>
      <anchorfile>class_____f_c_cell_detail.html</anchorfile>
      <anchor>a613ad510df48eeb1424b4fe040d7aad9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual eMeas</type>
      <name>GetMeasure</name>
      <anchorfile>class_____f_c_cell_detail.html</anchorfile>
      <anchor>a1e51b8378e45dd0d830eabf0f6a42e83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual twobyte</type>
      <name>GetStaff</name>
      <anchorfile>class_____f_c_cell_detail.html</anchorfile>
      <anchor>aab1651e483aead7a6b23d72af5ed1e5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_____f_c_cell_detail.html</anchorfile>
      <anchor>a5e30468b022a5c4941e2346756e48e89</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCollection</name>
    <filename>class_____f_c_collection.html</filename>
    <base>__FCIteratorBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a419dc5f536257e86b386f0a0861d7a49</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCCollection</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>aa3b85565209da62aa4250aa9761f9f60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~__FCCollection</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a1e0d8cd4dcbee8cf0fed64463bce664b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCount</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a8c47610c54ebedee7dcc5088f5f21048</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a1ec61ac223b0d78d548f2cae87194e04</anchor>
      <arglist>(__FCBase *pNewItem)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UniqueAdd</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>ad229af78caa9d528028cab6b8dd63d77</anchor>
      <arglist>(__FCBase *pNewItem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertItemAt</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>ae686b2ad8b5f9f495cc5b22314e74fd0</anchor>
      <arglist>(__FCBase *pNewItem, int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ElementExists</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>ac57efd77016ee7a4fc45ec7fa570684c</anchor>
      <arglist>(__FCBase *pQueryItem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearAll</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a383ee71de97197f88b45b23b442ac0c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DetachAll</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a25147a2f6aed72d874a5ee7eab2bc01f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__FCBase *</type>
      <name>GetItemAt</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a2021d0725e5805437f23d3b8f7119ff4</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>__FCBase *</type>
      <name>GetLastItem</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a67c9c246cd36200a50776cbae287fab3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__FCBase *</type>
      <name>operator[]</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>af70a080801c68f4c7d7db9150a1ed8af</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetIndexOf</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a60ec4c46c35a1e2e24bfc097f3c23fc0</anchor>
      <arglist>(__FCBase *pObject)</arglist>
    </member>
    <member kind="function">
      <type>__FCBase *</type>
      <name>DetachItemAt</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a86e0c8883cd0f0f428442f255c04a2dc</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ClearItemAt</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a3542e48a03001e2739b8e7ebbb1e4674</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ToEndFrom</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a6c84ab26adf4cf29e75dc0a2ea853624</anchor>
      <arglist>(int index, FCIteratorHandler *pIterator)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEach</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a459ce6fe68972b6eb51d1fbd9924c869</anchor>
      <arglist>(FCIteratorHandler *pIterator) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ForEachIndex</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a88e33f3e25870f81fd26d35d1d41baf3</anchor>
      <arglist>(FCIteratorHandler *pIterator)</arglist>
    </member>
    <member kind="function">
      <type>__FCBase *</type>
      <name>FindFirst</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a0549e00e8c17b98deb2c69388c92e6bc</anchor>
      <arglist>(FCIteratorHandler *pIterator) override</arglist>
    </member>
    <member kind="function">
      <type>__FCBase *</type>
      <name>FindUserData</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a2ed44900f3e722088d155961579ca72d</anchor>
      <arglist>(void *data_to_find)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Sort</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a6e6d06903a272dd3dbf10126e24f3478</anchor>
      <arglist>(FCIteratorHandler *pIterator)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Swap</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a8006be9eb15469e91a160ce64a433b41</anchor>
      <arglist>(int index1, int index2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a2600e956bc2d111211bd455d75b8abf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>MoveFrom</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a23c38b245094cc2bbd686e9c2616cd80</anchor>
      <arglist>(__FCCollection *pOtherCollection, bool unique=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdentical</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a2d3966a75c5c139472608030dae3e089</anchor>
      <arglist>(__FCBase *pCompareObject) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_____f_c_collection.html</anchorfile>
      <anchor>a47d6b6111fafca2c224ed89702fe3c25</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCollectionCellDetail</name>
    <filename>class_____f_c_collection_cell_detail.html</filename>
    <base>__FCCollectionDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_collection_cell_detail.html</anchorfile>
      <anchor>a8f06b05438c589b0b843a5e6fcca8f12</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCCollectionCellDetail</name>
      <anchorfile>class_____f_c_collection_cell_detail.html</anchorfile>
      <anchor>a93cd658cbea6b101a48905498c8f3e32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>LoadAllInCell</name>
      <anchorfile>class_____f_c_collection_cell_detail.html</anchorfile>
      <anchor>a44e1dbfdd821340c53706102e8fe1b9d</anchor>
      <arglist>(FCCell *pCell)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAllForRegion</name>
      <anchorfile>class_____f_c_collection_cell_detail.html</anchorfile>
      <anchor>afa2995d541403bf718fab4d017a9d663</anchor>
      <arglist>(FCMusicRegion *pMusicRegion)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAll</name>
      <anchorfile>class_____f_c_collection_cell_detail.html</anchorfile>
      <anchor>ac9eebb6bcf8a51ba01fb0dd7299e8f6b</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCollectionData</name>
    <filename>class_____f_c_collection_data.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type></type>
      <name>__FCCollectionData</name>
      <anchorfile>class_____f_c_collection_data.html</anchorfile>
      <anchor>a038666b2c0cffe83e6d721399d8c755d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_collection_data.html</anchorfile>
      <anchor>a0bd6d50cc499262d11e4f087b1afeeca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>LoadAll</name>
      <anchorfile>class_____f_c_collection_data.html</anchorfile>
      <anchor>a29982002e204663d6ca14ca93cdb4d63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveAll</name>
      <anchorfile>class_____f_c_collection_data.html</anchorfile>
      <anchor>ac0f65fd6e20fe786c7ce633c9bad2aaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCustomTag</name>
      <anchorfile>class_____f_c_collection_data.html</anchorfile>
      <anchor>aa388e01352b1139d6cb8658c5497ce72</anchor>
      <arglist>(EXTAG tag)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCollectionDetail</name>
    <filename>class_____f_c_collection_detail.html</filename>
    <base>__FCCollectionData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_collection_detail.html</anchorfile>
      <anchor>a21d4ce00110b5cb9828f54ef7f9edb4d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCCollectionDetail</name>
      <anchorfile>class_____f_c_collection_detail.html</anchorfile>
      <anchor>aa4e9972365f20a90f91d616800cb3a9e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCollectionEntryDetail</name>
    <filename>class_____f_c_collection_entry_detail.html</filename>
    <base>__FCCollectionData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_collection_entry_detail.html</anchorfile>
      <anchor>a46cff2e6a8b439edd7bcd6080d35ee0c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCCollectionEntryDetail</name>
      <anchorfile>class_____f_c_collection_entry_detail.html</anchorfile>
      <anchor>ae36bf1650597a3d1cb80a3c8ea46169c</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteEntry</name>
      <anchorfile>class_____f_c_collection_entry_detail.html</anchorfile>
      <anchor>a19004c83e19fb5d4bf99fced85287b45</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAll</name>
      <anchorfile>class_____f_c_collection_entry_detail.html</anchorfile>
      <anchor>ad4f35e89f2e107f164be4694bffe4a9f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveNew</name>
      <anchorfile>class_____f_c_collection_entry_detail.html</anchorfile>
      <anchor>a9481e3dd0793354a832d4b5ca827e4e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAllForEntryNumber</name>
      <anchorfile>class_____f_c_collection_entry_detail.html</anchorfile>
      <anchor>a01c56af4cca3401c0ed177bb5f196c3a</anchor>
      <arglist>(ENTNUM entnum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DestroyItemAt</name>
      <anchorfile>class_____f_c_collection_entry_detail.html</anchorfile>
      <anchor>acd43e64d40d64c37fbc6031f0eef4578</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCollectionGlobal</name>
    <filename>class_____f_c_collection_global.html</filename>
    <base>__FCCollectionData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_collection_global.html</anchorfile>
      <anchor>a3323987a6cd3cd74e12a2ee275ed4cfb</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCollectionInciOther</name>
    <filename>class_____f_c_collection_inci_other.html</filename>
    <base>__FCCollectionData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_collection_inci_other.html</anchorfile>
      <anchor>a2c8ef569ad0276f57b580889f9697a3c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeleteDataForItem</name>
      <anchorfile>class_____f_c_collection_inci_other.html</anchorfile>
      <anchor>a51c8e5d06745c6223b35c8ccc3cf4fa3</anchor>
      <arglist>(CMPER cmper)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveDataAs</name>
      <anchorfile>class_____f_c_collection_inci_other.html</anchorfile>
      <anchor>a49b8a538cf2cb68d9b7df03a83d24de3</anchor>
      <arglist>(CMPER cmperfrom, CMPER cmperto)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>LoadAllForItem</name>
      <anchorfile>class_____f_c_collection_inci_other.html</anchorfile>
      <anchor>a1eebd0dd5fdde343e5dcb84b1753e303</anchor>
      <arglist>(CMPER cmper)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveAllForItem</name>
      <anchorfile>class_____f_c_collection_inci_other.html</anchorfile>
      <anchor>af94298042d784dbe1742890b3baac83b</anchor>
      <arglist>(CMPER cmper)</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>SaveAllAsNew</name>
      <anchorfile>class_____f_c_collection_inci_other.html</anchorfile>
      <anchor>afb9d3dd48cde4134d0bef8b47c7d2bc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__FCInciOther *</type>
      <name>FindItemNo</name>
      <anchorfile>class_____f_c_collection_inci_other.html</anchorfile>
      <anchor>a7620fd8a852ab73f49c35fd7f70e4f70</anchor>
      <arglist>(CMPER cmper, twobyte inci)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCollectionNoInciCellDetail</name>
    <filename>class_____f_c_collection_no_inci_cell_detail.html</filename>
    <base>__FCCollectionDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_collection_no_inci_cell_detail.html</anchorfile>
      <anchor>a645de62da2593f3af30e1d45a59aaec3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCCollectionNoInciCellDetail</name>
      <anchorfile>class_____f_c_collection_no_inci_cell_detail.html</anchorfile>
      <anchor>a769f8e9320e6c043f4bc35a011a29a92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAllInRegion</name>
      <anchorfile>class_____f_c_collection_no_inci_cell_detail.html</anchorfile>
      <anchor>a2a51de1b8ce694c5fa40dd3a0f510867</anchor>
      <arglist>(FCMusicRegion *pMusicRegion)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCollectionNoInciDetail</name>
    <filename>class_____f_c_collection_no_inci_detail.html</filename>
    <base>__FCCollectionDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_collection_no_inci_detail.html</anchorfile>
      <anchor>a2f7719b554cfcc2073dbfb2b70042ea5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCCollectionNoInciDetail</name>
      <anchorfile>class_____f_c_collection_no_inci_detail.html</anchorfile>
      <anchor>af47ab412bedfa51c54d0a1baec2070a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>LoadAllForItem</name>
      <anchorfile>class_____f_c_collection_no_inci_detail.html</anchorfile>
      <anchor>a2793076859cd3ad14e1c9e5f08f1121a</anchor>
      <arglist>(CMPER cmper1, CMPER cmper2base=1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCollectionNoInciOther</name>
    <filename>class_____f_c_collection_no_inci_other.html</filename>
    <base>__FCCollectionData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_collection_no_inci_other.html</anchorfile>
      <anchor>a40cce3e04c54dccdce748ba37c0c8adb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>__FCNoInciOther *</type>
      <name>FindItemNo</name>
      <anchorfile>class_____f_c_collection_no_inci_other.html</anchorfile>
      <anchor>a979461aede618c77af7a0b2c291f6c30</anchor>
      <arglist>(CMPER cmper)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCollectionPrefs</name>
    <filename>class_____f_c_collection_prefs.html</filename>
    <base>__FCCollectionData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_collection_prefs.html</anchorfile>
      <anchor>add5b013db7e5ecb79eb0394baf9ea5dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCCollectionPrefs</name>
      <anchorfile>class_____f_c_collection_prefs.html</anchorfile>
      <anchor>a3679fd8a3d4de42723086fe29b56b19d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCollectionTinyXML</name>
    <filename>class_____f_c_collection_tiny_x_m_l.html</filename>
    <base>__FCCollection</base>
    <member kind="function" virtualness="pure">
      <type>virtual __FCBase *</type>
      <name>CreateElement</name>
      <anchorfile>class_____f_c_collection_tiny_x_m_l.html</anchorfile>
      <anchor>afd1a709b92717fbca1f0ffbe194f6b42</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StoreCollectionToXML</name>
      <anchorfile>class_____f_c_collection_tiny_x_m_l.html</anchorfile>
      <anchor>ae9645f653ed40d148513a28680200f48</anchor>
      <arglist>(tinyxml2::XMLElement *pParentNode, const char *pszNameString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReadCollectionFromXML</name>
      <anchorfile>class_____f_c_collection_tiny_x_m_l.html</anchorfile>
      <anchor>a1832f6379514e077e7bb807f72d56288</anchor>
      <arglist>(tinyxml2::XMLElement *pParentNode, const char *pszNameString)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCompositeTimeSigBottomElement</name>
    <filename>class_____f_c_composite_time_sig_bottom_element.html</filename>
    <base>__FCInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_composite_time_sig_bottom_element.html</anchorfile>
      <anchor>a1b9bf2cbe02df52581d36956bc678320</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_____f_c_composite_time_sig_bottom_element.html</anchorfile>
      <anchor>aacd6bc433a3d090b9825e159852611a0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCCompositeTimeSigBottomElement</name>
      <anchorfile>class_____f_c_composite_time_sig_bottom_element.html</anchorfile>
      <anchor>a17efc911c7ba5dfb95a4280e78a36812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ECompositeTimeLower *</type>
      <name>_GetFirstRecordPtr</name>
      <anchorfile>class_____f_c_composite_time_sig_bottom_element.html</anchorfile>
      <anchor>af2d727dd004df6ec2d63b70f8034c5a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ECompositeTimeLower *</type>
      <name>_GetSecondRecordPtr</name>
      <anchorfile>class_____f_c_composite_time_sig_bottom_element.html</anchorfile>
      <anchor>a51a91fc21529593d258ed6be36432a5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ECompositeTimeLower *</type>
      <name>_GetThirdRecordPtr</name>
      <anchorfile>class_____f_c_composite_time_sig_bottom_element.html</anchorfile>
      <anchor>a24f47dbb96a1e3980d0b463af92a24ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_____f_c_composite_time_sig_bottom_element.html</anchorfile>
      <anchor>a35f2a479d4995125f5ee743dbb3f2aaf</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCCompositeTimeSigTopElement</name>
    <filename>class_____f_c_composite_time_sig_top_element.html</filename>
    <base>__FCInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_composite_time_sig_top_element.html</anchorfile>
      <anchor>a7ffff88c1713c22c468e227951e2d151</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_____f_c_composite_time_sig_top_element.html</anchorfile>
      <anchor>aa8918c694f6c5686b3e8a2d48ddc4f17</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCCompositeTimeSigTopElement</name>
      <anchorfile>class_____f_c_composite_time_sig_top_element.html</anchorfile>
      <anchor>a0828b27879933c52df1a32d5203dbc58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ECompositeTimeUpper *</type>
      <name>_GetFirstRecordPtr</name>
      <anchorfile>class_____f_c_composite_time_sig_top_element.html</anchorfile>
      <anchor>a60ab182e24a7bed12c924bbe794697d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ECompositeTimeUpper *</type>
      <name>_GetSecondRecordPtr</name>
      <anchorfile>class_____f_c_composite_time_sig_top_element.html</anchorfile>
      <anchor>ad69b7975a074176ded7f86a9ec2a808e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_____f_c_composite_time_sig_top_element.html</anchorfile>
      <anchor>a4c1279953938b2ac35e74e6df7b15491</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCDetail</name>
    <filename>class_____f_c_detail.html</filename>
    <base>__FCBaseData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_detail.html</anchorfile>
      <anchor>aec55e80d85f14a512936764658a7a573</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCEntryDetail</name>
    <filename>class_____f_c_entry_detail.html</filename>
    <base>__FCBaseData</base>
    <member kind="function">
      <type></type>
      <name>__FCEntryDetail</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>a9aa96e760548b91c0a62112bb0d61e41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>a2d7bc906e2bc3fa7f42dabd7cfbd3007</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntnumAndInci</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>ae993ba4354bdf90bc010a6cd605fbdd9</anchor>
      <arglist>(ENTNUM entnum, twobyte inci)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>a2b625653b47ca646a878837e94fe7328</anchor>
      <arglist>(ENTNUM entnum, twobyte inci)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Reload</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>ab47b1063387a89a244ec45b2095c766e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAs</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>a6390c8ca11894dd84f6b21a6bd8bbfd3</anchor>
      <arglist>(ENTNUM entnum, twobyte inci)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>a63538b5b69ff9e66333dac1e6b01de5c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadNext</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>af2985ef9cb7835a238afaafa2894c786</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetNoteEntry</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>a57effd98d57f20fcf61ce9f0b417aeda</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>GetNoteEntry</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>a9adc0d9b421b04e5bf2cdbf92e453ce0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetItemInci</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>a714a0faa4d876989e2795739b3f06683</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ENTNUM</type>
      <name>GetItemEntryNumber</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>add76e6ea192f80be223e3aaba6c2ed2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveNew</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>a123448ac5cf510c05568fed350607bb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_____f_c_entry_detail.html</anchorfile>
      <anchor>a9f14d5422f786c11e4cbc1d78d2ecbdd</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCEntryDetailNoteID</name>
    <filename>class_____f_c_entry_detail_note_i_d.html</filename>
    <base>__FCEntryDetail</base>
    <member kind="function">
      <type></type>
      <name>__FCEntryDetailNoteID</name>
      <anchorfile>class_____f_c_entry_detail_note_i_d.html</anchorfile>
      <anchor>a125c821207e5fdf09ea043945b5451b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_entry_detail_note_i_d.html</anchorfile>
      <anchor>aabc9b467a830518c29faf85622d6583c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNew</name>
      <anchorfile>class_____f_c_entry_detail_note_i_d.html</anchorfile>
      <anchor>aaec696d010d0d79143a3caa28756aa6a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAt</name>
      <anchorfile>class_____f_c_entry_detail_note_i_d.html</anchorfile>
      <anchor>acd3fe2100995c8a81b2efa4957a3cd4f</anchor>
      <arglist>(FCNote *pNote)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadAt</name>
      <anchorfile>class_____f_c_entry_detail_note_i_d.html</anchorfile>
      <anchor>a580c1310981bf25ac565b806c75bbfe4</anchor>
      <arglist>(FCNote *pNote)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EraseAt</name>
      <anchorfile>class_____f_c_entry_detail_note_i_d.html</anchorfile>
      <anchor>a8955b1c61f5ceb974a3b5b47d9e7ebf6</anchor>
      <arglist>(FCNote *pNote)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCFileDialogBase</name>
    <filename>class_____f_c_file_dialog_base.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type></type>
      <name>__FCFileDialogBase</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>ae16f51a75248c70df7ec1c7003a18538</anchor>
      <arglist>(FCUI *pUI)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>a7c70de1171f191579b94f76ec005a2fc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFilter</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>a117a950435ebfc8493b5df4d81dd64b4</anchor>
      <arglist>(FCString *pFilter, FCString *pFilterDescription)</arglist>
    </member>
    <member kind="function">
      <type>FCStrings *</type>
      <name>_GetFilters</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>ab29fca751fc3fc69236d5edc11e2e1cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDefaultFilter</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>a979a1622ccd07c82c5d43c51c92c4d1a</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWindowTitle</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>ab3d6acd644088ed5750625feef612cee</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileName</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>afe152ef17089ca265d9edadd4cfb7b6f</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInitFolder</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>ad671f2ee9f6872abe8dce9243bbb51cf</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetWindowTitle</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>a20c8c311501d1e47fb256291b22ac0bd</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFileName</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>a2210048dc506de596d118fdc8acfb22e</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetInitFolder</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>afb14c07c0cdfc78626a2f56c33773392</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssureFileExtension</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>a3fac5e0a89db68cf6d46feb0ec22836e</anchor>
      <arglist>(const char *pszSuffix)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>class_____f_c_file_dialog_base.html</anchorfile>
      <anchor>a4e061f9facf2de6a398be0fbec750e6c</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCGlobals</name>
    <filename>class_____f_c_globals.html</filename>
    <base>__FCBaseData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_globals.html</anchorfile>
      <anchor>aa24f99d468a1bdd7b9d76bd60fdbe35e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCGlobals</name>
      <anchorfile>class_____f_c_globals.html</anchorfile>
      <anchor>a7274944e94cb79ef122c92f8a17bd611</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_____f_c_globals.html</anchorfile>
      <anchor>a57b755f99d0c9e5218751a74ad08ce27</anchor>
      <arglist>(twobyte globalnumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_____f_c_globals.html</anchorfile>
      <anchor>a6dde05bf99a46aa9e2cb9274678984cc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadNext</name>
      <anchorfile>class_____f_c_globals.html</anchorfile>
      <anchor>a01b862fada55589e48778e234d423f79</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCInci</name>
    <filename>class_____f_c_inci.html</filename>
    <base>__FCBaseData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_inci.html</anchorfile>
      <anchor>a0bdf49fa3d9f9ea156abab01a569575e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_____f_c_inci.html</anchorfile>
      <anchor>ae13961839fc1cbb4ea32bafea6b4a19c</anchor>
      <arglist>(CMPER cmper, twobyte inci)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCInciOther</name>
    <filename>class_____f_c_inci_other.html</filename>
    <base>__FCOther</base>
    <member kind="function">
      <type></type>
      <name>__FCInciOther</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>ab3f15b60fb8064b393ec8633ce4fc8b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>afa5656126f8e9d29550e2a22654860aa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>a534366928318dc91b2af229cd7470fe7</anchor>
      <arglist>(CMPER itemno, twobyte inci)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcLastInci</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>a5d242bb6c59383e3cc600bdee8a7c2a0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Reload</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>aa945fc956d92400f7fdc25ea395159b7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveNew</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>a04f52d5b15ac0b62fc51d55ce338b534</anchor>
      <arglist>(CMPER itemno)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetCmper</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>ae656489982d4245003e7873da6641a89</anchor>
      <arglist>(CMPER cmper)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetItemCmper</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>a69de799dd43a798c41b0cd1449da9e41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetItemInci</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>a294b1119e23c3d5ab20319e3e459a7b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual eMeas</type>
      <name>GetMeasure</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>a6c0c26f8affdefc964674c623672ed17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual eStaff</type>
      <name>GetStaff</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>aa6c67951a61b36f964b97cea73e51fb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasStaffValue</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>aaf11e22880a50461ec504f9b7af9f081</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_____f_c_inci_other.html</anchorfile>
      <anchor>a89a9fb55f232b67bb1bb73330c163d64</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCIteratorBase</name>
    <filename>class_____f_c_iterator_base.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_iterator_base.html</anchorfile>
      <anchor>a175d1e8c57b6f1885018d275dfc47382</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCIteratorBase</name>
      <anchorfile>class_____f_c_iterator_base.html</anchorfile>
      <anchor>a485f8c37adc0654512f05a7c9fdc798d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>ForEach</name>
      <anchorfile>class_____f_c_iterator_base.html</anchorfile>
      <anchor>a5d103b53387552a313728ae43d64dc8f</anchor>
      <arglist>(FCIteratorHandler *pIterator)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual __FCBase *</type>
      <name>FindFirst</name>
      <anchorfile>class_____f_c_iterator_base.html</anchorfile>
      <anchor>a81258cf7513023631d4f1c24b8c780fe</anchor>
      <arglist>(FCIteratorHandler *pIterator)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCLyricsBase</name>
    <filename>class_____f_c_lyrics_base.html</filename>
    <base>FCRawText</base>
    <member kind="function">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_____f_c_lyrics_base.html</anchorfile>
      <anchor>ae7b75f809a9bbe2f8673387c3bc7d723</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_lyrics_base.html</anchorfile>
      <anchor>a3ba580c47c68f275822994b60416bd23</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCNoInciCellDetail</name>
    <filename>class_____f_c_no_inci_cell_detail.html</filename>
    <base>__FCCellDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_no_inci_cell_detail.html</anchorfile>
      <anchor>a8ce6f3e071d9036954a75819a5af6ae0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_____f_c_no_inci_cell_detail.html</anchorfile>
      <anchor>a86e084539b1448b89248c3c0c36e41b1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCNoInciDetail</name>
    <filename>class_____f_c_no_inci_detail.html</filename>
    <base>__FCDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_no_inci_detail.html</anchorfile>
      <anchor>ad76e52ce1b3c64dbb870d0578c770372</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_____f_c_no_inci_detail.html</anchorfile>
      <anchor>a3a3f2bfb26068c69b38b84b8b2ec2299</anchor>
      <arglist>(CMPER cmper1, CMPER cmper2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNew</name>
      <anchorfile>class_____f_c_no_inci_detail.html</anchorfile>
      <anchor>a5b88c7b3d2a48342a07365e4fd56b01d</anchor>
      <arglist>(CMPER cmper1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_____f_c_no_inci_detail.html</anchorfile>
      <anchor>a8644237606723ae2df3e9bca03888083</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCNoInciOther</name>
    <filename>class_____f_c_no_inci_other.html</filename>
    <base>__FCOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_no_inci_other.html</anchorfile>
      <anchor>afdd012af497eb6a59d0fe7f13f2cfd7b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCNoInciOther</name>
      <anchorfile>class_____f_c_no_inci_other.html</anchorfile>
      <anchor>aad5e6a48213ebb70d1e49a0df0517b8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>class_____f_c_no_inci_other.html</anchorfile>
      <anchor>a1429959c85002c3a59b0f156c03ad3fb</anchor>
      <arglist>(CMPER itemno)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Reload</name>
      <anchorfile>class_____f_c_no_inci_other.html</anchorfile>
      <anchor>a89d2cf6e56833d57e7c302aa4c555469</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveAs</name>
      <anchorfile>class_____f_c_no_inci_other.html</anchorfile>
      <anchor>aed36e28b74879aec629f988547d1aabd</anchor>
      <arglist>(CMPER itemno)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeepSaveAs</name>
      <anchorfile>class_____f_c_no_inci_other.html</anchorfile>
      <anchor>a76c1db1031e3fcc830dfe8d161e2b708</anchor>
      <arglist>(CMPER itemno)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeepDeleteData</name>
      <anchorfile>class_____f_c_no_inci_other.html</anchorfile>
      <anchor>af68e6c11595666743466fa591d569603</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveNew</name>
      <anchorfile>class_____f_c_no_inci_other.html</anchorfile>
      <anchor>a6a2ac970fdda00209989cb5caa072e4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CMPER</type>
      <name>GetItemNo</name>
      <anchorfile>class_____f_c_no_inci_other.html</anchorfile>
      <anchor>ab07d9316f72f704f116e63f97f2a436f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetItemNo</name>
      <anchorfile>class_____f_c_no_inci_other.html</anchorfile>
      <anchor>a03c6646a352d0d4512a91f1902d2da3a</anchor>
      <arglist>(CMPER cmper)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_____f_c_no_inci_other.html</anchorfile>
      <anchor>a36797f67efc52a4db8f82151ed1970ae</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_____f_c_no_inci_other.html</anchorfile>
      <anchor>a91ed94fb6627579a4fe6a546921dff58</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCNoteEntryCollection</name>
    <filename>class_____f_c_note_entry_collection.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_note_entry_collection.html</anchorfile>
      <anchor>abede4aa239f58ee2bd2629fd87d93bc6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>FindEntryNumber</name>
      <anchorfile>class_____f_c_note_entry_collection.html</anchorfile>
      <anchor>a48dee7196f8050fa5a8f7f63337a0cf6</anchor>
      <arglist>(ENTNUM entnum)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>GetItemAt</name>
      <anchorfile>class_____f_c_note_entry_collection.html</anchorfile>
      <anchor>a92abfc0f67ebbba2331ed46454fe4be3</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCOther</name>
    <filename>class_____f_c_other.html</filename>
    <base>__FCBaseData</base>
    <member kind="function">
      <type>void</type>
      <name>SetCmperAndInci</name>
      <anchorfile>class_____f_c_other.html</anchorfile>
      <anchor>ab90dda8254f4cb916fe2d0c432e9c7ea</anchor>
      <arglist>(CMPER cmper, twobyte inci)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_other.html</anchorfile>
      <anchor>aad17ffaee4f04f49e94da6243202360d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCOther</name>
      <anchorfile>class_____f_c_other.html</anchorfile>
      <anchor>ad000170fb21f768b26489b04e9700b7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdenticalRecord</name>
      <anchorfile>class_____f_c_other.html</anchorfile>
      <anchor>aab5498feaf1db2df197a6188a8878b8f</anchor>
      <arglist>(__FCOther *pCompare)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCOtherText</name>
    <filename>class_____f_c_other_text.html</filename>
    <base>FCRawText</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_other_text.html</anchorfile>
      <anchor>a47767d1562702ec567003f5222a30989</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetItemNo</name>
      <anchorfile>class_____f_c_other_text.html</anchorfile>
      <anchor>a8980d429700dcae3e5d0a5bd47c60c4a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetRawTextNumber</name>
      <anchorfile>class_____f_c_other_text.html</anchorfile>
      <anchor>ac448dd35d5dc02e67f37158d5f17fff8</anchor>
      <arglist>(twobyte number) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_____f_c_other_text.html</anchorfile>
      <anchor>abd63b99bc8b58a172f1d9661df54eb3f</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCPrefsBase</name>
    <filename>class_____f_c_prefs_base.html</filename>
    <base>__FCBaseData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_prefs_base.html</anchorfile>
      <anchor>aecd36c14ec77186ba178d9c5af810a8b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Reload</name>
      <anchorfile>class_____f_c_prefs_base.html</anchorfile>
      <anchor>a8577911b5f3e7ea185739f6404e1236e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>class_____f_c_prefs_base.html</anchorfile>
      <anchor>afc9c4a28a220f169b1f4a91a87c747d7</anchor>
      <arglist>(twobyte prefsno=1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_____f_c_prefs_base.html</anchorfile>
      <anchor>a386d5c4d2cf5c45ce6333581cf1462f4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_____f_c_prefs_base.html</anchorfile>
      <anchor>ad490524683379c508bb163ffcb191a40</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetItemNo</name>
      <anchorfile>class_____f_c_prefs_base.html</anchorfile>
      <anchor>ad36db2829fbcd56ef34673248db80dca</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCStaffBase</name>
    <filename>class_____f_c_staff_base.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>STAFFNOTATION_STYLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a262557f0eaf1ef6150e5420f6d09e480</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFNOTATION_NORMAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a262557f0eaf1ef6150e5420f6d09e480ac74e281cd6ca28aa7e084e6ba8cf66b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFNOTATION_PERCUSSION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a262557f0eaf1ef6150e5420f6d09e480a4a1675cf20416476aa803e1a6a73dcef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFNOTATION_TABLATURE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a262557f0eaf1ef6150e5420f6d09e480a16111c542ec5856331291dd15811931e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ALTERNATE_STAFF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_NORMAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881a7333a0fdd44545589d87cb259658fb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_SLASHBEATS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881a58723d3abd66041d52cab5f85f75bab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_RHYTHMIC</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881a21c7dacbe187ca219f79e79ee4e7f872</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_ONEBARREPEAT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881afbc94515ca8663f7e4ce84e19b7aaea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_TWOBARREPEAT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881abb10da5cb5336dc21ed0032a116b3098</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_BLANKNOTATIONRESTS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881a23de196883ea616f4dfae37218273512</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_BLANKNOTATION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881aa62f23dde6aeefdcfd771429bf5ddb1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>STAFF_HIDEMODES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af6d2a995255b54fc33171caf5842f2fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFHIDE_NORMAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af6d2a995255b54fc33171caf5842f2fbad8cb2380bda53efa4dda138ac5b52ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFHIDE_SCORE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af6d2a995255b54fc33171caf5842f2fba5b2cc91472de2b75066a60602af60dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFHIDE_SCORE_AND_PARTS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af6d2a995255b54fc33171caf5842f2fbac85793881e5d7a283d298ad331a2767f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFHIDE_CUTAWAY</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af6d2a995255b54fc33171caf5842f2fbaf3df020e892a4e0623f666d666cca604</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFNOTATION_NORMAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a262557f0eaf1ef6150e5420f6d09e480ac74e281cd6ca28aa7e084e6ba8cf66b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFNOTATION_PERCUSSION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a262557f0eaf1ef6150e5420f6d09e480a4a1675cf20416476aa803e1a6a73dcef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFNOTATION_TABLATURE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a262557f0eaf1ef6150e5420f6d09e480a16111c542ec5856331291dd15811931e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_NORMAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881a7333a0fdd44545589d87cb259658fb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_SLASHBEATS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881a58723d3abd66041d52cab5f85f75bab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_RHYTHMIC</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881a21c7dacbe187ca219f79e79ee4e7f872</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_ONEBARREPEAT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881afbc94515ca8663f7e4ce84e19b7aaea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_TWOBARREPEAT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881abb10da5cb5336dc21ed0032a116b3098</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_BLANKNOTATIONRESTS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881a23de196883ea616f4dfae37218273512</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALTSTAFF_BLANKNOTATION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f78266004e17852e58d94f14c33f881aa62f23dde6aeefdcfd771429bf5ddb1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFHIDE_NORMAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af6d2a995255b54fc33171caf5842f2fbad8cb2380bda53efa4dda138ac5b52ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFHIDE_SCORE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af6d2a995255b54fc33171caf5842f2fba5b2cc91472de2b75066a60602af60dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFHIDE_SCORE_AND_PARTS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af6d2a995255b54fc33171caf5842f2fbac85793881e5d7a283d298ad331a2767f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFHIDE_CUTAWAY</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af6d2a995255b54fc33171caf5842f2fbaf3df020e892a4e0623f666d666cca604</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae58fef61c33aa6e77d7cd2b2e1b1e75d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIgnoreKeySig</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3cebba54f581a61276ee7139f8c87874</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIndependentTimeSig</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a753b6421865a621ab7c4429b9b027516</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIndependentKeySig</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab31a5974f1f68cf3ded409a590e7cea5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowMeasureNumbers</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5e5d45d2b3184105ebde42fb6b055521</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowKeySignatures</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aed71999d7fa06aea1441591f2038dfc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowTimeSignatures</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a25eaf46784b521a4caafb77a618a0403</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowScoreTimeSignatures</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2a53344b583dd4fa78dabe2509b90f37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowPartTimeSignatures</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0d7177184841cf3220cfc8c4b719dbf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowClefs</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a354dc83659280dac072f6fa7c9a22f6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowChords</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6d562cfa3fd0e202b3a10d8e058560b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowBarlines</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aee17a3eda3dd3db3d689030eabdccdd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowTextRepeats</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0c471d56a8df5452c9783546ac841cae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowRepeats</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3743ae20c89532f370faf8ba8eef7666</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowScoreStaffNames</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa7c6e8949f9169522007d0e0b0297036</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakBarlines</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6e8876e3b7ec478a93c7222fa3269291</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakRepeatBarlines</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2ba60230303b16b212b6358f80727c31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowAugmentationDots</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abbf968606fcd0d89fe36e96dcad1bec6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIndependentFont</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa37ac682d3490cc9a00a33167d6db7d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowNoteColors</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a531ce7e7f467ecc61e1911db03542763</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowNoteShapes</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6021f88d82017363b602ff8d91ade109</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHalfRestPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab047a9f02b51b648afef8cda61e75e5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetOtherRestPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad43c6d7ac925364e4b3fdc258ba7649e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetWholeRestPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3618563a41b1375a7d786164a264bd2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetDoubleWholeRestPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac86247f3c167b20e369bd69fa81aef74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStemReversalPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a50bf34e3ea9055c91665d9f14bfd43d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowTopRepeatDot</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a04740e51886f8d65abe7e423ea417a0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowBottomRepeatDot</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adb5b9852b94eed0b4515a35186f1da5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTopRepeatDotPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5ac2d5f0f914befbbae787299c7a9480</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBottomRepeatDotPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab058e8a0f9311d298e79c2bec43d5383</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTransposeChromatic</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a217f8f65d30eb1e1fe5a110f75c0166e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTransposeUseClef</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab3a70a29c0616d695d082de5929b1830</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowLyrics</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad75ffb2b8c48dececfb122d291d62e76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowRests</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6b1a5630e1e832c7e0748a32888602ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowPartStaffNames</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a179d0f732a60e39943ceac159dc2f524</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowStems</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac7584826efd5726f65721bc82ce2a45b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowTies</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a243c076c0ca498d45a7ea0c9e317da8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAltNotationDisplayOtherLayerNotes</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a06291099e828a73c0a9c760ef0b2def2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTransposeSimplifyKey</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abd0265c19fbea9c55ff1a8e41dbfee19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDisplayEmptyRests</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac6193a331ef1da43285e77c85388d36e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFlatBeams</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab4955214e300142760ac8c12f111074e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowTuplets</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5dec9563a6b6d7313a54050eadc33dcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowOnlyFirstMeasureClef</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2109c56ddadfa28f5f4e4479ba097e6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFretLetters</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4694a12d757bb77bcbaac77cc5898489</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakTablatureLines</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae2539cb4d24c044fe1314a5019863bb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowFretboards</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a715d60055f77573a6bde90a9e0440e0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>STAFFNOTATION_STYLE</type>
      <name>GetNotationStyle</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af0e617397bfd3a7a762d939c61dc094f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAllowHiding</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1fb16c0d725b2df2b382f7d8b68d3e80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTransposeInterval</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a56538bb382e30ec5a7de1a220db7d293</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowStaffLines</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa0d70769f136f7b36d8a93d627d90ae9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLineCount</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae909d751aef051a437dd2e171637cbf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetLineSpacing</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a87d0dd4cef7675023038af8d721cdf2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>__FCStaffBase::ALTERNATE_STAFF</type>
      <name>GetAltNotationStyle</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3ecb3533bef89a350e6d5fc5837ea1a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAltNotationLayer</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab031cd937dc3e59050dd96726febe3aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAltShowArticulations</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1833760cb298508702542f368bddc028</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAltShowLyrics</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3117f6572691e3b17df641c0c2177669</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAltShowSmartShapes</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3ca4de2d81d08cbbd585031b030d5ca6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAltShowExpression</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae425f8da8080363b1c5411a6f084b9a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAltShowOtherNotes</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a94614127ca2ef2fa6b05a3d668eb6a99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAltShowOtherArticulations</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab93a7987daf54415376d0bd6713bb1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAltShowOtherLyrics</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a92aec25a45bbf441096efa0b957c6400</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAltShowOtherSmartShapes</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa46cff5f6447545c789561797fc7e9ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAltShowOtherExpressions</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af69d3f288592f3a4d97bdbf63b695d93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAltRhythmStemsUp</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa82d9a01acd1fa955d842fe428a7e4aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAltSlashDots</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a28e4a317e8f66641ee0d69b99fe8aa6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTransposeClefIndex</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7832407fbf837bdf63c46cf19a3ca40b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetDefaultClef</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad2a6488ca27804f641c751459cb876ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>STAFF_HIDEMODES</type>
      <name>GetHideMode</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5e97ee05c063dd2e2f69ad005ca5314f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRedisplayOtherLayerAccidentals</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a481fa5f6ddd3cee1bb339d7c0ca1c36e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNoKeySigShowAccidentals</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab4d6b27d19be64efc41ef571be680671</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetAbbreviatedNameID</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a56a4a4c644156799b69e37802088480a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetFullNameID</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a06959bcae181c74c49fc6dc03d755a7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetCapoPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0b81455a38fa21349043da31f36f79bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLowestFret</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a96fb7a74d060d8450954c08e59c9eae3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetVerticalFretOffset</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af4f8df20b8263e084808182a4c2f91cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetFretInstrumentDefID</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adb3d3d9b23631c022296f725bda1c94f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetBottomBarlineOffset</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acaef37d1249f855a9b83ad5d667cd869</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTopBarlineOffset</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7039ab1d230be0b009ba079c7b283400</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetInstrumentUUID</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aaa88befb0e78a7342d4cd7f791099354</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIgnoreKeySig</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1fd4496f6ed7a870f055b4b92c9d2581</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIndependentTimeSig</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5b027ef107a9e983162009d625e90667</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowMeasureNumbers</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa21e66280ae794b7768494698fb6dc00</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowKeySignatures</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acd2e00ca3ffd2231610917bd87238aa2</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowTimeSignatures</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af4440b5bfb8cafb832bb897b28e2f947</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowScoreTimeSignatures</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae86a4a51bfa59e8d5bcf914dabeeb30a</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowPartTimeSignatures</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae4ead9deadfa41e7a4321858a1103c5d</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowClefs</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aafb99ffc4a8554ff182072402854a0f2</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowChords</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aaea2e5e10e63c41778e1523c80cedabe</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowBarlines</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a870c928f2a80a75f0c601bb335d5e78e</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowTextRepeats</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3cde9e51d6fd78f17496cba5894f1226</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowRepeats</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5c979be146c986c5c23007787f46ff51</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowScoreStaffNames</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aacc802f61399c426eb0787d6f1f93772</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakBarlines</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a35081e87b487d2ed785539d6373685c0</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakRepeatBarlines</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af7605ccd95364293ae886e6c99d8bf8a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowAugmentationDots</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a84d4c6c42cd2169142923885003432a8</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIndependentFont</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adfa4d93fd5a49c78a58b28fc07711814</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowNoteColors</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af1636b2991fe9e1bd00f45cd034cdd24</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowNoteShapes</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac14ac93a310e17455cc8b2d34035e80e</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHalfRestPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a03b38a9615321c18707ae5e679298932</anchor>
      <arglist>(twobyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOtherRestPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0d618abaf27b142d1b4e30b9527b0ebb</anchor>
      <arglist>(twobyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWholeRestPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a40bb2bdddaa37e6ce8cd6f622172fbdb</anchor>
      <arglist>(twobyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDoubleWholeRestPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4361bc6729e471f1ec535ab6dce2e79f</anchor>
      <arglist>(twobyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStemReversalPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>add4b2ff7f1ee4cad8fe06b1ad38114d8</anchor>
      <arglist>(twobyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowTopRepeatDot</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa69cd2070d1783ee039dc6c03ed8bf89</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowBottomRepeatDot</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a91b4279ca57c8fc80908cb126e1c52b7</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTopRepeatDotPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab3e98ece49310e462f12b948449c0ff5</anchor>
      <arglist>(twobyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBottomRepeatDotPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ace664e0a9929d0603f322c2e7887851d</anchor>
      <arglist>(twobyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTransposeChromatic</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a68eac73b54c94223de72e99955f09b21</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTransposeUseClef</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae9b8b9c3b12d84fea116575cc613a80e</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowFretboards</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa8262b3a1c1e393c01b5379767497178</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowLyrics</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aafd53b69b9390785b812995a02244aff</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowRests</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4bd443a8409d2576e5072a2ba0fe79ab</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowPartStaffNames</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad009328388834870281879bbb64d4546</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowStems</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8264809e505ba78620486d04cb9e7008</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowTies</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a90290bcace4a7297801c8f84cf9bb6a0</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltNotationDisplayOtherLayerNotes</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa341cb2b537333c85cba8d0eb43f38d0</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTransposeSimplifyKey</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa31c85b46af1d92ea19c92f67bb112cf</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDisplayEmptyRests</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad287235a6a428de8c488375b90c4dd2e</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlatBeams</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8145c3677eb4cddfa2848940988c2774</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowTuplets</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adcec9625feea6a56dd6267793434c67f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowOnlyFirstMeasureClef</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a61c9f46cbadbc2bd6d3dce3267f580dc</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretLetters</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a50bcd399fcde9bd1c2270ddd03e85286</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakTablatureLines</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afb7cd0545286a1a36dde5e34c5da8fe5</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNotationStyle</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8b02debe6e5fe73b93a455eb46ea111e</anchor>
      <arglist>(STAFFNOTATION_STYLE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIndependentKeySig</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4b9666a636c62345e58a1e16a988b45f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllowHiding</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab4c963a9c9acbe432d915d68aac4a385</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTransposeAlteration</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a485c436d91151d975874b54436f0cfcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTransposeAlteration</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab8cdaa823d3b5cf2458fe1b503fb1ec6</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTransposeInterval</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a53a9cfa7d127c133adb12f3eee581103</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowStaffLines</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a726195d1ce2165d8fe5d374581609fb9</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineCount</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a86cfb09ef7db0f5fec42ed463820ec79</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineSpacing</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a03aac1fac1eae83e2a40fa3272a6883d</anchor>
      <arglist>(Efix32 distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltNotationStyle</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a15d4063992a48375ecab17a3aa6b6bb4</anchor>
      <arglist>(ALTERNATE_STAFF value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltNotationLayer</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9c9b9bd3f79098b5dd219808abb0fc30</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltShowArticulations</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7ed297af531dacf999380b91218bc448</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltShowLyrics</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8a0356e57efe797d7db1c8e84fbc75c2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltShowSmartShapes</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af8e2be27756a86cee112a3a2e86c4c9c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltShowExpression</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1712e3871699cf06b11b38aa20a7844b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltShowOtherNotes</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0cd6e102ebcbc209edf1c0e1243fa404</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltShowOtherArticulations</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a16d84b99f06ca871ffd386b66d41984c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltShowOtherLyrics</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7078d2339e6b85c0ce85db3d2540e234</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltShowOtherSmartShapes</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1ec0a2ca014e9ee28feae0aa1ad84399</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltShowOtherExpressions</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a12e7494dcfaae2dd56dfd5076b03c951</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltRhythmStemsUp</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aab3c6b62da2cdf636e5de039c518dfc9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAltSlashDots</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1e54dc14ef9da08a102955d211ee4eef</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHideMode</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af69e53f2737a4f3d350c79d80a659360</anchor>
      <arglist>(STAFF_HIDEMODES value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTransposeClefIndex</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa9a4fd8c4893353a4322c9c830e0aa82</anchor>
      <arglist>(twobyte clefindex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDefaultClef</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afcd0bc83b20f250e3e53a1cb0aa5a487</anchor>
      <arglist>(twobyte clefindex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRedisplayOtherLayerAccidentals</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0fed29d490a776a01a758f5de251bdd0</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoKeySigShowAccidentals</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a90a86a9207e84d1eb2d1899a01126f97</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLowestFret</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aae49d344bc691112e83063f059a0636d</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCapoPosition</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afc92515858488acd2796a565943ada34</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalFretOffset</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2308cc62c285fd2ef9360787b176f8bb</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretInstrumentDefID</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab2a0c7004a05ff0ab9f44d6bda8e6739</anchor>
      <arglist>(CMPER newid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBottomBarlineOffset</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f17560345ce6b3b651e6eec47f6cdda</anchor>
      <arglist>(Evpu16 distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTopBarlineOffset</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ada16ec34b83079e54617e2af2d63e843</anchor>
      <arglist>(Evpu16 distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInstrumentUUID</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a71a78e2f8e33fc8c87bf0f4b0b4a751f</anchor>
      <arglist>(const char *pszUUID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeNormalNotation</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af9ff31f17ff9331bda639ee240c14098</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPercussion</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3b9f1176659e1d3c8de66416db553122</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsTablature</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9d6b48ff4532c244ca216038cb57d8a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNormalNotation</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad292380ca97ac78cc5ffd950c6c969a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTranspose</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1e478ac393cc6303bacb3cd4b3c72e08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveFullNameString</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a51afac4f19d3913fe666f87330afdced</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAbbreviatedNameString</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a69b7c245a7615acdc669b8b01ea202ce</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewFullNameString</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae36c73e0e09ddea6a35299180d121d96</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewAbbreviatedNameString</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a916da326f8dc16461153b3e7621c1c3f</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeStandard5LineStaff</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9a719d3e09dcf377c03747e3327c393e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Make1LineFullBarlineStaff</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a076ade8390630818451e5ed9f24a9ca8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Make1LineShortBarlineStaff</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8ecf30585ea0d2d8a78b122e6bf116d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Make0LineFullBarlineStaff</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3fd6467d08111c0fcc2d825bd46d6fb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateFullNameString</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac398a7b8fae0d8ceb5fbdea5715a9ae6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateAbbreviatedNameString</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad801e3a5fe5a26b88615679318c03bdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateDisplayFullNameString</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9e64131c1efe3fbe8a25775e1e68f43a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateDisplayAbbreviatedNameString</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a08426b7b851c98caded40b02dafeaadd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateTrimmedFullNameString</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aca290cb32b7bd2369657ae9932911223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateTrimmedAbbreviatedNameString</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a77f80ef1b4169e70657b8c8b1e68d5d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InstrumentMatchesUUID</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a433cec9748b85de97a88710b06c6f17c</anchor>
      <arglist>(const char *pszUUID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasInstrumentAssigned</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab283583d0bd4fda2977f67f1cd5809f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BLANKSTAFF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9c09d38a02647755d934021d77561704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GRANDSTAFF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad2592358b29688eca9f18175b11beb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_UNKNOWN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af05389765b80334d14264161a83ef0c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIOLIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a45fb4cade8091ad4300de2769b259f1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIOLA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a38e08c1183d1dad25d126ba0b4fba601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CELLO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2de779a9a087b0bb7d76884ab7334856</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DOUBLEBASS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a08cfc05a7b4a5417b379deee2a40a822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIOLINSECTION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a79dbf572055d9f6364b4800693288be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIOLASECTION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aced0a22aaa44c839cc02dec583659ba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CELLOSECTION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2ebff2c9dd75c740eee75dcc9af0d89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIOLONCELLOSECTION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2fd02e3341cbe1241548325aaf920651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DOUBLEBASSSECTION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a07cc14113e3254595ef2b9d8c19e32fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CONTRABASSSECTION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad279a71b66ff67b61fcb68d0e8fb3869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_STRINGENSEMBLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afd4b759b0ba27ae2b787a37c904b5357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIOLADAMORE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1e6f13dcc3fb91c6628f4d3191c5cce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_AJAENG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab19749232d77bde2a067f5811e62590a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ARPEGGIONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af667f5feeda450e2b13f65ec48871910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BARYTON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4b2a897e6dee3f7edf8c918d05cdb783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BYZANTINELYRA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af5ca7198c3fe27d15382abe64c1eae8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CRETANLYRA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1c126381a5c720e9be02c7206c398d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CRWTH</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af4198ca089356ea7cf96b98f2ec3c33a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DAHU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a65a85ca94f482b88c11954b7d7610bec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DANGAO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a372b7abbd14ff6baa67fa2c2ba8f1654</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DIHU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac49469ec402b8f950cd0ec25ef1bc647</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ERHU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa042bd83451d840efb1d8c0e1e893795</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ERXIAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a79a2a1c32736496fd09f9b982767f278</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FIDDLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a24bff4e2f58e5f21cdd2a92277d61941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GAOHU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af951cc055557601af898ecfc9178cfb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GEHU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8fbe9d2e11004d1360d002f92922287c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HAEGEUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a198fce0381c55773c55827f7e49e3bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HARDANGERFIDDLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1f891cb11a666094a5f1c74703057f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HURDYGURDY</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa0855520234658212fe4011d49b6afb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_IGIL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a631a6ff6512023822a6974f7264a1654</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KAMANCHA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6a17d13bdb093ba8a92fae9ea57127ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KOKYU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abdd41e29c6cca664af8fb510364a7b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KORA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae9bb108860f69d8b23b20c8f5f57b2a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LARUAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a22a48434f4ae4cbe6ccd9475436f1f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LEIQIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afd2a3ba9ed7ac163e3d6c3ab2b5985d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LIRONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac06737dfa54b415f316f38f3b69633fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MORINKHUUR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1d79e8599617201bd9001009ee93b3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_NYCKELHARPA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abdb6a4f27aa5f64a00b8edc19de57df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_OCTOBASS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a634cb93dc2ebfaf54553168083f8434e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_REBAB</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acf2537a61f1000ec3bed5e6f8727d61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_REBEC</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad3d3e3baa394cc452c101914052cdfe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SARANGI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab4c25e376fd95ac1ed33d993fafe8a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SARANGIDRONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0df2c14aa2967775631a6a6678a239d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_STROHVIOLIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9c6e8808bf92525e47ef359967c033af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TROMBAMARINA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa0246228907fd2e377f8c3c85d40d456</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIELLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a23b0769987ea02f4ee6f928b2d5df222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIOL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae5a9a5ebefe0934e29bbb81d158905be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIOLADAGAMBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab1f021ddf25e3d248709a40483162e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIOLINOPICCOLO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8d3056d2ccb38e5da42cec6b1bde221a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIOLONCELLOPICCOLO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6dcdd1b2f70e102ed8211319fd40b9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIOLOTTA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa25c9a21cd64e2144f211836026b33f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ZHONGHU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae1632d6dd519fc9f3c1b28c9c78e41b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PIANO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4288800a2980dff1eaa190e584a979d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PIANONONAME</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a72a5de10c48ac993d6ab3e49bed5cb6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HARPSICHORD</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3aee9c4d153570344b6ddc529365920d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ORGAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a24ae257a50eabc88ef2c0a45da7bd500</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ORGAN2STAFF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4d67d3eddbe971b74701f294db7b5a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CELESTA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a94b53b74bd625bbd7eceb1145128c059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ACCORDION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a02bd490a786debc7fd81e692ab3e1a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MELODICA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8f7abde6ede245950ec0ab10c7b5c097</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ELECTRICPIANO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0de626cd81de062d4e2a9d8e88fb50bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CLAVINET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a42471d2456f272a017350ad8df639d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SYNTHPAD</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a13b3b8a22638f73b6af0bd3b5e533ff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SYNTHLEAD</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2eaf3792ac349043e2b9c505c22aea7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SYNTHBRASS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8425be37fa4583c9f284275f1cb868c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SYNTHSOUNDTRACK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aac002c25c2442529d767cfaf38d65581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SOUNDFX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab50ed8f9e29913ebcf57657bc3280e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HARMONIUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a79a0789bfa07e3eae438e2bf17f7a7e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ONDESMARTENOT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0838c8344b8fdb2203d04e06fe32c054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_THEREMIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a62f66bd0b7ac67b2af498a0abf0e6a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIRGINAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a13f1c25cf4134f7efb3e0e657dc7f155</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CLAVICHORD</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac15ec371c9cb01f16db60774c9752850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SOPRANOVOICE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acd6d25676166e63186373ea5cfe8b6b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALTOVOICE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a37cf38b50464b9a76be3832a8da2f18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TENORVOICE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aca4463a93e96f2680d4a0652b3051088</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BARITONEVOICE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a57f791c3dff30b55c799d5a46707e996</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSVOICE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aae25a67d10cc5b2504d839595b42eff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VOCALS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afae4e3d78c48fd5089b9d6b615d13f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VOICE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac68a8108da64c093d6c1b4d52beb5c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VOICENONAME</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af11fbcd43b0607912ee001a4d5778036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MEZZOSOPRANOVOICE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a185c0ef229fe9909e8ca265ef391ff55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CONTRALTOVOICE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a09985e4a6361b8c538873564e8642ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_COUNTERTENORVOICE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac8cc2f8fd30d97991f9631b9d3d1cda4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSBAROTONEVOICE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a83938666bdc40d42267ac8d757a6a122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHOIRAAHS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a20aa8b2be408d1344b95c6628fad1894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHOIROOHS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af30f77e703a1258d206c65bab7aee34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_YODEL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad762fe2873bdfe551f13e2d9e07e9477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BEATBOX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5486687f3b31a86a3dfd82b1ee74b40b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KAZOO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4bbbed7f5a0e8db98af3ef14a4fabf44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TALKBOX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a09ac057e3a103f2c89b0d152c903cbd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VOCALPERCUSSION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6b70cb268931d1bbedfdb84469043631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PICCOLO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aea6e29ae212e2c6cc0b60b8a701260f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae909b8d6bb9f5111c7c17ba36fb6105e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALTOFLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0ee129c607080683ac372b76aa081060</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_OBOE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a40db599bdb03b81599d752511602dc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_OBOEDAMORE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3ddb5a8a15f64bfcbcebba2f33cfd26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ENGLISHHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac1a1c4581578512464c97375f354a779</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CLARINETBFLAT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a52252b11cafbc1f551e8fd9beb2714bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CLARINETA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae4b91c286675c87db34ff939cebe08c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CLARINETEFLAT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a880b7ebeb8b5c5cd910253bff2e84f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALTOCLARINET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab34a3bfeb3386edde68382945a15eaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CONTRALTOCLARINET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a798db04751557e32b5f10b95edc7d519</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSCLARINET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a71f64385bab04460a61404757d00f441</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CONTRABASSCLARINET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5ea188054fc8c8bc77d0bf48e2a9ca35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSOON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab12a202cc4193cb37977cb915538925e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CONTRABASSOON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a911533a6f929bf19dad5627592a7f70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_WINDSECTION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1d62abb76e4d9b2371b8cf5d20f2ceb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SOPRANOSAX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>addaac62f043a4c76d96121035a54235d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALTOSAX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a411571594579951f7a0890b262d95e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TENORSAX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a49028cf6aead08f079c758d730df834f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BARITONESAX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad1f630c35ad7022cf596f37c87f58f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SOPRANORECORDER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a60c1608d6040c14d038cff87a49b2599</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SOPRANINORECORDER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4b6cbbd7289359a093d308404a2425a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALTORECORDER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a96c931186efbb7c53690cdbe262fff98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TENORRECORDER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a18e9686f220be7bd3933e3fa8fd0a297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSRECORDER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a396ffcc1e27e0d3012dc8635a91353f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DESCANTRECORDER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac6d0f4769156e49df6fe75afcdac62ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_OCARINA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aaaf93e2fc25d8ac68904e78c3c92d501</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PENNYWHISTLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9df6572869b7e003e632feb5c9d442bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PENNYWHISTLED</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1d9e251fb1740e99aec4df365212428a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PENNYWHISTLEG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae9c6fd81015b2b6bf5d91b98ff94cc53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LOWIRISHWHISTLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af734374ebdaf07bf6c33fc41b5157e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TINWHISTLEBFLAT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae401c04fdebd34f5a807ea1843f069ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HARMONICA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a901054c8a06e97148d62e16062f91caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSHARMONICA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6fb9866ad8bb748e6cbab6dbfe2634bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CONCERTINA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a06293f46c74e11f842014e8626f18d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BANDONEON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a06de66ff264bf095196691a7daafb5af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HORNF_WWQUINTET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2e348e4b6ea7bbe919646a792aefd800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BAGPIPES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aafa86b7e75a8175c6c0ef03d7146d46c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_UILLEANNPIPES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5a64855b2363c531665e728ec08086b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GAIDAPIPES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab9eff6a7d97ba70cc896730bc9e5cc74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CONTRAALTOFLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5cd30932a6843d226022ca2e0ac41584</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSFLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac30e65f3911b1a90b65deebc69929b64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CONTRABASSFLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a90db55c51ff865af99e4c2ca6779230f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DOUBLECONTRABASSFLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a968e5f775b8205275c74354aa95f3482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HYPERBASSFLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1200b4764862e773a010a96ea4689a47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PANPIPES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad42e5c2da51b48a9cbd8aa2eb44ba109</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FIFE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af281a5e36fb5afc3b577a80ee0ca2c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BOTTLEBLOW</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3a7a2aad5124b441af91d5815e85a302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_JUG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a782bf4f054b774c915534ec1215a3233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PICCOLOOBOE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab15d8386bf82bffa0dd497861777fab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PICCOLOHECKELPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aca39b7d3bfedf6d410b8fa276614523f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HECKELPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aefab9f50899aa1242977919a9e06c45f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSOBOE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6f836bc988eb0eef53db2e1c9bb8a07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSETCLARINET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac538d297bb00549aa50f014777c0e06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSETHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4123a05763712ae0aedb5f95e886864c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HORNPIPE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9f1c19b1f8b8d18a1d987c1acfe8a0c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PICCOLOCLARINET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4552157c92c4e94b1abf4fc32842ea30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SAXONETTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad9fc23d487e314fa7d52ac84e48457e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SOPRANINOSAX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6362e636cd6aa6ca36f40c9e00cdf502</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MEZZOSOPRANOSAX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab31124ed83639750bbbf0cc0c8ae69bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SOPRILLO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac0ec547646227a2179f3b5db1e43323f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CMELODYSAX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0ab029631fb5cac627dae8314a76869b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_AULOCHROME</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9ec123dc778055c0e19adfb4bbcebe12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_XAPHOON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a52da9992f3d58eff9f2324148c2484c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSSAX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a81a6b66e0b91c35a9aeae5b6961fe79b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CONTRABASSSAX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a93dcb628ade6bb8f1258254faa4f49ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SUBCONTRABASSSAX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a31b5fdea22e48e9c4dcfbc15413ffc89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TUBAX</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a086a73523f101a53dc01624ac4374011</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BANSURI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3d734ceeb5397e7b7719f7b874bdc59e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DANSO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a02f64d7d8727f4e772a10e62a1f8152b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DIZI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab6bd90f0d6865f899f494e79069f5eb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DILLIKAVAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae0b7552a9e69dd0db36a11b53c665109</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DIPLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a170495cfe00297fb2c5af76fd3d5b1e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DOUBLEFLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3204f8fd0cc064060d904d5973d8a093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DVOJNICE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4ea077a86cbc37d22484711d16376ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DVOJNICEDRONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a32e92ad62bfc0e1e403bbd643650f912</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FLAGEOLET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af394777a95db311d852b808d45dfa4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FUJARA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afb605ede92550b3497a161119c27905c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GEMSHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3eb86ecac739f85f91bf69a90332dd8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HOCCHIKU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a10a5d91f1d518d767a4b388be780aa5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HUN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a228a7eb66c778a36aa591467ebf21307</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_IRISHFLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0dfd32866848e018b1ff779c135f9d86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KAVAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa54af9805a516fb6cc32370a4b5cf4c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KHLUI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab2d5929fb06902de8a24d0e639d0fe9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KNOTWEEDFLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af73c752e84598cfdb113b2929b3c12c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KONCOVKAALTOFLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a199383e55f88cc0dcf2c591b3d04fcc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KOUDI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a54014f982c08c2a4837eab57145ad780</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_NEY</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad970f6ca2f9cc51679e8a6af7a8bb61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_NOHKAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9873df7e4e8118536b7912018020f29b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_NOSEFLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1f29ced659c4c6ce3eac9f03b48dbfc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PALENDAG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a73dc8a9bbe7059b8e755b41d2f8702fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_QUENA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a340255b1c831303bde94099cb9845cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RYUTEKI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adae1892670b0a3c2c530be05fd20a48f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHAKUHACHI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac7ae09c9d109950fd1aa756abd31e571</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHEPHERDSPIPE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad08e529b2a3fd9c016d5648e430bca38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHINOBUE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9fb44f104445c8a9c65dd466a20257bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHIVAWHISTLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>add821ba84600e4b15da8497694d82c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHVI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8ddaf07c62b3a7fe15a3e747b6bce7a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SULING</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0d32557b81c31f221b1b680bf993de60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TARKA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab887dbb1bac7477b26e0740292096a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TENOROVERTONEFLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af4bfebf7e37754d3c3a783993d7a1e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TUMPONG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1ef24b929ec206020a9c81ca733ae4ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VENU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a90c18d157d6342a0430d9d95068218cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_XIAO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad819b11a17cbe8c2a1bb712caaab9922</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_XUN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a17f40b4e83314189425059585c1d90a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALBOGUE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab732c9c2404dc3bf1edf81c4f89f0ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALBOKA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a065305e8ccc0853ac444ea6953c0a533</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALTOCRUMHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a48bf0edc0284f84d7a7e74b7df686665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ARGHUL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af0c821ce0c2f6e352ce7a16002eb0d63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BAWU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a67a566b235ed652399c3d7a5a5a4a00c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHALUMEAU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa048b085df8b14b1c9cd1c867bd859c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CLARINETTEDAMOUR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a967087a6d44ecf522b4d30717903ea5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CORNAMUSE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a24636911e01596cba47605626dda4941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DIPLICA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7c67c1ec9bbb3a3a8ed1fc234905cc36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DOUBLECLARINET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aeb351abf4df0481d580281f21b3b193a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HECKELCLARINA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aba4200ade6861620d5c79cf687ded532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HECKELPHONECLARINET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afd93374b7f9a300abda0a3f00bd6b8b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HIRTENSCHALMEI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0cd4185bd4d21c0f7abf249b208dfaf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LAUNEDDAS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6ac4a38615399f874e7b31bcd7b37b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MAQRUNAH</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3bfad139b20bd9f8688ddf1696e4b693</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MIJWIZ</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aafa0f7b29961870147ab94060da64463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_OCTAVIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a276976d2c937ee737d518e451a08c7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PIBGORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a252303fc4f8f05e73378cd5b4f2702b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RAUSCHPFEIFE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac307b20d6585cf4fd6e9cddd1da7bfcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SIPSI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac42009831e5c1fd5d346632fa1c7e080</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MODERNTAROGATO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a69e387e1fe2d375d6b55c10f74e1d01b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TENORCRUMHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3457ad844b2826136bc7e111588735d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ZHALEIKA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adb9be0ce2160ae9d15d8d53e85112612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALGAITA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a344fc9297528c4a3d9d17fdcdd3c5c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BIFORA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0c1af26464d1852cb1db120776e22d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BOMBARDE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab31fb86a3c54391ddb036502cf82967a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CROMORNE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6325ef97746f8ed04262f874155da85b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DUDUK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa9b908498ed87ca08cb384665299683e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DULCIAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a058b302e2949a51d9476e5136464c271</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DULZAINA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa5838d8c535d4afa93f93a0e4032659e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GUAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a52b1c33a5f52debe333965383cb02685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GUANZI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a340376ce8650fcccf78ea68115e0110b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HICHIRIKI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aadc7ed5eaff8c7708c7c5192af42fd80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HNE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7a69e7c433d3fc286580b1afe0447f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_JOGIBAJA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a945474788671e3578786c3bcb9bedd5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KENBAU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a05ea079602bb1c2a4dfebafc70976b85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MIZMAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af2d9acad614af7de236478f4c80774f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_NADASWARAM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a47f616fe864e69a2eca90575a0fd9ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_OBOEDACACCIA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa51d635efe909cae9371f99df595a5cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5e1e132a395c7b22eda93d36552942cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PIRI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae31bd02459c9addce18aa36291ac3cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PUNGISNAKECHARMER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7a0b5d87be8a957f96e6b42406683433</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RACKETT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0339c829673e65adab697cb9c9e802f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_REEDCONTRABASS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a67999436fc83af1e8d7ebe745c0efc37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RHAITA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab4a819fde5cf75490f0cb14fe7fedd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ROTHPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a87e725bbc7b3a11e2d41f84d644e1d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SARRUSOPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a115fddc28508489e68c2655521e2bb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHAWM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1c3743b7debb4fad1df9dbff6c8ec27e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHEHNAI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0ad4ffbd1a18864f7cd391d5f1b04f3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SOPILA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7ed44b492ded522fea91956f27aca174</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SORNA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a934af3d1022f18a9bdd99a3db70e35b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SRALAI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acb528c9fd7bc22e67b31d389bcca957d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SUONA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa7b0da006960175a502c660950bec805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SURNAY</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afe073661796ef65f35caac354e7ffdc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAEPYEONGSO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a681d700be341f2393624d5db06c37e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ANCIENTTAROGATO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a29290212cf25c28f3e4a64808cb51470</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TROMPETACHINA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab1f458cbce3b7412858382e9ba2b0baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ZURLA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8087d21cde48856dcf14b78b3b3bba95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ZURNA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad4b555630ff2500abf78c48500392501</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KHAENMOUTHORGAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2dbc9727f1be561e3df8e7fbab92c4ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HULUSI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6a6d2ddf41a929aadbd4bbf6532da5fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHENG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a05127966153405d065d1097a657dc759</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TRUMPETBFLAT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af3c2d0836d393112763334f310dc933f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TRUMPETC</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac496acf60d71d810d8806948e705aae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TRUMPETD</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad405baf5e0662ac36366cfeb8c224790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CORNET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aeef076ce78bdd2666d0909d52c53eb75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FLUGELHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acd306d4928c9dcda4260467c308ec18e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MELLOPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a66d1b1a4418c4574fd6eaabdbe979003</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HORNF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a098342a7dbdde55b6662bf6d2b78039b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TROMBONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4a961abd094c8ea0db800432e6ebd187</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSTROMBONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adfa90e969c0c0405ef7f5d433166be9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_EUPHONIUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab4d5c1274d52923ee2c5847535ff434c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BARITONEBC</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad7a5831b27e973f99082f86d14926151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BARITONETC</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acb4b42a986c1eef7a90f5b494e415db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TUBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a021e843c5b1e6013baf9794943d7d1a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSTUBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af1fc87619dec868a5a5dba91e583078c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SOUSAPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a44c2743a05a98ce5c7a1d631b4eca544</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BRASSSECTION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a621a1dd0e3b81bfabaea97f421a67faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PICCOLOTRUMPETA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac97defca8c2eba489ec291589a18f6b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BUGLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac8611115a5cc2a933ded4dae7219196d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CORNETEFLAT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3a0272fc390d0f7be6f1b0c7966ebfce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HORNEFLAT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8582ca8ab583525ab07a30b2f507da26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALTOTROMBONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9acce748bdeaa99be7db3d1ded94f555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TENORTROMBONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a862be3856e6c8d9b219c24dc32bced4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CONTRABASSTROMBONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2cd175e438c64206f960d17140668fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALPHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7ef323e0be34c8ac56ea8349c2ae75ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALTOHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a63d219738769107ad1ac8e5c0ae2a26e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DIDGERIDOO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adbb41c277b2d6193b2401f6a6a956160</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_POSTHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3026d31fd515001db950741a6cea246c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIENNAHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad778e50a8faead6695c634b4f4920646</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_WAGNERTUBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab96c5c2c993b7d590c96aceed10d70a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BAROQUETRUMPET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a043f526fd3e7e486fe2c6378d793855a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSTRUMPET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0acc7c89a80b20bd2bb51d7143a86dca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CORNETTO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1d7a1d12d68fa87af50aeb6f7fe39b81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FISCORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7ef039d22ba602c445516b9c4cf81966</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KUHLOHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac5341c43ddc2fd94d5772eb8cc3dfc19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_POCKETTRUMPET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8601894d63d7afe030ad652de9a0cb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SAXHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae2690aa6620781fb83ee94a991ac4bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SLIDETRUMPET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a26bc9d5d4f24d6b3a22a4dc180dfce08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CIMBASSO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6de75a17afaf9381cc8ba010efdf710a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DOUBLEBELLEUPHONIUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3456c408fd697b0a3c663739e07d64a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SACKBUT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab3e9a6947892e9435d5cc28b42f76a73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HELICON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6a9af6daad4731490cef9d079bcf0ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_OPHICLEIDE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abdf657e9ff45fd467a4963cc990c017a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SERPENT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa3bd8a8634b1f6f2bfccedf3df8b763e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SUBCONTRABASSTUBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa563ee20624ed512f3d054d917943342</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CONCHSHELL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4ceb78ba372ef37de275c2ffa721195f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HORAGAI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4d28cae73273881165d7dc3585b193b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHOFAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa5874b6ea3a3f9256b42aeb2885a3559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VUVUZELA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa3d6944ef7cd13b6e45cf29376fbfea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HARP</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5781f8215064301e9f92bcffeaad2508</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TROUBADORHARP</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adf3e981a66d1caee061c761c4261c23a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GUITAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a94960d0847fe8ad7efc88faf5be919da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GUITAR8VB</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4181dda4b8f008dc03b7f9273b9133a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ACOUSTICGUITAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7344aca934883437d69949acd383ccbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CLASSICALGUITAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a529b3cfa83db942d9b6c3ba1c567374e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ELECTRICGUITAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2f837de8be9b158ee5507ea886b56c00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_STEELGUITAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adb5f7634a65ddbcd9dd2da46bd778675</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BANJO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a979e14661152137368cf063bbe2617c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TENORBANJO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a918f83939e24b7143211105bbe2aed69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ACOUSTICBASS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7ac21e8a0378673e350bf906b19263d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSGUITAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0df8d17091d0813d5a0001b9eff070e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ELECTRICBASS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a069be6b43bc87cb9102a49f670367399</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FRETLESSBASS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0770b3eb87aaf876d6d5acbbdf455f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_STRINGBASS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a38ed4621cc5805492ad048919c013803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MANDOLIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a193999de24d9bf73dab4d5f064801fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DULCIMER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a99376cd005c9e4a5b4168d6fe8374953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HAMMEREDDULCIMER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a43dcc297788870565311ebef3392d45a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DULCIMER8VB</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae27ca29ab09b63e9ac1d4049478bb326</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_AUTOHARP</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a91c46eeb00b231f366518f95d1ef54d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aed3c0c613fd6bedcb5eca43571e467af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_UKULELE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a79b3e125f53ba550726c06dc6d4acd15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TENORUKULELE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae1a5d024a7c0802d08dc99431fd059a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SITAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8d31928c413aad352b553a7f741ab456</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ZITHER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aab437595d348090d215ef5b49aa1ed17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ARCHLUTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a755b6b846b3f6bfa8fb81ea2f01839d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BAGLAMA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a025d8100f037a454accc5782abf8bbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BALALAIKA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4146f7ec0a1ce49646fd782809adb121</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BANDURA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa0e6a7a48b69b81ac2839fef29c2a246</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BANJOLELE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6d8af4a13dca98bbac5571d6ce43f574</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BARBAT</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2f6828da1c6f318ed0fc49b9439fe0c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BEGENA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2ff1d334b8a4e45ae72ba2e7aeda08ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BIWA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3429e4782ba694b1a6a4a8775d91e848</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BOLON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a67ce22df6c012f77eb6659b69beaea71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BORDONUA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad10e39b7f771622fafc7f70dde057d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BOUZOUKI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad5b5473eb0ab72ef23b61d2ec0ac2f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BULGARIANTAMBURA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adc3503d6653ad9581458f76be26ceefa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHAPMANSTICK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adf6f501199141dc5048be650cb2182c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHARANGO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2a26a7092c8190b3d267bf46074e3092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHITARRABATTENTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afa69a654722310e117914e88e8659b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHOAZHOUGUZHENG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae465b7ed9198e36a61dffadde39097f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CIMBALOM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8a835f59893db086f4c02386e5b09e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CITTERN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3d37b53cad1fa2979f52de98fc7fd16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CUATRO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a67595ea02059e72430fe78fe8b6601b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DANBAU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0d39ac0ff72fe51ebd54d911ba9b3dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DANNGUYET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad9d4ac0c2ba98f7362446cf7ace9d11a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DANTAMTHAPLUC</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aafb29747bcdfc094058b5951d0d7da67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DANTRANH</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa5ce38ea28b384d35266d6fc62210db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DANTYBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a824dd5637425d012f751b740008334a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DIDDLEYBOW</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aab62875939d9ad159c61ce2b289c22f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DOBRO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac1847046ac788971e5c07095479e1568</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DOMRA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7b1fd42b32f0ef49d29e70ee36e1db60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DUTAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8e070158b54e53dd4b6ae80df7a8398d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DUXIANQIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6d02f575caf8468fe26f49924dedcd20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_EKTARA1</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8f466910f40f501f211dae3458223b55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FLAMENCOGUITAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0d5018d83b09edcd180af190352e9830</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GEOMUNGO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7e6e10fc956e5622842aef7edae9a549</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_EKTARA2</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afeb51f74f09b53fc54c888c6d0d4b34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GOTTUVADHYAM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a16a14c705381fd31a6764a7b7b664641</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GUITARRAQUINTAHUAPANGUERA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6f072f2b72bbf6bb336b1bcb6d746d6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GUITARRON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad402656c36e77716d50e965a70ac13c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GUITJO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8837d2cbd28b9beffdc6d7ec41e91564</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GUITJODOUBLENECK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a07284c1281e5efdfb6c0ffe15eaa62f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GUQIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a91ac5925fc4e4abefb83f56572b6087e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GUZHENG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4c1bc9e1dd70b370db1f2b5ca079fb28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HARPGUITAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a017488eb3f70b957e8844f433685f7e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_IRISHBOUZOUKI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab7e19e4c7f70360d4b90449bd636de9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_JARANAHUASTECA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a066ed9b18a78768ab9fc319148eceed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_JARANAJAROCHO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab71115140c02335eb6c647a32d8f6245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_JARANAMOSQUITO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aec7284114dc3e33a7c249d8783cf881f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_JARANASEGUNDA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2e21eb5e1357dedfc5c346f5fd9e9648</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_JARANATERCERA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adf5d3d455dc07210f9bbf780d2291a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KABOSY</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aae0be53ffa07f1288c573971ad1ec246</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KANTELE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9d93fe8da2a3bd85b6647ffd99169d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KAYAGUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3d4bd7938e355737a412204d12210f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KHIM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a25f1e2bbf3cca177fc31297c2954aef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KOBZA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ada470aae71b4781186cf07b49586d870</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KOMUZ</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aed2c4ddf6953ec55f6f697f2666a9e56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KOTO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac13b68ccfe1d983f288197d68f2f5765</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KUTIYAPI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a37bf917e24832a17181ec6fc1e7c46e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LANGELEIK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae874bd327bc5f6c4d1ad9e0b98e77c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LYRE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a85881a40438b940af8dba795077a0c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MANDOBASS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adbcec4ae1d0cc12dd86d82f84e5f00f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MANDOCELLO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6adbe463ffacff84bb313e1a8eca439d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MANDOLA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af01e7af69d285578745f419c32a5040d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MANDORA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae0cfdd6810837158cfd47fbafc95b237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MANDORE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a060abfccdb2ce2004b2f65892523e948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MANGBETU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab915e01bf7fb642dfa876d81c4e202ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MAROVANY</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6eadb61bb61fdc6a9203eebe948b4977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MOHANVEENA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9829670c8b99f3baaec7f02b653947c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MOODSWINGER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aee665f5e060358a01aa2d149f8723358</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MUSICALBOW</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aecdaa9b174976e2c606e6b72331de56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_NGONI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a550ff7a2affc55611c139701dd387a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_OCTAVEMANDOLIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a97a92c400e0943a31fc7ebc5f8d61942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_OUD</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adfbd9528ad0ba63dabc754cbffb6c1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PIPA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9da220f49dd17c55472414fc7bb83aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PORTUGUESEGUITAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a949bcc06ad281ec5788005caae5dfa04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PSALTERY</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac505cb215e1e6763775d99527af31c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_REQUINTOGUITAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4d6ea7d398023db374d01f0c31177274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RUAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afb4a9c0067e70bbde77db9e5b42cece7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RUDRAVEENA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae8b3ac4ef6b98ca632136114aba4d9e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SALLANEH</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5fbf07a0166695da352dcb3b6b9badd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SANSHIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad0484fa09e8f5f7a2c4b5c5cc9634b47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SANTOOR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab6ad99f5c3eb4c4d7e249361104a52d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SANXIAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>accf55b2f533d9c106adf780b9d7110b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SAROD</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2c1dde0c74b2442f0a1c9fba0417e29c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SAUNG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afd5b686221769cf7b2994855e32d0abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SAZ</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>add96d30ab15aed2a6e47d88726cba657</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a521e69479786ded3ce99e5c8fc5d3c7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SETAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4f5d4bddcb801f7fcbec650bb5a94ff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHAMISEN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa86e281ad8fa2bc1e6a5310bc9faf6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAMBURA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7deebef2694e1a19462fc563c20895b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAR_PLUCKED</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aedb6e231af69d9f04cbd9be160622c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_THEORBO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a809b56a893a29913826ec8819bf8edd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TIMPLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8081e5125111f12d93e7d739805861d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TRES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8531a71772747a7833b3e3be3f9bb455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TSYMBALY</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a803361cb991f820297c5f25d9665acc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VALIHA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac301312ea4f93657a35fcb78bac06bfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VEENA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa08c0179cad794eb9489237057071245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VICHITRAVEENA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8e11f3175fe5fc95bee5a9bf2eb58894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIHUELAMEXICO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac12c848698c82bdf0ba2b4329976b16c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIHUELASPAIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a47a2efb6a65d37d2d4e5399c3420b529</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_WASHTUBBASS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a84531e7d77114ebd893194beb09f8a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_WHAMOLA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a65bd824b73c90bd2f7476edc5e14a5fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_XALAM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a071dbb956f5f98359ff752acd621b5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_YANGQIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af5326bd0f740afab311af3fd59e12de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_YAZHENG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a85d65116e713bdc8b7cd8fec97195df2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_YUEQIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8a538b791e6a0fd7e9124afdada3e7f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_GUITAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a05376b1724a3fee67e797faacbd38b85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_GUITARNONAME</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa83ba5cb11117faaad8c2dfe528fc26d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_GUITARSTEMS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a86bab55816cb7dcdf816a3fe5b49ba4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_GUITAR_D</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a38f1ec9c4992ddbc11eb47a81b37cd46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_GUITAR_DADGAD</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a83251c9392b16f6f85f77c7cbb1052b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_GUITAR_DOUBLED</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae381def8ff5c4465b3b1dbdbb09b5b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_GUITAR_DROPD</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a94e95d4fcb072b80db8669b8e821a1ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_GUITAR_G</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a99f50d556598c74f4b0d305b6eac6094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_GUITAR_7STRING</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa8313a0f514c343375072fca75685ae1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_BANJO_G</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6150daa82c25a57a3b5fec0f0005e975</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_TENORBANJO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adeeff6e1958e7dda9587d31ce2c737e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_BANJO_C</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a78c9bd7391f8ebdc563ba3c9476c6a80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_BANJO_D</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a16969f5ba947a970e88f793b1acc885f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_BANJO_DOUBLEC</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a62234021462c26e8efc6188753388628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_BANJO_GMODAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8b29b274de23e4858bd89b2070e00810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_BANJO_PLECTRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa3837f0aac17dd3da4c456417f2795fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_BASSGUITAR_4</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa2954ca69290f742dc284b14bec305a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_BASSGUITAR_5</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac976122aba94721f8c9842ae0991f79a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_BASSGUITAR_6</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1daa45a95377edf62a1fc254340706e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_DULCIMER_DAA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae3261c3dd065ed47277ac2a29c1f97c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_DULCIMER_DAAUNISON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a22fd696bda5bd98cb9beac850c9e3b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_DULCIMER_DAD</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5d8f75936c64118dc4c162a1731372fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_GAMBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6271407e3d42bed14f566d03941341c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_LUTEITALIAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8d99778e4eae6eb5f6696d23bf32dc1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_LUTELETTERS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a76a9dccb28e7dc7e9f9dc6c95eb728f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_MANDOLIN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abadc928462a0ea5b89666224274ef332</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_REQUINTO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4a753248cfce71bdbc5c0b9654f7df95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_SITAR_SHANKAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3f386707e690c2f27b2aa595ef8c1e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_SITAR_KHAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a90d73b4839151cf321fb26d6e405560c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_UKULELE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a06c2202bdc0725233a6495e78a619008</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAB_VIHUELA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a84f527e652fdd2c10cd08b589c305fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TIMPANI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac481ca298f59c6a25df04942b2b25a83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MALLETS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a85d6d0686e3eab5e6b7b7b5b43219b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BELLS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae2b84b74bfc0fb11fad47529d224e62c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHIMES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a178c1497054314ee5fe62a02c24d7154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CROTALES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0aeb57a763e30f39dac091970d919af4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GLOCKENSPIEL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab85886f19e6290c23bb836aff9cdd20d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SOPRANOGLOCKENSPIEL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7ad4913f8bc58bee02e202fea2bd6391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALTOGLOCKENSPIEL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1ee9b9d6a09efa7f18f3e28621628b69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MARIMBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a02b02a9d04024b5cba1f5c560fb4e0a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSMARIMBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1bbf47e91d0d50698147c0b4c1d1fe60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MARIMBASINGLESTAFF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a43b290745ace2c19b801702d254a0083</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TUBULARBELLS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad5495da66551c736bf1b350ff9fdb78c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIBRAPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a64ffb7fa5bbb4be8a573990f803d21c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_XYLOPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a77d716debd1cc3f1949b8dea04c8b575</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SOPRANOXYLOPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae0c00c63db42e39a44a4ffe67f1863b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALTOXYLOPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a008a741f96b70ab1d0a4367989ef49a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSXYLOPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a247c15f666e8a197802a77cfe24776f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_XYLORIMBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa6e267e9a917b50d914f519e2a653c86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BELL_LYRE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9089fe28c4eb6e23d456445a988345dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BOOMWHACKERS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afbc570492f446e352d97bba5f534e3f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHROMANOTESINSTRUMENTS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad41e805adf3b4c649c39998783153918</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CARILLON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a88c8e3f7b93206a98e3f513d97e6ff2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CRYSTALGLASSES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4984315b7aff70c7be903c568a0f9dab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FLEXATONE_PITCHED</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a56e11a9e4a6a34c307953d903fb3ea3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GLASSHARMONICA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af1df44825c28d35bf17d20a22c8a39c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GLASSMARIMBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aaef2d1238da9439920dc7f3a70296f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HANDBELLS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aee16b3fea63f608fe7b361db3ac65150</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HANDBELLS_TCLEF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a14e517f32d59f762825d6bef9eddde9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HANDBELLS_BCLEF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8236ab6444fd5bba4469d920cdee4c1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HANG_TCLEF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3cb1af4220dbb39dec13a8a1b03015cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_JAWHARP</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac764a10e4c1a5d078b0c1084b5d05451</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KALIMBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adb874bbebe84bb2bd0bf73c8edde6460</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SOPRANOMETALLOPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7c18608f2d71f7017b06ecc61a9c40fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALTOMETALLOPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a220255bfbc2f2d18653a71d813a33b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSMETALLOPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acbb2a7a9211eccf6408694264b94ddd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MUSICALSAW</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6021b534b993b864c8d44ad7db739156</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SLIDEWHISTLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad473f0c4a1c2aba7ee610325b2eca1fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_STEELDRUMS_TCLEF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a07ed78afbdab7cc9d1db4f799648b780</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_STEELDRUMS_BCLEF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4fa70728614f43345ac234d9a3374d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BONANGGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae11350c578287ef2703cbc7b9b79f72a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GANGSAGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9919ac59ae54be7844730533f7fefa69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GENDERGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5b7c39a67e2ed8f3950d928d79909a96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GIYINGGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>accd5fd5646503454504a57a4103193de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KANTILGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad7475ed59c51a2a4395c9377a691d218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PELOGPANERUSGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7a256df2271d83e12a28a03c08059952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PEMADEGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad43859b84ebb4b95ad8c847c0ae32788</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PENYACAHGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a98b308d0c989abec3cc249b53bf16e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SARONBARUNGGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adf1e10418df6eb6c1a5d43af333f26d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SARONDEMONGGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abc8e6b2995720a643638026261f5cfcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SARONPANERUSGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad1761fbf5ac5bffd2c4f02a07b0618c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SLENDROPANERUSGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acd609bc15c157c8b507bb3a037c13ac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SLENTHEMSGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad827b62fbd063242dd32e3de99f52467</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ALMGLOCKEN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5b7f53c0a052a9c15ccc1c3042b8ef29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ANGKLUNG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a22da5bef3daa57831b69fd1abaffee36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ARRAYMBIRA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac166d025d71001b75949ab3a30027fe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BALAFON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af87a3b9ce552ca4790a2f40df99b13b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BALAPHON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac48623fc2d252d5e600b9a6a8c756d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BIANQING</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8b588dc4f4a48bf798b4137af53f2e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BIANZHONG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a040c0f8ff95678c9546861aa690d5ed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FANGXIANG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6fa917f9f6923c42e7af1f257bdb8d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GANDINGANAKAYO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ade534126e5e8957c1b5157ffb76e1cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GYIL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5e47363dec9f8130391eda003f103526</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KUBING</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a64eee8530574afc781eb79033ce82f11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KULINTANG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aaf7c4bee1dbf92935480e62ecf41d77c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KULINTANGAKAYO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a444021a70928ee97d7423ca15d631179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KULINTANGATINIOK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>affff994e27df6c5c84d7ebd3cc06c57a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LAMELLAPHONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a88304eeaf141fc2ace9b6632f8e3937f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LIKEMBE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a21a7c900fd432626c25ba965453ccb65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LUNTANG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7b7725ba75e406af29dbbb892a52ea78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MBIRA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abe58986eb22f2f1df472a90c8a892231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MURCHANG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a831a5e15fe95d4075d41343fe6320105</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RANATEKLEK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a87ce8231738506003eadccfeb1f9885e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RANATTHUMLEK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4f6930d56213f3534f2a6852e15b841e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SANZA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0cf03a019b154605a091d86909d8a3f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAIKODRUMS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a582813f2622cb471332a676040cb629b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TEMPLEBELLS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a42d316f7211aeb8716ce48ded9f3aaf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TIBETANBELLS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab9d14899c318254f29055231b1dbdc8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TIBETANSINGINGBOWLS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a150b14af1f84e01f2f90d8aae808e5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SNAREDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa15b0d8d80f4ba40f569b26ab1760380</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0b35a93bc3e52dd5a0597febd26ad550</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DRUMSET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afaeb300747cadbbdfe7eb6810790eeb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TENORDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad14a31ae6f790c4ad688f3b97f0c408f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_QUADTOMS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aca62bd853d31ab70a2e34f1e058c1591</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_QUINTTOMS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a87890a430c04082e420964778be7adfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ROTOTOMS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a020a91b67f03a69df71613ad0195e774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TENORLINE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7a418c21ee2c42f391316d05bb9cb4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SNARELINE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abec6b3a7d786caeaf46b667d5e2c4c8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASSDRUMS_5LINE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae41ce55d89969e40f02169e54b33bd06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DJEMBE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5e0075e32e25147a6b4cf21841c280d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BONGODRUMS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2279d60a35da4dc87bbdbd441bd2235c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CONGADRUMS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a943f6760b8dbbbe18290ef804f7a8afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LOGDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8e2e255b9204935e58cbbbc0b14a94fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TABLAS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a49020b3b409546e3a4d1b4d6315eb483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TIMBALES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a66e65bbcb96c140ed4bc4972b183c07d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_AFRICANLOGDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3f10803378fb5a0afc9ba464345f0b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_APENTEMMA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa832cf341a32fbf112be424773ca1094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ARABIANFRAMEDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4c4da13bf96998df0f502c1ded4e267a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ASHIKO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae53e3cd9ee28f3251a5fb67c253f9284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ATABAQUE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae30b72a8b361ca3634ed4ec493c3d306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BATA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aea7f19e69981388ce9eb3a15123dae6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BENDIR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae2fa2c02554999d0c4744169e649f9cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BODHRAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adc31b80a63269181f4b24842c47ca3fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BOMBO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a74e482931390e149be4edc0d756e8dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BOUGARABOU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ade6d7bf3ba5ab18beb23a9c324f3da4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BUFFALODRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>accaa97673eb617ea0727193db9a61a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHENDA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a53e3004850ce77da50716207d84719ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHUDAIKO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab4a8bcd4229189cca89e3062275575cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DABAKAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aecb6ad5df7afde5095e4797843c3cf51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DAIBYOSI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad6c0496f045a7deacae603a85acb8bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DAMROO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9f5a2b20ebc48bbabe7006066853ce50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DARABUKA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2b07967acacad2e21d6261884e656da5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DATANGULIONDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab33ecf60cc4256397d9e5bbcd2d39b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DHOL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1f69b26c52575326aa2064fb8851075a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DHOLAK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a59b64179e01be87bf7e1d929f431e3f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DOLLU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9925f2a2d65262f09c316085c22ce522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DONDO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5281a2a4a0da84b4894f36b3dd216155</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DOUNDOUNBA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7790a6307353f845f940ae302a3cd12b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DUFF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1af473972ae5789c465cca8408fe48fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DUMBEK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aab242764f27a36911855dee99b4ff618</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_EWEDRUMKAGAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a371239b8d1bbc07cd5e80b51156d8d9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_EWEDRUMKPANLOGO1LARGE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0efdd5760d7e37396f9f52a18ac895ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_EWEDRUMKPANLOGO2MEDIUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a54a27424c68cc70ea6e71bcd7aeab82d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_EWEDRUMKPANLOGO3COMBO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7c3e084627bdbc43a64573197bca5f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_EWEDRUMSOGO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a83d667988b60042ee6974efc907a7701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FONTOMFROM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9c2e5b5843c33ba01ace492f47072c81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GEDUK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac901f176787f7f5f137e574df2334790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HANDDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a90e82f7ebcb53129f167ad83da02a12e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HIRADAIKO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a46ad7eb992ebb9593e79e4a4183f3d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_IGIHUMURIZO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a76eeaed6909155c6aa91a79600513353</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_INGOMA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ace55e047118f9a009f1b41f43c923ecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_INYAHURA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acfb80a2d416c6f9a037320443a867a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_JANGGU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae6aa72d65d92ac4cac45976538758f9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KAKKO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3d24b6e100539c0f0b98d8f24814b869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KANJIRA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0b3cb474bce85ffb415510cead5128df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KENDANGGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a39fcd7f7f2f9b71ede6725baf982d224</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KENKENI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7a31e5e30bf3ec628131a1fbc0bfa9b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KHOL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad11c5c4f5239d0f33ebb4efdbe10d224</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KODAIKO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4720635e670c6f5b026ead61eb067972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KUDUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab1a0980e31c1e0bb474b0474f4a293de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LAMBEGDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af6c7df6b70ec640950e03786f0f58ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MADAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac6216c7cd2001c85246b19ade5bd8460</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MADDALE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a24f1f1b41eb7f878263d286c6d377153</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MOROCCODRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a02fbcc358816b25faccbbc4c8f39cdd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MRIDANGAM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a886a51b6df9dfd3d82794b492ef01a16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_NAAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aadfaa8bf41202b90ae5548b00f10665f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_NAGADODAIKO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a54de715a951b2ba7ad07516f64d691e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_NAGARA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a08890cc94350021f408b05d0afa70daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_NAQARA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5f4952a34e1dc2c6e39a97741fafadf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_NATIVELOGDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adc2b1df97452eaf8bf6085e4b683f757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_NIGERIANLOGDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a95e0f7ace689384dd21074ee67303169</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ODAIKO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a48039f7f75cd1bc5116849a03fdec517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_OKAWA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af760dde52b65e9909ab219ef9a7de76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_OKEDODAIKO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adf7d8057201dec76389ee13518bd4857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PAHUHULA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8d2543f7eefb94284ca47a17c77c3f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PAKHAVAJ</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7fe93bd320f372ea1a1f5066104d7559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PANDERO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aecfe504ba01f662c5a3f1f790a23047e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_POWWOWDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af872fa6d31c0c638b4b485e013f0f660</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PUEBLODRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0e884f582c5fc13f568dde14b2645b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_REPINIQUE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a193ebca962935202321424a83020fbce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SABAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa1c08931cb93266addefde4af7723963</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SAKARA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ace35c2506042fa2674d7645b366defed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SAMPHO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a86683edd99c6422fcf696968cee925e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SANGBAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9a29e283e28fbee4b2e903f1b9a72d30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHIMEDAIKO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae85f0d7923df3640e8bdbe9ad5e237ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SURDO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>affb69f9c9e10ceeb8315edb546aaa479</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TALKINGDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>adf3310267cb16f33640121fdbe0acb23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAMA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a73e08bedc5003cc8b36d01e4a14759f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAMBORITA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a78a0d02e1bbb72398695f83199687b5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAMTE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a91fb81dd0fc4b214ecf7689fab25f43a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TANTAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afd22632d5d0019467edcfba6c9d068ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TANGKU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa38eca0dea3d86bc53e4cf26c469967d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAPHON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af82500dd735bd01b61052949ae896d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TARDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a513e7e634b141a54429d6a972d666808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TASHA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ace3e04a17be34b5f6ff96b90c7a7ed4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_THAVIL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5dc59309109db1264cc91e534df3a2bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TOMBAK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aaadeddb3fcf0d489c554681a7226f755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TUMBAK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abfc0fd6aeae7b04a8397ff2b712a6321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TSUZUMI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af9c1bd0cc065cfbeb677bfce46822dfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_UCHIWADAIKO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5355a02c17e1bfbd30f1c49acd486038</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_UDAKU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acad833168361f459a70659fb85f9db81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ZARB</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa3134a87de6554ac763690508d2f3187</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PERCUSSIONGENERAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa53cac97ad0f8bd6049c0983cf3af5b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PERCACCESSORIES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac31f835a0b0d75f381706620aba254d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_WINDCHIMES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a42a5d747fa6e3a629a2007e557908fd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHIMETREE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6297b9988c188d87e908ab2eb3728516</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BELLTREE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad2d013c81ddb505bae6b42eb408821d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_JINGLEBELLS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1a3a13b9cab9ea5eb3064378e66656c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAMBOURINE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aafba0c1a1e8c23b3af870da33dcf429c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TRIANGLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acd68e2c5e7ad23e91fa3cab9ad1be6e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CYMBALS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae0dd0783658b0954f9dc51ecd4eb166f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FINGERCYMBALS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a63e22e43cccbf9264cf867136da21607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CRASHCYMBAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab5afd65cba7378251256907bc39717c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HIHATCYMBAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a907f6a0591a2689ede87978256892723</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RIDECYMBAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a96d234e2d460f0d8d0f67f352c4c374c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SPLASHCYMBAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a312a4365f7eb3072494ac1f68d2a1566</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TAMTAM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5d71365e35776ba6f44d32ea124bad70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GONG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5c7bf4e49b9135f479b7d44840a40b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_AGOGOBELLS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af136decb598c82eafb6fbcb667363d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_AIRHORN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1cdbb5869d8069a69512db63917e7d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BRAKEDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8efd02ed326e9ca49633697d021245ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CABASA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a002388e59e2bf2880bc5a9ca1fad424f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CAJON</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af1a730ff7cf21a4be59a7f42799c464e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CASTANETS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3ace5b6536dc8cc882485b0ae107bee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CLAP</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5a33593de8f8754a9d1fbf7e56e4052d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CLAPPER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4e51825086805dd9955fccfe64fa5f54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CLAVES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad707085af657fbb8206a46df419f86d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_COWBELL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9fce9ac2dd8d19be7ac24b843a3836a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CUICA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9adaddc6bf243df7a5f0927093eeb0bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GUIRO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8320ce2308a5a4c75bd48d58552ae356</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MARACAS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a16fa01bcf9647d0f5ed66abc6690f7cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_POLICEWHISTLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a104d9c99d7c47881391657d78d261bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RAINSTICK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7a286e11ef93b34a5da06777edffecb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RATCHET</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa2be456e31142a7c84b52bb7548dd8cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RATTLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0cc8711eebad908bfbdd134ff1fca37e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SANDBLOCK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4282e51b7d26b50f670df3d847dc1217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHAKERS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abe86cb8ded167916a766e6dda3d0f5be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SPOONS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1f5898254841b667bc96f280d88cb9a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TEMPLEBLOCKS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a8d744d6aa8ba615773512bca94c22709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_VIBRASLAP</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac599159c9964fe5809c893a7d93327c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_WASHBOARD</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a93ab02366ee3bfe33df1f6265298a34a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_WHIP</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad19ca9e968d3e9cf26e7f294e26b6093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_WINDMACHINE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad71b39b82dc35a0d36c4e34bf7903e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_WOODBLOCKS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aaa08336aedf4a08433167aa91d9991b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CENGCENGGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4737795241a4e367cf9a6a5bf109225b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GONGAGENGGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9c8c46a0cf2ae43ee3cfe3d1f4b18ecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KEMPULGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abe859cfa4f12a0458c967eb0c95dd54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KEMPYANGGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a46bf553df4465a01c0025f8d1f6a097b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KENONGGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aecfb4853070d1e49d9023b56c17a9cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KETUKGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a327405b080eb6a88f0e30450d6a67b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_REYONGGAMELAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab68d477fd12c83a4aa51e5605718fc21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ADODO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1fff47b3d44ab2ffccb8e74b2b12f428</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_AEOLIANHARP</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9e0091254ca54d2c0ae4e477fbff4040</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_AFOXE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acdcab1399eb7819bbb2812c715d8a26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_AGOGOBLOCK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa2ae9e043285937449af4baa297b45aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_AGUNG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a183181fba98b5d97f4d0526e29eb9e51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_AGUNGATAMLANG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae7f8bf130bf435568b1ab4926288c48a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_AHOKO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3a26161b4af22357c1916323538ccf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BABENDIL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a86f9f751f8589545f3fa55fc4098b97d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BASICINDIANPERCUSSION</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a690adb159216bc4785cda42a60947a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BERIMBAU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae52b4114ff0305971f338f434916317b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6776dd72eb532f7631c9c0d8aa5463c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BONES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a12e274463b32bf9aa3beb53873482510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BONGOBELLS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ade95a3f8a5611979cfb800f1d9f13282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_BULLROARER</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a58c23cfffc879d0a648ae6d371995ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CAXIXI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afcda3886e6f5eacc2144881444874c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHACHABELLS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a7eab90882d09322e10019f779aa50c7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHABARA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a31031802a43bad297a7c306b495e3344</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHANCHIKI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0c424bfa2783ee458558909dd94e1730</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHIMTA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0a20c18c44d96b39532eff621b59cf1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHINATEMPLEBLOCKS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af6e703402c3e6228c86b74c40723496d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHINESECYMBALS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a800a78170985a62af3506b69cb292318</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHINESEGONGS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abb261fdf80efaefadf2924d89d43e6fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHINESEPERCUSSIONENSEMBLE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a61a9d3e81cfa5b7eb5531e7692b9d951</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHING</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a61f7b77b79fe5e1cb66d48380951695a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_CHIPPLI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a65af8da4bab4e5dd9eca98d8f5d641a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DAFF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a058946dc8a6340ce206450e6d5ca9910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DAFLI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afe5a5ea8354475dea290ac7af67898eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DAWURO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2274dfc2d77f640d7215cb4f026886df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DEF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a6e30b2d86d2f90335ab4bc2c5f08c52d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_DOIRA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acf27c55bebe864305e7ac65f48399c40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_EWEDRUMATOKE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad519f7a6256d905288f8952ed03005ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_EWEDRUMAXATSE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2a13cf1deffe3156700535807c7ed9b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_EWEDRUMGANGOKUI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aff1bba2d6f409b4d3a9b490dd48fd780</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_FLEXATONE_PERC</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a35e4e5c5529b648b44f3fc63213f81f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GANDINGAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af073013f3325b1d433540895141e2499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GANZA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a73c87d54c5ef2403f75033e3172bcbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GHATAM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad7853e9d8a3908f82b934503f093cc9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GHUNGROO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a57df772ebf6fe7cd22c28f001f8f28ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GOME</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab29973493f254e496bbee4cd4e67f8bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_GUBAN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a73c946d012c1c9da4e4ec8a6e347c964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HANDCYMBAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab01289660a98bc8d06e99b222a823ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HANG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a75e990e320c3fc607f0894f383f2e545</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HATHELI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2c8ee6ea8619fc78c8083c99ab5777c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HOSHO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aee9a6790d84b2dd892de9cd3e848dad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_HYOUSHIGI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4315204b0395b78627ab43c0ed37df88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_IBO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3abe37b3bb1610e19e500dc1072fc9d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_INDIANGONG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae0b2943c44850f869f02671c6140acf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_IPU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a74f2d053ce9b25599e495ae71cfea551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_JAWBONE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab4aa53d77ddce6fe83bdac4e4ee6a972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KAEKEEKE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a33ae1c0ed5f7bd89137a5260ac061794</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KAGUL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5a337e215e3c0634233595db515ad70a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KALAAU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a9cb8795365231bae8e8d025e019d30e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KASHIKLAR</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ac856df7468dc99b0ff897636465e7e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KESI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab2a7ecaf1b303d77a6939413a996d509</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KHARTAL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5e64cc5805d231931de730750a9cd888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KKWAENGGWARI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a93cbc02f263d92d17134ee2d926dbc44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KPOKOKPOKO</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a47a3305194f8fc7e0b9ed2ac9146d5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_KRINSLITDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a55d9d28c1cfb24c495200f7afd5a48ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LAVASTONES</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>affcf8c19741e496eae1a1c7fe893c609</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_LUOGONG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1fbb1a36c610fa98eb8958517dcb825a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_MANJEERA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>abe39da4f8631a060bd5620eaed1324e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PANCLAPPERS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a377b1e6f0c783cdd474297998e70fd0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_PATSCHEN</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>acb48ae3a712117919db1d326bc5829b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RATTLECOG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af86ac327be3a95eafc14460400fdd220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_RIQ</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a2bc46101096249a395ac8a08829c3198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SHEKERE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aaa1a6925c5eaa1dd45dd09db6dde7d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SISTRE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ae3749b9c3dbc72e6f70596e871b8fd49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SISTRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>afe54ce0a27b8c9cebd8d70c417cb0ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SLIDEWHISTLE_PERCCLEF</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a211dbbecdfa6103c97c9da1b3af620a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SLITDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a0075caeb81c099b8b3a9ee0516c6911e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_SNAP</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a1bedc0adfd334433ccacde80c16742d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_STAMP</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab804e4bf0a69452937a75bd254c4ec26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_STIRDRUM</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ab89b0c5097e26dcd641edf9e1e7884aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TEBYOSHI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>affb05447053683bde18964dd53f9f0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TELEVI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aa7254c17946f94d5eef24382e58f212f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TEPONAXTLI</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a3b183e47e8e695771f29f3f048f3e828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_THAIGONG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a370ffd9814fcafb6738ac716afbef4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TIBETANCYMBALS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>af7879031cbfb929e4c8999ddb96606b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TICTOCBLOCK</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a5a5c0755e9bc9cced91afc609b5a2cf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TIMBALEBELL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>aca1eb97e5bb93e5a3f5ef43350323189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TINAJA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a4af5dd6f2fc6cf226ac43635a3c35417</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TINGSHA</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a434d0fce35b4d6b924f722fe770e51f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TOERE</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a61d0ae5d6670796f6ce9a12ff44e0e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TONETANG</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a71fd3164df74764580cb2c7b7748380e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_TRYCHEL</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a55a38716279eff16e5799a2b6389c9e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_UDU</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>ad11ec5545e018007f10becca47fa2b71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FFUUID_ZILLS</name>
      <anchorfile>class_____f_c_staff_base.html</anchorfile>
      <anchor>a077bcb018565be4b53685f9c04f5e159</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCUndoBlockHandler</name>
    <filename>class_____f_c_undo_block_handler.html</filename>
    <base>__FCBase</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>class_____f_c_undo_block_handler.html</anchorfile>
      <anchor>a25ae6b1c31c67b7f50a51837e269304a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>FCUndoBlock *</type>
      <name>GetOwner</name>
      <anchorfile>class_____f_c_undo_block_handler.html</anchorfile>
      <anchor>acdb699a2d864a66f3f35a499a81e428f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>__FCUserWindow</name>
    <filename>class_____f_c_user_window.html</filename>
    <base>__FCCollection</base>
    <member kind="enumeration">
      <type></type>
      <name>COMMAND_MOD_KEYS</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af07ed05132bac987ff3acab63a001e47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMDMODKEY_SHIFT</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af07ed05132bac987ff3acab63a001e47a4c7a574128bfe9b6a84abceeca8389f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMDMODKEY_ALT</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af07ed05132bac987ff3acab63a001e47ae741fa748fc87a22f40b1f98e21c817e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMDMODKEY_CTRL</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af07ed05132bac987ff3acab63a001e47a71a939cf7bba916a9d3c80c488854e7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMDMODKEY_COMMAND</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af07ed05132bac987ff3acab63a001e47af2c5b5c8ac718771f37a98a8aa64b663</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMDMODKEY_FUNCTION</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af07ed05132bac987ff3acab63a001e47ab84767045658b4788f39fd87c73bdaa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMDMODKEY_SHIFT</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af07ed05132bac987ff3acab63a001e47a4c7a574128bfe9b6a84abceeca8389f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMDMODKEY_ALT</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af07ed05132bac987ff3acab63a001e47ae741fa748fc87a22f40b1f98e21c817e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMDMODKEY_CTRL</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af07ed05132bac987ff3acab63a001e47a71a939cf7bba916a9d3c80c488854e7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMDMODKEY_COMMAND</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af07ed05132bac987ff3acab63a001e47af2c5b5c8ac718771f37a98a8aa64b663</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMDMODKEY_FUNCTION</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af07ed05132bac987ff3acab63a001e47ab84767045658b4788f39fd87c73bdaa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>FLAG_32</type>
      <name>_GetLastCommandModifierKeys</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>acf7344ff50d090d7e560986978364635</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetLastCommandModifierKeys</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a2d20ed5efaa401165d0d3851bdc66e2a</anchor>
      <arglist>(FLAG_32 value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__FCUserWindow</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a7f26ed23f64325b1919f9c74934ff160</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>ac4e886c9375f0110ef867a349f1ae203</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPointsMeasurement</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a27e687c27f1c65bd354022250ad96755</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsModal</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a0c3cf81cbb1bd947dbb72494adcc3203</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEnabled</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af0cb00db0b3e42cb4a9695d4910019ab</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>FCControl *</type>
      <name>GetItemAt</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a58135654be971249d68721b38eeeb2fb</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetModelessEnabledState</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a2d575858f2422c6e2aa61efca0b7b837</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a1c5a4d7afdaff2025541ef60cbccd60b</anchor>
      <arglist>(float newwidth)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetWidth</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a2afd976c7d02205aacdfa1f444132fcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHeight</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a76575b03cc4fcc725adc2bb497e1ce25</anchor>
      <arglist>(float newheight)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetHeight</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a6d8520009d4be9e5443cfd7f731fb5be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClientWidth</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a1c9c0a73c6ef62edb2eeeaf2788d2edf</anchor>
      <arglist>(float newwidth)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetClientWidth</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a3d75221ba3dbc655743f000c6da2c80f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClientHeight</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>ab135ee81ebb5938e682a05f4111bee46</anchor>
      <arglist>(float newheight)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetClientHeight</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a111035c21270370c306aca53072db133</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTitle</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a8d305991a91619e370a2b720b6936bb3</anchor>
      <arglist>(FCString *pTitle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTitle</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a3bb2d1d717831570d4a65b197eb05853</anchor>
      <arglist>(FCString *pTitle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>QueryLastCommandModifierKeys</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a5425bfe37445c83cdfb7d2cf939d22f3</anchor>
      <arglist>(FLAG_32 modifiers)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>CloseWindow</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a6d399c70058aa570fdbc2552d5bd7b4a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TryToCloseWindow</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>aba68680b4754e99e37fa7277e67ce060</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaximumResizeWidth</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>aa8781f5ceb604f665d705c61b9f991cd</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaximumResizeHeight</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>aa851cf74fa0bd1a1df519d5a0c891b6e</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMinimumResizeWidth</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a4e0a1669886e50fbc2b3744e24883443</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMinimumResizeHeight</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a5b07dabbb8023fef4e279bd3fb08ff2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMaximumResizeWidth</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a8fcb10e203b63fce75d4ca118f2c8c8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMaximumResizeHeight</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a112c38c8cbf21ee45c4e3e56ebec5788</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WindowExists</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a2c2b7364de7c99db38d4375b7fed3a97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Hide</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a21afc05abc75a41190c928dc50e093ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowAndActivate</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>ab0b3de8de5886315f0012a24088a574d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>InitWindow</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>afebf95525a3766038f62f2277f5fb988</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>WindowDestroyed</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>acf3be9830b53fcb6e8fb1265b032f78f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CloseButtonPressed</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a465a2939c1f15b254269e990b59e7020</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OkButtonPressed</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a680d83691662b0ce490ffad14483ff8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CancelButtonPressed</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>aa6adf7a4b03db5a14e6581becf5d13c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HandleCommand</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a087d0240f4737eb1d819352b52bc458a</anchor>
      <arglist>(FCControl *pControl)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>HandleSwitcherSelect</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a57f2d0f4e70c0e7673c5066a71501375</anchor>
      <arglist>(FCCtrlSwitcher *pControl, int switchindex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>HandleUpDownPressed</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a0fd54beccbc201856ab48553e774ec2c</anchor>
      <arglist>(FCControl *pControl, int delta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>HandleDataListSelect</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a002c3b3ce086d57cb4dfd72cbf17086c</anchor>
      <arglist>(FCCtrlDataList *pControl, int lineindex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>HandleDataListCheck</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a56d0fd910850f157489da89ad4c56384</anchor>
      <arglist>(FCCtrlDataList *pControl, int lineindex, bool checkstate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>HandleTimer</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>ae15e12dbb3c5bae8b2f6eb73742d4d0f</anchor>
      <arglist>(twobyte timerID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>HandleActivate</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a9ae9a17c76d55bfca8d058d01cf978ca</anchor>
      <arglist>(bool activated)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>HandleResize</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a1310823b2bf28c8d02a54b39e6ac9234</anchor>
      <arglist>(int newwidth, int newheight, int oldwidth, int oldheight)</arglist>
    </member>
    <member kind="function">
      <type>FCControl *</type>
      <name>FindControl</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a4cab2d1e3101f1b175ef3b7b626aefec</anchor>
      <arglist>(int controlid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimer</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>ade05abc47f171184da43cd416437d8e8</anchor>
      <arglist>(twobyte timerID, ufourbyte msInterval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopTimer</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a6ade589469183e85781e540207ba0f15</anchor>
      <arglist>(twobyte timerID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Activate</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>adf166287462dd18555fc04a26eacb167</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>CanClose</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a752ea07d70bda71e6811014dfd276d67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsVisible</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>abe6245a824a7eb7a20457ca8bd2c77ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StorePosition</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>acad11a7065685d4bf7a1d22d338b8377</anchor>
      <arglist>(bool storesize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RestorePosition</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a624bf8a8c19db0f267d35fddb08b90aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRestorePositionData</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>ad09465d9e4ee4910ce65ef8f563b2a4c</anchor>
      <arglist>(float x, float y, float width, float height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRestorePositionOnlyData</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>af9f085cd4d7fe7fc795f616bafd865d2</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetStoredX</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a6b755de0e3a7a88cc6d9d03ae1783a84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetStoredY</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>ac0dec923a8cd6ad961f1f6187b98eda7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetStoredWidth</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a6e3c12635b0b07cf18f57cfc1fdb378c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetStoredHeight</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a0ed0016a02544fbf144e79326d7010d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsWindowshade</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a31d22ce91eda46f156cfc744dbecc4ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Windowshade</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>ac68576f630d0f26daf5a1f10280c7f3f</anchor>
      <arglist>(bool windowshade)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWindowAlpha</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a7ecf3f2962f8b4473a4452caa44f47f4</anchor>
      <arglist>(twobyte alphapercent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartBufferControlMovement</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a785539cd49715f29210b6d61c6347f87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EndBufferControlMovement</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a8c81ad539b5c8893c37a757ab94decf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInBufferMode</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a1f444cadaa8b979df56c2b349178d01b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_WinSetInitWindowCalled</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>abc9d317795d69f2c43d01698b588168f</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_WinSetRestorePositionCalled</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>ae9b0623a5e8c6527eff5acf5ec73fb15</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_WinPostRestorePosition</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>aee3278cc0461b8028ec15bcce6648040</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>twobyte</type>
      <name>GetModalResult</name>
      <anchorfile>class_____f_c_user_window.html</anchorfile>
      <anchor>a9c5a5ca62fb10c2c595a94a152e1ebde</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCAccidentalMod</name>
    <filename>class_f_c_accidental_mod.html</filename>
    <base>__FCEntryDetailNoteID</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a78160220ee69d8f3dbf854627dedddb5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a443049b062629da6da36cb017e55abce</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCAccidentalMod</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a401f39c5700372b2cd512d35c851936c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalPos</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>afbeb1707108aa6158e07b60d115fa639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalPosIfPossible</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a94011b203c4d299407481483bbde7760</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalPos</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a1d3e00e1b133fa2a2dd345b03bba711e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCustomVerticalPos</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>ac17ec8a541cb0312c4631699b2b5fbc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetCustomChar</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a06890cb572af745212c0c4fbf2beaa1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCustomChar</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a2a8b886af0526cad9aa9e34d74f16ec8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetResize</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>abe3922bc36466f4cb164c861894d2314</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCustomFont</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a5c1de07e2f8345c0f52f8ac6734abd92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetFontName</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>ac568e2be49a2ee6bd36f393cfd6d4819</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const eUniChar16 *</type>
      <name>GetFontNameUTF16</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a696a5c750e708af2a73f986642c0e205</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFontSize</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a4c6fdb24a4ffe74dd226483a7ef93340</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFontStyle</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>add4bdb388086abe5d3d0e77c27b4651a</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFontInfo</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a75ad3a7f896e0707bf61f0e4e9f1d845</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPos</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a88452830ce0a2435c2384fa714b96993</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPos</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a90dce897f0503276c4aa8ddecf7dfdff</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseCustomVerticalPos</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a1d4b20d893e0bea67b01a86414005841</anchor>
      <arglist>(bool status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseDefaultVerticalPos</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>ad5ef504a0cf32cb6b61945b1de9ab402</anchor>
      <arglist>(bool status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetResize</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a90f537b1daeec8f51ccb65fb3be27bcc</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseCustomFont</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>acb169028824f910dc4ea61e4ed84c2d1</anchor>
      <arglist>(bool status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseDefaultFont</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a8470dc4503548f077e1ad14b51078ece</anchor>
      <arglist>(bool status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontName</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a93c89518471f7cf7c0035212698e19c8</anchor>
      <arglist>(const char *pszFont)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontNameUTF16</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a6f27daa84a7aa3b282c9956f5be72303</anchor>
      <arglist>(const eUniChar16 *pszFont)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontSize</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a98f68abbfeb8415e4ec4d3ff58598844</anchor>
      <arglist>(twobyte fontsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontStyle</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>abe360216764b017cf2f1e575aae041a7</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontInfo</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a6189aae0371cd19feb2df990ac81156d</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCustomChar</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>ad00c69331fadd26b5fdb1f21269c6e77</anchor>
      <arglist>(eUniChar32 ch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearChar</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a2041ed1f06af858277e8708cb1944aae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteID</name>
      <anchorfile>class_f_c_accidental_mod.html</anchorfile>
      <anchor>a2d45d0506b7b7370ed5e18e02d34d5eb</anchor>
      <arglist>(twobyte id) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCAccidentalMods</name>
    <filename>class_f_c_accidental_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_accidental_mods.html</anchorfile>
      <anchor>a9af503acfeac414902cd4d885f9c96b9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCAccidentalMods</name>
      <anchorfile>class_f_c_accidental_mods.html</anchorfile>
      <anchor>aebebd02ccfc42325b5ecaea958631af2</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCAccidentalMod *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_accidental_mods.html</anchorfile>
      <anchor>a7ab40d6c3229f618c3a843893790dad1</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCAllotment</name>
    <filename>class_f_c_allotment.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_allotment.html</anchorfile>
      <anchor>a655d71d0a009f2fcd8db504039c2788c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_allotment.html</anchorfile>
      <anchor>a13cf858c4017481591c8c5d1ae490838</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCAllotment</name>
      <anchorfile>class_f_c_allotment.html</anchorfile>
      <anchor>a709e5d5691e0e4e1da319a95b4b3fc6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_f_c_allotment.html</anchorfile>
      <anchor>ac6857d4463785127c730ca70777c2b5a</anchor>
      <arglist>(twobyte width)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetWidth</name>
      <anchorfile>class_f_c_allotment.html</anchorfile>
      <anchor>a06237f89fabc0d644b43e3796239b754</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_allotment.html</anchorfile>
      <anchor>a50a550839878b3f55132a2c0c06b06d9</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCAllotments</name>
    <filename>class_f_c_allotments.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_allotments.html</anchorfile>
      <anchor>a6277f59651f6082d4bcb190babc232ff</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCArticulation</name>
    <filename>class_f_c_articulation.html</filename>
    <base>__FCEntryDetail</base>
    <member kind="enumeration">
      <type></type>
      <name>PLACEMENTMODE</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a2756e277eb51200e698947e6cf954f9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>STACKINGMODE</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a5f9bc527a4b8631a856bf21582e4cf02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>ae6070e0e05de57417f7b6e86c10310f1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a36a9d9269f6cc8d148c2ef7e9897a3c5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a4eedcc1b3ca4ab5c5d81a6ddc3fe2107</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCArticulation</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>af6cd792eddb362bd5f2128d22034278f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetArticulationDef</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a54b8e5992b1143a1955e4e41190b5df7</anchor>
      <arglist>(FCArticulationDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetID</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>aec2c32655291d12beeebfee8ff3a2fb0</anchor>
      <arglist>(CMPER cmper)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPos</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a853b117b2a7c0a3ed8ce5ebe16ecda24</anchor>
      <arglist>(Evpu16 pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalCopyToPos</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>af126dd5c237d48ff8c5da9bf5a0d8d01</anchor>
      <arglist>(Evpu16 pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPos</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>af0763a51e2b9b197c2f70714a52b5e6e</anchor>
      <arglist>(Evpu16 pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalCopyToPos</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>abed38316ad6b9a34c2b7612b4f96d566</anchor>
      <arglist>(Evpu16 pos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVisible</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a4aea670b81eceb47dd3ea9d756ec0ac7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVisible</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>af2bd291cdb874f82f272260bfcaa0970</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>STACKINGMODE</type>
      <name>GetStackingMode</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a7639d29eccb92126b19b3075b8283781</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStackingMode</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a608acb483e5a9e742b717104e42576b5</anchor>
      <arglist>(STACKINGMODE value)</arglist>
    </member>
    <member kind="function">
      <type>PLACEMENTMODE</type>
      <name>GetPlacementMode</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a50157dd01858d09d521c2dbb8e08ce1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlacementMode</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>aa08fc86215856dac29e6bce433cee223</anchor>
      <arglist>(PLACEMENTMODE value)</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalPos</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>aa90e1afe2b1fe9a90b93bd2900ff972d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalCopyToPos</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>aac84f8b5a0af1745caf43e0104a091cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalPos</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a7cce938178d2dee1e906d4c451fb58c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalCopyToPos</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a4702953d2fa4f96a8d17a516bf9cb7e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetID</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a89ef022eab0f24156b8900260fabee0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCArticulationDef *</type>
      <name>CreateArticulationDef</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a3ac2a22dedd8ab73d679702c38a8cb35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcMetricPos</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a4a925308c53c0256a9f842bbd5a7c6ed</anchor>
      <arglist>(FCPoint *pPoint)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcFlippedSymbolUsed</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>abb20f536d832d048ea72a04b58f6c6eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetPos</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a622c72d13c4cb14b02426cbf752e0810</anchor>
      <arglist>(FCArticulationDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_articulation.html</anchorfile>
      <anchor>a709f48406095a7d2539c2851ea015081</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCArticulationDef</name>
    <filename>class_f_c_articulation_def.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>ARTPOSITIONING_SIDES</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>aa937b980b363c1bcde2d3dbc85006943</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ARTSLUR_INTERACTION</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>aad1a19aab927384ba44e459d552ca66e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>afaf1ec79eeebf2e5c3242bb8da9ed01a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>abf12377d230854cf077b63450fb4a3e6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCArticulationDef</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ae8dd27616634a796ad03c2b622305b49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetOnScreenOnly</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>aa62774f87b1c6ff0a4141a3bc1f944cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCFontInfo *</type>
      <name>CreateMainSymbolFontInfo</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a16f9853e69bb381ff9c05e288db8afa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCFontInfo *</type>
      <name>CreateFlippedSymbolFontInfo</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a150ad43d68529551effe08aa2219b8f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetAboveSymbolChar</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a60e819e5212642c8f756d427ebe4f440</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetBelowSymbolChar</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>afc4d8d3376bcb1d12805b4ac8c5ce8e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetMainSymbolChar</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ac9435bf971a3fae00dcfed2722474c51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMainSymbolShapeID</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a46388974aa144712eebe7bd77b563698</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetFlippedSymbolChar</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a795b30e0b0aa30f95576ab71a437abbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFlippedSymbolShapeID</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a1eaddde892a1c4efc07f9304d333beaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetMainSymbolFont</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a5a0e01bab0d8c42fb2909b09d0db36b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EFONTID</type>
      <name>GetMainSymbolFontID</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a06b583f90d5a27753f86110f4d466c8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const eUniChar16 *</type>
      <name>GetMainSymbolFontUTF16</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a718c9d0ab4d1d039d4cac9b0eae9598b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetFlippedSymbolFont</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ac25d8c522dc014fab594cb781983e734</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EFONTID</type>
      <name>GetFlippedSymbolFontID</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a844342663bc57cbf4964900e1e9ae921</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const eUniChar16 *</type>
      <name>GetFlippedSymbolFontUTF16</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ab1d17c7402861f2b92a71365a8b8e913</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMainSymbolSize</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a9f72020efae7c53b208ac7d9956772bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFlippedSymbolSize</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ad037d222f0c572ad0f3db89bcd31a8f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAboveUsesMain</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>afb64a58681c4ad4abd592cab677ad424</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBelowUsesMain</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a721c5df1358fb74fe1346110f3b41c8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCopyMainSymbol</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a6e0bfb2bc8c922a4bad4f67b742942eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCopyMainSymbolHorizontally</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a463e06ade19115de6891c87748b2be8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPlayback</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a6fd2d7ca3f50fbdee7bcc5671211faa1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAttackIsPercent</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>af86e443a2ae20b45618391a8afa5e910</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTopAttack</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>afe11481ec949601cda796afc96cbac14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBottomAttack</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a7d845553f72b43863ac03d3ee969da49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDurationIsPercent</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a11e50b06e3a03a16a5cf2b0092444338</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTopDuration</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a5d1bfedead78ab96d4a9bd8c44674952</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBottomDuration</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a3bd5c00b22cc3a9a9453d8fde4231990</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVelocityIsPercent</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ab8dc5f3dc67022cef35d358e2aa9d865</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTopVelocity</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a52d72a22cf32c9140b468e46124f95bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBottomVelocity</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a96d0fb27c53eabe6c87be6fa5f829aa7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidStaffLines</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a0f0ddaec2cbb1bc37a55584a6ad89757</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAlwaysPlaceOutsideStaff</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>acac33c62476950642563a68e74f7e309</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCenterHorizontally</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>afe250c8e62b623f0a4cd610e880ea184</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ARTSLUR_INTERACTION</type>
      <name>GetSlurInteraction</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>aa5dbc1a44b2e81585d8dbec8b33f3d9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetInsideSlurs</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a6d0e0702d07e79729d30830b791ab241</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAttachToTopNote</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>add08c9bf2cf29946dcd680ee106d459d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetStackAutomatically</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>afc2202c44c259cee84f459c5a54bb35c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCenterOnStemWhenStemSide</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a298ded81486ae735a737f9a84f228fec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetStemSideWhenMultipleLayers</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>afecf7eefcffb237e1b710ce28e7f7812</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetDefaultVerticalPos</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a3bc3202af69874bcb5e8d706184232cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ARTPOSITIONING_SIDES</type>
      <name>GetAutoPosSide</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>abae7202440f7da979c7e92badf5c2a74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetMainHandleVerticalOffset</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a7ecc6e96efcd1bd3a95cd2ea71d09c16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetMainHandleHorizontalOffset</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ac2bdeeebc8ac5445cfd3dcc36b3de393</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetFlippedHandleVerticalOffset</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a8dd42eec4b85bdc9063ef447ca2e9264</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetFlippedHandleHorizontalOffset</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ac85323a08774a358c4493d0d83b88603</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetMainSymbolIsShape</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a5b4c706b92a5fcbbd32f974329f82528</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFlippedSymbolIsShape</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a14210a23cf0c573cbd222b782165e1dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsShapeUsed</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a5090bca2b453efc29710891330709067</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMainSymbolFont</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>afab29cf07f92456146ce0a26f457f45b</anchor>
      <arglist>(const char *pszFontName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMainSymbolFontUTF16</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>abffbaf21d9bd29e59806662d4eb7cd32</anchor>
      <arglist>(const eUniChar16 *pszFontName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFlippedSymbolFont</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>aa1006dbec9416b23fe9ac974e3c12b4d</anchor>
      <arglist>(const char *pszFontName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFlippedSymbolFontUTF16</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a7c01d2db6091d096d1f1debf2bf60f73</anchor>
      <arglist>(const eUniChar16 *pszFontName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdenticalTo</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>afd467f219f5c1736ff905683cd43bd0e</anchor>
      <arglist>(FCArticulationDef *pDef, bool playbackinfo, bool positioningvalues, bool positioningoptions, bool defaultside)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetMainSymbolFontInfo</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a631e25be11fa9b0e213131081fa3b8a9</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFlippedSymbolFontInfo</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a4b717cd4eef9a022a48641c38686a08b</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOnScreenOnly</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a908a4e4f6a0f5cf7db8bee26757982b4</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMainSymbolFontInfo</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>aabc1f9bec7a1b6d168d649ceb87d5582</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlippedSymbolFontInfo</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ac4e76b3c9c181229def027285b09e91b</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMainSymbolSize</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a840e5c6d9bfe74cf9b80daf773902c65</anchor>
      <arglist>(twobyte size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlippedSymbolSize</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a534208aad0c12a07b9428ada8f298b59</anchor>
      <arglist>(twobyte size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMainSymbolFont</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a840fca162d1bb13e170db84d66561339</anchor>
      <arglist>(const char *pszFontName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlippedSymbolFont</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ad428aa5bc42fae6e469a6ae6cd4421c1</anchor>
      <arglist>(const char *pszFontName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMainSymbolFontUTF16</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a939b7293d0d4911d53fa0c2d369deaf8</anchor>
      <arglist>(const eUniChar16 *pszFontName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlippedSymbolFontUTF16</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a57fd1f8be20a5dbb14d81bb1d00873da</anchor>
      <arglist>(const eUniChar16 *pszFontName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAboveSymbolChar</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>abd848fbc24252c9638954c5f7eb94285</anchor>
      <arglist>(eUniChar32 symbol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBelowSymbolChar</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a946314e6d800ac95bc230c5d9ca85888</anchor>
      <arglist>(eUniChar32 symbol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMainSymbolChar</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ae9dfbb5b5911cdf6e308390fcdfe57da</anchor>
      <arglist>(eUniChar32 symbol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMainSymbolIsShape</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>afdaddaf7a8ba044974990a89274a230a</anchor>
      <arglist>(bool useshape)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlippedSymbolIsShape</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a84ee5696baa1e9db9c810df31e7ea46a</anchor>
      <arglist>(bool useshape)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMainSymbolShapeID</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>af20f1d75f27acc4eba390df4478fa187</anchor>
      <arglist>(CMPER shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlippedSymbolShapeID</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a23251cae760a24327825ce89cc356c4f</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlippedSymbolChar</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a0164b14c9003b8a87b7c6db733141818</anchor>
      <arglist>(eUniChar32 symbol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAboveUsesMain</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ae107984b8d4cec5b44242079db1f7938</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBelowUsesMain</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>abc243eb362a1a37b9a86d0e5998b1bd4</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCopyMainSymbol</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a54f1d38f165cbca11be4a27921496e90</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCopyMainSymbolHorizontally</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>aa0c72237f4125a017da4a74689045d14</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlayback</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a5de173bdd7dd7f6e43823ae97ae521a2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttackIsPercent</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a75bdc4e85d91f1f70753cefbc5b611f0</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTopAttack</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ad6d0876d179a9362dd31c1266bd62fd4</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBottomAttack</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a89b2ca1d9c42449867124ca9b0db1ce2</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAutoPosSide</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a0b1810ad25e7804a0e9d30889f4740ae</anchor>
      <arglist>(ARTPOSITIONING_SIDES mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlwaysPlaceOutsideStaff</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a00a21640cbab471089107c6ca6ee72a2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCenterHorizontally</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a08c862799f9d4e036a8622aa08bd0d54</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidStaffLines</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a3dc8624b18a1b34167ca30d619538fbc</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurInteraction</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a9c59fec2c1550b0c89e0c7b6987af4de</anchor>
      <arglist>(ARTSLUR_INTERACTION mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInsideSlurs</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a1758e8b54f3d0cc29962fc753585c394</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttachToTopNote</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ad133e0bcfb1096475f962f69fcbbf4a7</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStackAutomatically</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a43f5ebc16dfb4a78792aa24473c889cd</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCenterOnStemWhenStemSide</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a30d5e1d8f619b033a086c2c704066c87</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStemSideWhenMultipleLayers</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a6261d10257927ed4a547482ef59a9d24</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDefaultVerticalPos</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>aa67120d6c72942a2f7ddace8ba6f33f0</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMainHandleVerticalOffset</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>aa660c1d90cf827a912d85c9994040d0c</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMainHandleHorizontalOffset</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ac998351d819bb0798b0dc2c09430893d</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlippedHandleVerticalOffset</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a179ed967a87621ccb1a1c181303d73ae</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlippedHandleHorizontalOffset</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a5f3c2629d7405614174503fd2263d24b</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTopDuration</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a177ae0aa52ab530925d95a34c4627cd0</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBottomDuration</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>ad945ac580c8ea7b7b53f872450d89ad7</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDurationIsPercent</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a12304b46ecc0eae2a12ecf5ad6e282e8</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTopVelocity</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a31d639cc80f92fa4660032e0b04aff82</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBottomVelocity</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a7081c5ce30bae84fdb51fd58de1ed1ce</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVelocityIsPercent</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a12889daff7acfc9b65cf7907693279e9</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_articulation_def.html</anchorfile>
      <anchor>a2ba393637078726bb427ce8c8a20e6ad</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCArticulationDefs</name>
    <filename>class_f_c_articulation_defs.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_articulation_defs.html</anchorfile>
      <anchor>a76d44a783628230c462cd54dde67f0bb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCArticulationDefs</name>
      <anchorfile>class_f_c_articulation_defs.html</anchorfile>
      <anchor>a38840857ca5d9b1fa5c36c3aac2f51c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCArticulationDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_articulation_defs.html</anchorfile>
      <anchor>ab3681a983828d87d1b38b713aa23a737</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCArticulations</name>
    <filename>class_f_c_articulations.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_articulations.html</anchorfile>
      <anchor>a7f9322c9f8d05780887196197a759dc6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCArticulations</name>
      <anchorfile>class_f_c_articulations.html</anchorfile>
      <anchor>a25dae963232447669528ba1d2cb22126</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsDefID</name>
      <anchorfile>class_f_c_articulations.html</anchorfile>
      <anchor>a22b5914e0eff4b2b5adbb0ed38b82021</anchor>
      <arglist>(twobyte articulationID)</arglist>
    </member>
    <member kind="function">
      <type>FCArticulation *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_articulations.html</anchorfile>
      <anchor>ac0eacf4a9f0a348731179e9a9053b916</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBackwardRepeat</name>
    <filename>class_f_c_backward_repeat.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>abec6130ce3d789647b84c7e939917e96</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a91faa23828884411385fe18b863022d0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCBackwardRepeat</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>ab8ba6b26401dbcaf3d31c8bb2cdfc0f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>eMeas</type>
      <name>GetTargetMeasure</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a6c09a8cb2ca6c4eea9f669c4d2fa4e4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIndividualPositioning</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>ad998fa2860f9f6f21422148eecb93040</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTotalPasses</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>af981700a062d53dc925c89d6a6f4fb01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTopBracketPosition</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a6ed26e81422006a72d16918941eed483</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetBottomBracketPosition</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a4c8caeaec34a719b0bde631210ad0775</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetRightBracketPosition</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a545cd0f755704681f1a32ee4d5b89ede</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLeftBracketPosition</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>ad802f730d8e77b93256e16c372946800</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaffListID</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a3db3aa461a1dc668b38752bff4843ce3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCTextRepeat::REPSHOWMODES</type>
      <name>GetShowMode</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a0062c0697d508a7dac9c341feac513bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowMode</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>ab6c6d6280eafb768852cc9b68c166b57</anchor>
      <arglist>(FCTextRepeat::REPSHOWMODES mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTargetMeasure</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>aab9d4cc85ca0f016ddbae65bb68e4753</anchor>
      <arglist>(eMeas measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIndividualPositioning</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a6a6dd3ea7a0f017ee9e10163a235d4c6</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTotalPasses</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a59ebc1126bdbcef62818d9d0e9bc8450</anchor>
      <arglist>(twobyte passes)</arglist>
    </member>
    <member kind="function">
      <type>FCTextRepeat::REPTARGETTRIGGERS</type>
      <name>GetTargetTrigger</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a215c2358955ec52a0fdd0a7e804864db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetResetOnRepeatAction</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>aaec756c40be8915e27ae29185d09eff9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTopBracketPosition</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>aec1c9292ac0b9a84df6eddb2e8c5c301</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBottomBracketPosition</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a32885b1b1d7cec695524fd3ca89cad17</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightBracketPosition</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a3974cf9c533f512bcf4cc2da1178e280</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftBracketPosition</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a6c6509c1f650dfbf08e758ae2d10406a</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaffListID</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>ae9dfd7feb4c81c23c79a69bff0dc09e0</anchor>
      <arglist>(twobyte stafflistid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTargetTrigger</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a79b15e553684188148094868506b84b6</anchor>
      <arglist>(FCTextRepeat::REPTARGETTRIGGERS value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetResetOnRepeatAction</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>aab7f86333eb87ebd56001d19d60847ef</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>FCTextRepeat::REPACTIONS</type>
      <name>GetAction</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>abf6b669c8f0619656dd564ef469130d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAction</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>af999b30a34f3103eadd6067d68d392a0</anchor>
      <arglist>(FCTextRepeat::REPACTIONS mode)</arglist>
    </member>
    <member kind="function">
      <type>FCSeparatePlacements *</type>
      <name>CreateSeparatePlacements</name>
      <anchorfile>class_f_c_backward_repeat.html</anchorfile>
      <anchor>a10ab0385b7873c30c29c3b51c5f9d584</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBaseline</name>
    <filename>class_f_c_baseline.html</filename>
    <base>__FCDetail</base>
    <member kind="enumeration">
      <type></type>
      <name>BASELINEMODES</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_UNDEFINED</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fa52f3442d3ec92c7dbd804edd9dd636e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_EXPRESSIONABOVE</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fa19db0f67b8075d7bf7c08872295d897e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_EXPRESSIONBELOW</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fa5983d36b78f14fb9afb7e0685cc3c9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_CHORD</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fab36601b7a13e44e36ed06dbf3b88db64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_FRETBOARD</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fa43a2245b51c6aa964951cb89d4c83173</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_LYRICSVERSE</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fa3b9c60f86841f48c702560031910ad60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_LYRICSCHORUS</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fab1efb9e1f98477b317f343358b455a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_LYRICSSECTION</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fa86b76aca4edaac2f6cf18e0f79e894e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_UNDEFINED</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fa52f3442d3ec92c7dbd804edd9dd636e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_EXPRESSIONABOVE</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fa19db0f67b8075d7bf7c08872295d897e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_EXPRESSIONBELOW</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fa5983d36b78f14fb9afb7e0685cc3c9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_CHORD</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fab36601b7a13e44e36ed06dbf3b88db64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_FRETBOARD</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fa43a2245b51c6aa964951cb89d4c83173</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_LYRICSVERSE</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fa3b9c60f86841f48c702560031910ad60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_LYRICSCHORUS</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fab1efb9e1f98477b317f343358b455a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINEMODE_LYRICSSECTION</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5210bd1c32a80e6627f03d473d3b6f4fa86b76aca4edaac2f6cf18e0f79e894e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a8a3f0c6f18675dc6bc04291301d0fe73</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a36fbe8c1ba71357e11dec58f0f36115d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCBaseline</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a9da67ebb5961a3e43341ae3d887e27e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalOffset</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a0d6e2fe7659b3e5f0ffec56750dbd7c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLyricNumber</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>af577a17facf6bd13b82d193a5bf92dca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BASELINEMODES</type>
      <name>GetMode</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>acc948464c34aa0a4f7546f8504bb4f93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eSsys</type>
      <name>GetSystem</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a56d92e705309d811b2485cd70c1fe1de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGlobalScope</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a0db7204ff9bcc4eedf7837bd046bf37d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eStaff</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a0db5e04562f41c68ff3c5d7e1503fc11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalOffset</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>ab0e56f3b4d7a3508a46f6f7ce9cdeefd</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLyricNumber</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a98a2d47677cf61770460086c6775620c</anchor>
      <arglist>(twobyte number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMode</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>acbbce3818795fc3f810514410129c0d4</anchor>
      <arglist>(BASELINEMODES mode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>af1e12ca8d5d816da823055aff2abf64a</anchor>
      <arglist>(eSsys systemno, eStaff staffno, twobyte inci)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNew</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a8a0ce7774adcbc29075e6086586be684</anchor>
      <arglist>(eSsys systemno, eStaff staffno)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAs</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a7fb9a6490b8b7048a3bf0fd22700024f</anchor>
      <arglist>(eSsys systemno, eStaff staffno, twobyte inci)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadForStaff</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5391521d7c6604082d5f9eef25acce4f</anchor>
      <arglist>(eSsys systemno, eStaff staffno)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadDefaultForMode</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>a5584dea0111b54f0f75378892a27b613</anchor>
      <arglist>(BASELINEMODES mode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadDefaultForLyricNumber</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>ab14b5d12661c7d875862b3094f5bf01e</anchor>
      <arglist>(BASELINEMODES mode, twobyte lyricno)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>acbe29cae6b88faed0b2d0d02a3a664b5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Evpu16</type>
      <name>CalcTotalOffset</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>acae2865215c71df85a1f275238fa0396</anchor>
      <arglist>(BASELINEMODES mode, eSsys system, eStaff staff)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Evpu16</type>
      <name>CalcTotalOffsetForLyricNumber</name>
      <anchorfile>class_f_c_baseline.html</anchorfile>
      <anchor>aa00183380085682bc6c8aeca3ac02445</anchor>
      <arglist>(BASELINEMODES mode, eSsys system, eStaff staff, int lyricno)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBaselines</name>
    <filename>class_f_c_baselines.html</filename>
    <base>__FCCollectionDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_baselines.html</anchorfile>
      <anchor>a1a3739f274f39d85230a8bba8d3acd20</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCBaselines</name>
      <anchorfile>class_f_c_baselines.html</anchorfile>
      <anchor>aeb5972624de14304e1185f44250fb3d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAllForSystem</name>
      <anchorfile>class_f_c_baselines.html</anchorfile>
      <anchor>aaf655c1027bea02cfabe96d9fdd61fe3</anchor>
      <arglist>(FCBaseline::BASELINEMODES mode, eSsys systemno)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAllForPiece</name>
      <anchorfile>class_f_c_baselines.html</anchorfile>
      <anchor>ac50916eb80d53b93fb920613a40a4aa3</anchor>
      <arglist>(FCBaseline::BASELINEMODES mode)</arglist>
    </member>
    <member kind="function">
      <type>FCBaseline *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_baselines.html</anchorfile>
      <anchor>a019a135318473a22ecc4b084531b74a5</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>FCBaseline *</type>
      <name>FindStaff</name>
      <anchorfile>class_f_c_baselines.html</anchorfile>
      <anchor>a64bae84526a70189a9ee8051d3577b10</anchor>
      <arglist>(eStaff staffno)</arglist>
    </member>
    <member kind="function">
      <type>FCBaseline *</type>
      <name>FindLyricNumber</name>
      <anchorfile>class_f_c_baselines.html</anchorfile>
      <anchor>a0f228a8c7df42f7c9ae83f3cc67ee669</anchor>
      <arglist>(eStaff staffnumber, twobyte lyricnumber)</arglist>
    </member>
    <member kind="function">
      <type>FCBaseline *</type>
      <name>AssureSavedLyricNumberForPiece</name>
      <anchorfile>class_f_c_baselines.html</anchorfile>
      <anchor>afd3c249a558e77368374e6c5f9f725e0</anchor>
      <arglist>(FCBaseline::BASELINEMODES mode, eStaff staffnumber, int lyricnumber)</arglist>
    </member>
    <member kind="function">
      <type>FCBaseline *</type>
      <name>AssureSavedStaffForPiece</name>
      <anchorfile>class_f_c_baselines.html</anchorfile>
      <anchor>a8b6cef7bdd5176efe6d2c60c5fff9bf4</anchor>
      <arglist>(FCBaseline::BASELINEMODES mode, eStaff staffnumber)</arglist>
    </member>
    <member kind="function">
      <type>FCBaseline *</type>
      <name>AssureSavedLyricNumber</name>
      <anchorfile>class_f_c_baselines.html</anchorfile>
      <anchor>a11360f7d1d07974ea39e86adf757d063</anchor>
      <arglist>(FCBaseline::BASELINEMODES mode, eSsys systemnumber, eStaff staffnumber, int lyricnumber)</arglist>
    </member>
    <member kind="function">
      <type>FCBaseline *</type>
      <name>AssureSavedStaff</name>
      <anchorfile>class_f_c_baselines.html</anchorfile>
      <anchor>ada7121d42ee27ab7c2e74a14bd5cb32a</anchor>
      <arglist>(FCBaseline::BASELINEMODES mode, eSsys systemnumber, eStaff staffnumber)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBeamMod</name>
    <filename>class_f_c_beam_mod.html</filename>
    <base>__FCEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a63323d8fca78541da4fd111dd6733c15</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a81f420d7c4f68c2a69a2ce46c03b5350</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCBeamMod</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>aaf66ffc422f46fc1fd799d99c512541a</anchor>
      <arglist>(bool secondarybeam)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a7394a4a52827e3f6ae355386f13e3be6</anchor>
      <arglist>(ENTNUM entnum, twobyte inci) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a99347bb19270a1971d2213874a61c3d3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNew</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>af999e83a8e3a7697a35455b0fd84d2a6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteEntry</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a0b4f08ca987dc58cc179a5defa156637</anchor>
      <arglist>(FCNoteEntry *pEntry) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMode</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a6dc233c1edcf3bb549649d7b5b4dbe69</anchor>
      <arglist>(twobyte mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftHorizontalOffset</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a6a35a4391b57dedcafb32ee01a0bc498</anchor>
      <arglist>(twobyte offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightHorizontalOffset</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>acf335d5c346ee32da020dbc5a78d02d3</anchor>
      <arglist>(twobyte offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftVerticalOffset</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a477344e6a29217d5554cf8ae01c64d95</anchor>
      <arglist>(twobyte offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightVerticalOffset</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a01d53910aa59eb42b6d939f86eaded71</anchor>
      <arglist>(twobyte offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetThickness</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a46fe714447722aaff94012138476a677</anchor>
      <arglist>(twobyte thickness)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDefaultBeamThickness</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a9ddef72f2015ca3c21d99113a8e9ceb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDefaultMode</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a4972397503ccd65b72787bf4bb021cfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBeamNumber</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a9f3218eea87fd4e38f75287cbb2f5675</anchor>
      <arglist>(twobyte beamnumber)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLeftHorizontalOffset</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a602cc73649651250c682e0496db601fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRightHorizontalOffset</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a144952ff26fbd1e662ee1dcf039e5f74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLeftVerticalOffset</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a94db02106998b0b5b11eb18abd5171a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRightVerticalOffset</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a38690d0460ce89262d23244fd5c01ecc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMode</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a2c7d002d5008aaebe31a86f37e4b9e6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBeamDuration</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>ac09a8093be552a9f1ae166af74bc8527</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBeamNumber</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>add64ba806152d1dd6dcd03f183aa095a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetThickness</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a047fc1de4999b8e8285b72c151618248</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcLeftVerticalPos</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>aa76d52b4fe7989ca23f9ef76a67dae28</anchor>
      <arglist>(twobyte default_separation)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcRightVerticalPos</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a74d9358aef81023dfa1425bc2a1b1021</anchor>
      <arglist>(twobyte default_separation)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSecondaryBeam</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>ae947ceb91d780df1b60e164ccdb4de99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUpStem</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>a8b77bc06fc39250557e4e8a9a67dc64f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_beam_mod.html</anchorfile>
      <anchor>af64f0472737728c8f4aa0a092e8b1a2f</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBeatChartElement</name>
    <filename>class_f_c_beat_chart_element.html</filename>
    <base>__FCInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>ac1b4fb67f5147ac80845424511647716</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>ab2483510c2e736ab8214344df42aea89</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCBeatChartElement</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>ac5533a5cfbf4dfbc41d38ce3cde3bb2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>ad9769d6394ee3337c15e3799c97e3f70</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalPosition</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>a9c99a0e2a4c08298c1aa7899faa51421</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetFullSpan</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>ae4f30ff9426812c360e6173e330fb0a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetReferenceWidth</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>a645ee5f390c601b04640bdf5b27d01ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetMinimumPosition</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>a0e2426f607986ab126da80f3bc099811</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetNextHorizontalPosition</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>aa0efceac694fe646ca67bda7d478cae5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetInitElement</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>a77779959414bae98cd9bf7b1b03ed958</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>CalcWidth</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>adf953ca692736487bfcc0f75960c9c86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurePos</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>aa15a4d50ef8244a4632716f50b251d91</anchor>
      <arglist>(TimeEdu32 edupos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>af17b2204552d6eeb0f17c87b7623e5bc</anchor>
      <arglist>(Evpu16 width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPosition</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>a70db4e23f38ed662028a8fec709fd3df</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNextHorizontalPosition</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>a14e2452bc3c138b850c3c9741bb0cefe</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFullSpan</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>a99b65c17d081a722cdd2076166f9169a</anchor>
      <arglist>(Evpu16 span)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceWidth</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>ae35247bc90f0891044fbcc47458c8193</anchor>
      <arglist>(Evpu16 width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMinimumPosition</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>a3e4cf626d524104d865b1ad0dc900484</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MoveHorizontalPosition</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>ac9292d936679617068b1e85cd3a4e2e2</anchor>
      <arglist>(Evpu16 offset, FCBeatChartElements *pBeatChart)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_beat_chart_element.html</anchorfile>
      <anchor>aeba4106ff477dd330dfb884caea7b28f</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBeatChartElements</name>
    <filename>class_f_c_beat_chart_elements.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCBeatChartElements</name>
      <anchorfile>class_f_c_beat_chart_elements.html</anchorfile>
      <anchor>af0fd510691a437c52b71598443ef3bb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_beat_chart_elements.html</anchorfile>
      <anchor>a426c3919199301d779f0554e62d7678e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCBeatChartElement *</type>
      <name>FindMeasurePos</name>
      <anchorfile>class_f_c_beat_chart_elements.html</anchorfile>
      <anchor>a8c58cbfbf665e80add5f07ade297ff42</anchor>
      <arglist>(TimeEdu32 durationpos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RebuildAfter</name>
      <anchorfile>class_f_c_beat_chart_elements.html</anchorfile>
      <anchor>ae033a12f2409a93b434ac7f2a75d1905</anchor>
      <arglist>(int index, bool updateinitrecord=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RebuildNextHorizontalPositions</name>
      <anchorfile>class_f_c_beat_chart_elements.html</anchorfile>
      <anchor>af7da6e048cc6221dbea4de235a90576c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>class_f_c_beat_chart_elements.html</anchorfile>
      <anchor>a3c736a9a4a967005f23b923a31ac6cb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAll</name>
      <anchorfile>class_f_c_beat_chart_elements.html</anchorfile>
      <anchor>a0a0fab8684bbb02d45d21ca380a5c9ed</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCBeatChartElement *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_beat_chart_elements.html</anchorfile>
      <anchor>a2e7875ba30b0e129629871115ae40055</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBrokenBeamMod</name>
    <filename>class_f_c_broken_beam_mod.html</filename>
    <base>__FCEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_broken_beam_mod.html</anchorfile>
      <anchor>a04f2f084580d1efaca1c02f6180bc831</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_broken_beam_mod.html</anchorfile>
      <anchor>a9a91c0534f9228ee3b3c0027633b1e65</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCBrokenBeamMod</name>
      <anchorfile>class_f_c_broken_beam_mod.html</anchorfile>
      <anchor>a11276990ab2b0fb2ea4654b377532b81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftDirection</name>
      <anchorfile>class_f_c_broken_beam_mod.html</anchorfile>
      <anchor>a8fff8db534546e47e696311d4b5066aa</anchor>
      <arglist>(bool leftdirection)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLeftDirection</name>
      <anchorfile>class_f_c_broken_beam_mod.html</anchorfile>
      <anchor>a70eed17cbca4e976590740dce62de432</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBrokenBeamMods</name>
    <filename>class_f_c_broken_beam_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_broken_beam_mods.html</anchorfile>
      <anchor>ac4aece01b2add3351b859c2bfc40ca04</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBrowserArticulationDefs</name>
    <filename>class_f_c_browser_articulation_defs.html</filename>
    <base>__FCBrowserNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_browser_articulation_defs.html</anchorfile>
      <anchor>af9a8c0b9335c54ee60751a96a95aff19</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>__FCNoInciOther *</type>
      <name>CreateAnObject</name>
      <anchorfile>class_f_c_browser_articulation_defs.html</anchorfile>
      <anchor>a9da6cbf7dbe7400c4d7e98c2c1c78b30</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBrowserChords</name>
    <filename>class_f_c_browser_chords.html</filename>
    <base>__FCBrowserRegionBase</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>RegionIterateCellHandler</name>
      <anchorfile>class_f_c_browser_chords.html</anchorfile>
      <anchor>ab6055ff4ed2d159341d2085acdae3de1</anchor>
      <arglist>(FCCell *pCell, FCIteratorHandler *pIHandler, FCMusicRegion *pRegion)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBrowserExpressions</name>
    <filename>class_f_c_browser_expressions.html</filename>
    <base>__FCBrowserRegionBase</base>
    <member kind="function">
      <type></type>
      <name>FCBrowserExpressions</name>
      <anchorfile>class_f_c_browser_expressions.html</anchorfile>
      <anchor>ac808514d104bc4f090aa5dc9f2f4fab5</anchor>
      <arglist>(FCStaffSystems *pSystems=NULL)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>RegionIterateCellHandler</name>
      <anchorfile>class_f_c_browser_expressions.html</anchorfile>
      <anchor>a5d76b95ca54b40e945719e9399111380</anchor>
      <arglist>(FCCell *pCell, FCIteratorHandler *pIHandler, FCMusicRegion *pRegion)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBrowserMeasures</name>
    <filename>class_f_c_browser_measures.html</filename>
    <base>__FCBrowserNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_browser_measures.html</anchorfile>
      <anchor>a4eabe7b2ad608e34056cce1e12fa0588</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>__FCNoInciOther *</type>
      <name>CreateAnObject</name>
      <anchorfile>class_f_c_browser_measures.html</anchorfile>
      <anchor>a2d1ee09942af1c5497decf1daeff216b</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBrowserMidiExpressions</name>
    <filename>class_f_c_browser_midi_expressions.html</filename>
    <base>__FCBrowserRegionBase</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>RegionIterateCellHandler</name>
      <anchorfile>class_f_c_browser_midi_expressions.html</anchorfile>
      <anchor>accba71cd8fdf1060a1ff98e06dfeca92</anchor>
      <arglist>(FCCell *pCell, FCIteratorHandler *pIHandler, FCMusicRegion *pRegion)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBrowserNoteEntries</name>
    <filename>class_f_c_browser_note_entries.html</filename>
    <base>__FCBrowserRegionBase</base>
    <member kind="function">
      <type></type>
      <name>FCBrowserNoteEntries</name>
      <anchorfile>class_f_c_browser_note_entries.html</anchorfile>
      <anchor>a94be45af105363c4b8a9a47a6485ac15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDeleteAllNullEntries</name>
      <anchorfile>class_f_c_browser_note_entries.html</anchorfile>
      <anchor>a7f7a5c44dc0041774d969b15b062e9e7</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDeleteAllNullEntries</name>
      <anchorfile>class_f_c_browser_note_entries.html</anchorfile>
      <anchor>adff7db89c306c044018460f26c16cf33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLoadLayerMode</name>
      <anchorfile>class_f_c_browser_note_entries.html</anchorfile>
      <anchor>a787a2e6b076ac02206b13520bcd0a97b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLoadLayerMode</name>
      <anchorfile>class_f_c_browser_note_entries.html</anchorfile>
      <anchor>a124b0030549b51c31013fea7ab2cc1ae</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>RegionIterateCellHandler</name>
      <anchorfile>class_f_c_browser_note_entries.html</anchorfile>
      <anchor>a73c92cdfb1c9e9f467146fe632246f6a</anchor>
      <arglist>(FCCell *pCell, FCIteratorHandler *pIHandler, FCMusicRegion *pRegion) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBrowserPages</name>
    <filename>class_f_c_browser_pages.html</filename>
    <base>__FCBrowserNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_browser_pages.html</anchorfile>
      <anchor>a1ff5931a23fc61337d2febb088f1ae00</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>__FCNoInciOther *</type>
      <name>CreateAnObject</name>
      <anchorfile>class_f_c_browser_pages.html</anchorfile>
      <anchor>a202d7d7427e331f9a49ea5dd92a33500</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBrowserStaffSystems</name>
    <filename>class_f_c_browser_staff_systems.html</filename>
    <base>__FCBrowserNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_browser_staff_systems.html</anchorfile>
      <anchor>a0155f16dc02bf85e6604b8ded7fad923</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>__FCNoInciOther *</type>
      <name>CreateAnObject</name>
      <anchorfile>class_f_c_browser_staff_systems.html</anchorfile>
      <anchor>aed83591b6d14760c29f75d2fafb0ad83</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBrowserStaves</name>
    <filename>class_f_c_browser_staves.html</filename>
    <base>__FCBrowserNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_browser_staves.html</anchorfile>
      <anchor>a6c58840ffd4bbb388d4f25adec60e880</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>__FCNoInciOther *</type>
      <name>CreateAnObject</name>
      <anchorfile>class_f_c_browser_staves.html</anchorfile>
      <anchor>ac5d87da3ada1f6e60303612c07fab012</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCBrowserTuplets</name>
    <filename>class_f_c_browser_tuplets.html</filename>
    <base>__FCBrowserRegionBase</base>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>RegionIterateCellHandler</name>
      <anchorfile>class_f_c_browser_tuplets.html</anchorfile>
      <anchor>a181bf4323f834df3f037e799c70d3c47</anchor>
      <arglist>(FCCell *pCell, FCIteratorHandler *pIHandler, FCMusicRegion *pRegion) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCategoryDef</name>
    <filename>class_f_c_category_def.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>CATEGORY_DEFAULTIDS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULTCATID_DYNAMICS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689ca36352cb4f5776554052086c474764f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULTCATID_TEMPOMARKS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689cafafd52c2bd2b07525edf8fe58980e9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULTCATID_TEMPOALTERATIONS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689ca1673b971a29561ae04201678b7d69870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULTCATID_EXPRESSIVETEXT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689cacea56f5548cae05636426d162b4b5abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULTCATID_TECHNIQUETEXT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689caa9f4f2bb59260e5219fb5dc08f67c1f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULTCATID_REHEARSALMARK</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689caf86a81fd9a993027b083db8128a398b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CATEGORY_MODE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5460b619cbffda0a1a7bb7cd807e5d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CATEGORYMODE_NONE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5460b619cbffda0a1a7bb7cd807e5d75af8ceb39cfea7006deae0b3badb13d55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CATEGORYMODE_TEXT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5460b619cbffda0a1a7bb7cd807e5d75a9e0700783d8ae8c11f297b76ed5fc81f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CATEGORYMODE_MUSIC</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5460b619cbffda0a1a7bb7cd807e5d75a2636d0c68ac80735a01f1ed74a777d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CATEGORYMODE_NUMBER</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5460b619cbffda0a1a7bb7cd807e5d75a6c6209cda0fb8148fb9592aa09a1b770</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VERT_ALIGNMENT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_CLICKPOS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba38ac5c9fc7e6ac60fb32d48cbc59e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_STAFF_REFERENCE_LINE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba71b00f4e58b3838bb97a21f6ae4501fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_ABOVE_STAFF_BASELINE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba74fc2d0b2c385e3e7782b57fe552b729</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_BELOW_STAFF_BASELINE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba14e6a0e0550b5f791606278d45ff72a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_TOPNOTE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995bab2884f206620d475294e9f54a63c494e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_BOTTOMNOTE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba68a162a890962fa2cd6916f67264285b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_ABOVEENTRY</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995baad031b1d00b3b5a80d6854f03ec781a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_BELOWENTRY</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba07779f79194aad18ba64c76890dfefdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_ABOVE_STAFF_BASELINE_OR_ENTRY</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995bafd02ea6b80ed25801303867089cb41d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_BELOW_STAFF_BASELINE_OR_ENTRY</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba953b300a90dc98ca915e5880d398558b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HORIZ_ALIGNMENT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_CLICKPOS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a86c5bfd6acce579176979e6167222f05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_LEFTOFALLNOTEHEAD</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a413f6c891f059ab4ca43c8c1467ba490</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_LEFTOFPRIMARYNOTEHEAD</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2adda5afcda4d47ec536c851a17b056166</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_STEM</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a56ce1ea19a1f27bf90a751925fa9fd2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_CENTERPRIMARYNOTEHEAD</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a1b903c4267822d9c90427c94417ecf05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_CENTERALLNOTEHEADS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a990e82e7c148b8e73d2bf5ca3f42923c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_RIGHTALLNOTEHEADS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a6f23e3ec189887088f822519a4acc5be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_LEFTBARLINE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a810f92c78460b6aa532aa226b47b75c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_TIMESIGSTART</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a59d6bcbd7c1134eab2c727fdca12900d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_AFTERCLEFKEYTIMEREPEAT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2aeb8fe72c6ed955fcc025f3545e466a60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_STARTOFMUSIC</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2ad27318f423d49030564b06d8545f8a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_CENTERBETWEENBARLINES</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2ae76d688272eb70543fc701f356c464d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_CENTEROVERUNDERMUSIC</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a792d6a3d461cc5e0d9f86938ce80e692</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_RIGHTBARLINE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2aa21ce5459774651c733132d85b36a783</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HORIZ_JUSTIFICATION</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a33bf884fc291564f5e7b31b8c87963ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPRJUSTIFY_LEFT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a33bf884fc291564f5e7b31b8c87963ecac1f3243bfd398cefd756f585472911a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPRJUSTIFY_CENTER</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a33bf884fc291564f5e7b31b8c87963eca325f6b517d8d5cbb4aec40d70f991817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPRJUSTIFY_RIGHT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a33bf884fc291564f5e7b31b8c87963eca57766153e0b831ca0f1cacc949e3d795</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULTCATID_DYNAMICS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689ca36352cb4f5776554052086c474764f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULTCATID_TEMPOMARKS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689cafafd52c2bd2b07525edf8fe58980e9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULTCATID_TEMPOALTERATIONS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689ca1673b971a29561ae04201678b7d69870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULTCATID_EXPRESSIVETEXT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689cacea56f5548cae05636426d162b4b5abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULTCATID_TECHNIQUETEXT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689caa9f4f2bb59260e5219fb5dc08f67c1f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULTCATID_REHEARSALMARK</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a70897d418aab3b3ef951fea2e3e4689caf86a81fd9a993027b083db8128a398b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CATEGORYMODE_NONE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5460b619cbffda0a1a7bb7cd807e5d75af8ceb39cfea7006deae0b3badb13d55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CATEGORYMODE_TEXT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5460b619cbffda0a1a7bb7cd807e5d75a9e0700783d8ae8c11f297b76ed5fc81f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CATEGORYMODE_MUSIC</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5460b619cbffda0a1a7bb7cd807e5d75a2636d0c68ac80735a01f1ed74a777d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CATEGORYMODE_NUMBER</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5460b619cbffda0a1a7bb7cd807e5d75a6c6209cda0fb8148fb9592aa09a1b770</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_CLICKPOS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba38ac5c9fc7e6ac60fb32d48cbc59e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_STAFF_REFERENCE_LINE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba71b00f4e58b3838bb97a21f6ae4501fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_ABOVE_STAFF_BASELINE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba74fc2d0b2c385e3e7782b57fe552b729</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_BELOW_STAFF_BASELINE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba14e6a0e0550b5f791606278d45ff72a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_TOPNOTE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995bab2884f206620d475294e9f54a63c494e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_BOTTOMNOTE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba68a162a890962fa2cd6916f67264285b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_ABOVEENTRY</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995baad031b1d00b3b5a80d6854f03ec781a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_BELOWENTRY</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba07779f79194aad18ba64c76890dfefdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_ABOVE_STAFF_BASELINE_OR_ENTRY</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995bafd02ea6b80ed25801303867089cb41d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNVERT_BELOW_STAFF_BASELINE_OR_ENTRY</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a504d5081d392e4c8c159629c4501995ba953b300a90dc98ca915e5880d398558b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_CLICKPOS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a86c5bfd6acce579176979e6167222f05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_LEFTOFALLNOTEHEAD</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a413f6c891f059ab4ca43c8c1467ba490</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_LEFTOFPRIMARYNOTEHEAD</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2adda5afcda4d47ec536c851a17b056166</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_STEM</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a56ce1ea19a1f27bf90a751925fa9fd2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_CENTERPRIMARYNOTEHEAD</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a1b903c4267822d9c90427c94417ecf05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_CENTERALLNOTEHEADS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a990e82e7c148b8e73d2bf5ca3f42923c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_RIGHTALLNOTEHEADS</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a6f23e3ec189887088f822519a4acc5be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_LEFTBARLINE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a810f92c78460b6aa532aa226b47b75c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_TIMESIGSTART</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a59d6bcbd7c1134eab2c727fdca12900d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_AFTERCLEFKEYTIMEREPEAT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2aeb8fe72c6ed955fcc025f3545e466a60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_STARTOFMUSIC</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2ad27318f423d49030564b06d8545f8a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_CENTERBETWEENBARLINES</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2ae76d688272eb70543fc701f356c464d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_CENTEROVERUNDERMUSIC</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2a792d6a3d461cc5e0d9f86938ce80e692</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGNHORIZ_RIGHTBARLINE</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aefcef15fe7c36efac62a5747ade0dcb2aa21ce5459774651c733132d85b36a783</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPRJUSTIFY_LEFT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a33bf884fc291564f5e7b31b8c87963ecac1f3243bfd398cefd756f585472911a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPRJUSTIFY_CENTER</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a33bf884fc291564f5e7b31b8c87963eca325f6b517d8d5cbb4aec40d70f991817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPRJUSTIFY_RIGHT</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a33bf884fc291564f5e7b31b8c87963eca57766153e0b831ca0f1cacc949e3d795</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>afcddd211958cab30d36beedf28bd23cd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aec3088520d46b38eee030cb9f4e22aad</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCategoryDef</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>adc486112a9fbe13bb3140f3748447b7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsIdentical</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a72123628cc1e3b7eda5a470f3fd65534</anchor>
      <arglist>(__FCBase *pObject) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakMMRest</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a2069afe5f90c9b1f7d3769d4a11c0775</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetOverrideStaffList</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a0ef74b66eba96a7bd8687af847697f07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetID</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>addd0a5755b6a1c23ddb5e9dbca0f3bdb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CATEGORY_DEFAULTIDS</type>
      <name>GetType</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a599b62a1d7a89e758f6b98bf60675d4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewWithType</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a40165705a3a593dd0958ddac5f48f496</anchor>
      <arglist>(CATEGORY_DEFAULTIDS type)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaffListID</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>addd563e41a49158d9ad0501ec8fc784f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetName</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a4010afa904f2384209dd85aa9bc18351</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateName</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a4357d3acb2858868ab398c7a320ec5d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VERT_ALIGNMENT</type>
      <name>GetVerticalAlignmentPoint</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>ace4347798e0043c11d2f71371bd50d03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalBaselineOffset</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>ab83b28f2db53a68008c1e082aa1ee82b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalEntryOffset</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a522f6609c23af2467d333a08f7d5ffd0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HORIZ_JUSTIFICATION</type>
      <name>GetHorizontalJustification</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a3d2867443f5cdaf80208f0663c5ec6c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HORIZ_ALIGNMENT</type>
      <name>GetHorizontalAlignmentPoint</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a3da8c6634fb05a386e8514c6c08cf63f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalOffset</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5e9873533cb9fcec6ea9793beb3af079</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTextFontInfo</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5f1e82461d8e6bd52318da1e1f9e14a0</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetMusicFontInfo</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aadf507c8edbc6639d10c9e75feec0a15</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNumberFontInfo</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a4f9625a1c3e1ae2d1c15c9077665644c</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetTextFontInfo</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a73237cb9d3680642061b09f1c369eb2c</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetMusicFontInfo</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a529a51d7bc293665d6365b0817c50eb5</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetNumberFontInfo</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>af8cdeaec9f5ccc466a8cf41ef5a529fa</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaffListID</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aae363d29b84a3171b28cfabed79ea7ef</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>FCFontInfo *</type>
      <name>CreateTextFontInfo</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a2901d224a3cb86836a70a57646b0b5b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUserCreated</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5365064ecac9fb63faafe0685685d56c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDefaultMiscellaneous</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a18e46d46d5d1685c6153cd7f8bbcae09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDefaultDynamics</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>acc9324f6a4943372d140c830b0505a98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDefaultTempoMarks</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a8c51021bed0456c7f94b19dbf5d5cd64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDefaultTempoAlterations</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a8fdf02fb2623e296ce57969be896d63f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDefaultExpressiveText</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a8121f66c0a006cad156d59ca7fc65666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDefaultTechniqueText</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a564a0809351caa85324a9c44759e97e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDefaultRehearsalMarks</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>abdc234bc11d232da42a7f9ee2456d95d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UsesStaffList</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a184ad368f8f837d918b3eb56d55c9ff4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UsesTextFont</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a268014050e9914d8827c9955ed90df72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UsesMusicFont</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>ac7633be1dbd4a82d39636576d7a995cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UsesNumberFont</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a858bfe2920739d0aa93883a68f6bc2b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a359bd5a8344d09eb7f590d14cd381d81</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalAlignmentPoint</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>abcde06feb20119f0c29fc2f7edca2711</anchor>
      <arglist>(VERT_ALIGNMENT value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUserCreated</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aa030277965653d0701bf65debc177d6f</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakMMRest</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a975d374e0e594b4dc570dd0f50ff60f1</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOverrideStaffList</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a9fb5398b95d1784ee6b9cc7588dec2df</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetID</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a55caf43f907b387ec6f75732d21bb936</anchor>
      <arglist>(twobyte catID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalBaselineOffset</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>aa69292001206e18b5f645f5c0d402df3</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalEntryOffset</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a0843af5dd573f701fb837076237352f9</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalJustification</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a5a085f7101fd5c7f79c90db09651e832</anchor>
      <arglist>(HORIZ_JUSTIFICATION value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOffset</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a51513f05eda79c375d5880a71448c818</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalAlignmentPoint</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>a7eab4f5f131db16cac91212f413a3fbc</anchor>
      <arglist>(HORIZ_ALIGNMENT value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_category_def.html</anchorfile>
      <anchor>afdd4196fe80fbcf84a2334888efc6964</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCategoryDefs</name>
    <filename>class_f_c_category_defs.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCCategoryDefs</name>
      <anchorfile>class_f_c_category_defs.html</anchorfile>
      <anchor>a3688469777c7bbb8967947c839d0448d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_category_defs.html</anchorfile>
      <anchor>a5db994196ae42ecbca47cd97b252ac21</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCCategoryDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_category_defs.html</anchorfile>
      <anchor>a77393a289bcae08fa2abeff86961ed8f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>FCCategoryDef *</type>
      <name>FindName</name>
      <anchorfile>class_f_c_category_defs.html</anchorfile>
      <anchor>ab5c63cacb6e9eae7c614bf82fae3444a</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>FCCategoryDef *</type>
      <name>FindID</name>
      <anchorfile>class_f_c_category_defs.html</anchorfile>
      <anchor>ac7778e3a1d06ad05484c2f54c00e70af</anchor>
      <arglist>(twobyte catID)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCell</name>
    <filename>class_f_c_cell.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type></type>
      <name>FCCell</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>abcb9c181d1e6c7ca21d9aacb833859b1</anchor>
      <arglist>(int measure, int staff)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntryCell *</type>
      <name>CreateNoteEntryCell</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a1d22d02c8d5d17472c5db2c34545c7ba</anchor>
      <arglist>(bool shouldload, int loadlayermode=0)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a5083cfc46077c705a16fb2688702394f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMeasure</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a664f0fb748eea34e1c8f45e5d6d26887</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a992d61f1bffa187724fb0154d3c2e798</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>CalcEntryDuration</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>af15c7a1e878385188398ea8a31628d8b</anchor>
      <arglist>(int layer=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcClefIndexAt</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>aab18de33a19b2b021e075cf84d4bdec5</anchor>
      <arglist>(TimeEdu32 pos)</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>CalcDuration</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a32669e4f3675fbbffbdbb5ccebd26445</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCKeySignature *</type>
      <name>GetKeySignature</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a066a0c783418864fe9f7005b9adf625a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasIndependentTimeSig</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a9262a91ea7fd8fad33d03a652f9cf6a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasIndependentKeySig</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a9ecbf44a3e4be735c22113b12fbc8dd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCTimeSignature *</type>
      <name>GetTimeSignature</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a79914bcd28c7e8218db1208fbcf4ce91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCTimeSignature *</type>
      <name>GetTimeSignatureForDisplay</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a4391d481a5677b5cfccb39504e4c2227</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReAssign</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a6d21c2683589467f04d194ffb4f14580</anchor>
      <arglist>(int measure, int staff)</arglist>
    </member>
    <member kind="function">
      <type>FCCellMetrics *</type>
      <name>CreateCellMetrics</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a9fda9258748d7f7877876c9dcf83ae11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCKeySignature *</type>
      <name>AssureSavedIndependentKeySig</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>aa4507d8bbdab3fb147068ec142571562</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCTimeSignature *</type>
      <name>AssureSavedIndependentTimeSig</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>af5807a859a427d3e2dfbe5e56df516ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCTimeSignature *</type>
      <name>AssureSavedIndependentTimeSigForDisplay</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a44e1f610aaf224da884d8271629b0099</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveIndependentTimeSigForDisplay</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>a117d892069b593ef81ebbb764f28b335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_cell.html</anchorfile>
      <anchor>ae18a4fe89d1d004ab2405130acd5f15d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCellClefChange</name>
    <filename>class_f_c_cell_clef_change.html</filename>
    <base>__FCInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>ac28ca47a8cb28622e3bcd373edf2c9c1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>ac59cb3f788a8bbec3ee1c21bcf1e5e6b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCellClefChange</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a9ef1a8d75a4580cd2081d11ee3ffb930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetClefIndex</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a5b29b4e148ca4eaa05ce7cda2f3a6d73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a1768786dad056ad26d3df414795fbe21</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetClefPercent</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a5f386555d3ec1b0566d1ed040ebd2114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalOffset</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a2ad3605806b398385be2039eb32bbbe2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalOffset</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a3308b20aa809d74486c15058ba83a7b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetClefShow</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a81d1bd08fb2560bb84e93e8ed7bccf49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAllowVerticalDrag</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a3a4b2e48a7ee9f9059e23775b223a86d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetClefAfterBarline</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a3ebc67a7601cc372593c517a5dee2fdb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefIndex</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>aff330b5b83a1fc93eaa2735bbd3669b0</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurePos</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a410d85ecd63e4bc4ce10a49c92cf55ba</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefPercent</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a1618c2457c9bb67c394ab92ea8d3f78a</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOffset</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a662117d9ab0e61ae2fc636c234620946</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalOffset</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>ac1a7b132128456e1e3742d3c6a867dfc</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefShow</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a121c98bceba419bee42a8e43993ce1d2</anchor>
      <arglist>(twobyte showstate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllowVerticalDrag</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>ac150d43eeebb0ca613271a5a70adde68</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefAfterBarline</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a9db11da836a30db28efcb5e460475df9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStartClef</name>
      <anchorfile>class_f_c_cell_clef_change.html</anchorfile>
      <anchor>a87c3933427a1c4ae0247337b37be38dc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCellClefChanges</name>
    <filename>class_f_c_cell_clef_changes.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cell_clef_changes.html</anchorfile>
      <anchor>a133ae6f26e1d225f533e7c2641016194</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCellClefChanges</name>
      <anchorfile>class_f_c_cell_clef_changes.html</anchorfile>
      <anchor>ad7e45d36a6667f9d68fef9d4a2bb7a5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertCellClefChange</name>
      <anchorfile>class_f_c_cell_clef_changes.html</anchorfile>
      <anchor>a91adc9034d30340291821bb88047503d</anchor>
      <arglist>(FCCellClefChange *pClefInfo)</arglist>
    </member>
    <member kind="function">
      <type>FCCellClefChange *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_cell_clef_changes.html</anchorfile>
      <anchor>a2e284d3a621f3fa1c783bc30afe98563</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCellFrameHold</name>
    <filename>class_f_c_cell_frame_hold.html</filename>
    <base>__FCNoInciCellDetail</base>
    <member kind="enumeration">
      <type></type>
      <name>CLEF_SHOW</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a1638a0dfd8f7baddc5c5e186cb574f8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a731b7eff5b42c6ac4a4a7fba3812d8ee</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>ab4bf012a935a2867c96b16207a45e2bb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCellFrameHold</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>af17e354143ab58c421763b7b267e13e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetClefIndex</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a4f73950c9fd8f82eb4676000c17bf735</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetClefPercent</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a50850c3d2f2bf608548b1fcdd6595fef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CLEF_SHOW</type>
      <name>GetClefShow</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a06bca387c706b657201d14880c4a3df2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIsClefList</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a2fe668824e59902953f8fc262fb1f263</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetClefAfterBarline</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a09f44bc1d3b6183d949d7be871717a7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefIndex</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>ab2d5f47590fc96547c726f01d4aeb672</anchor>
      <arglist>(twobyte newclef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefPercent</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a7b69aff0003ca6130052fc76d28467ff</anchor>
      <arglist>(twobyte resize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefShow</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>aa7cfc7063e09f5f6e6f23c3298cd4a87</anchor>
      <arglist>(CLEF_SHOW value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefAfterBarline</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>af00282601353b461406c58b6e5a82ae6</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcClefChange</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a42e9b02affa5c2fd6022ba9f4eefe9e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcHasFrame</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a105cd0314dd96877937ee5a4c6d62cec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcMultiLayeredCell</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>aa27cd5b21e0fb64ad7bb3d31bff00833</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNew</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>adc161a28a6d6fb37dfe88ade96f04682</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCCellClefChange *</type>
      <name>CreateFirstCellClefChange</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>ae5a04e8c759f8746db2ab6da854433e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MakeCellSingleClef</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a05147ddf2a1d7cdea937dbbf432407ad</anchor>
      <arglist>(const FCCellClefChange *pClefInfo=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>FCCellClefChanges *</type>
      <name>CreateCellClefChanges</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a0aefbbc1627d9ee2485558c7ab91797c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetCellClefChanges</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>a10cb6758de67397f2f0f1dc8af8d71b0</anchor>
      <arglist>(FCCellClefChanges *pClefChanges)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_cell_frame_hold.html</anchorfile>
      <anchor>abead108f63f0f36e75e2ca6c383924df</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCellFrameHolds</name>
    <filename>class_f_c_cell_frame_holds.html</filename>
    <base>__FCCollectionNoInciCellDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cell_frame_holds.html</anchorfile>
      <anchor>a6bdd0aaa969a49889647508a6a2b7a40</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCellGraphic</name>
    <filename>class_f_c_cell_graphic.html</filename>
    <base>__FCCellDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cell_graphic.html</anchorfile>
      <anchor>a6191ca58d7ade6a3bb5f9cfadb762811</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_cell_graphic.html</anchorfile>
      <anchor>a365e36a8739d2b79fcc005693d096f95</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCellGraphic</name>
      <anchorfile>class_f_c_cell_graphic.html</anchorfile>
      <anchor>ac5343eb35d1ef0a2a47bdf2163a8bd6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmbedded</name>
      <anchorfile>class_f_c_cell_graphic.html</anchorfile>
      <anchor>a3121bc2016dd8581830acf87973f0c84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_cell_graphic.html</anchorfile>
      <anchor>a930b08d7bdc0f759dae9e9ff044ca17a</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCellGraphics</name>
    <filename>class_f_c_cell_graphics.html</filename>
    <base>__FCCollectionCellDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cell_graphics.html</anchorfile>
      <anchor>a366f3923faa92601eedf34bd2dd1e07b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCCellGraphic *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_cell_graphics.html</anchorfile>
      <anchor>ab2a22e9079b7e51d18879194fcf2f7eb</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCellMetrics</name>
    <filename>class_f_c_cell_metrics.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a489a55910b08a57292faa123cc9b2ba6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCellMetrics</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>aef5d18bd709f4fafae9cb851110f966d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadAtCell</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a9a7db5d1a658b47335690a13dc319636</anchor>
      <arglist>(FCCell *pCell)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadAtEntry</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a0b0a63c5c1ea077b3668ae5fe4cff539</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>Int100</type>
      <name>GetHorizontalStretch</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>af4057418a7d9bb0ecf15ee2ac9d89b00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu32</type>
      <name>GetTopStafflinePos</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a9122060cc11f2caae25f319dd59c56ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu32</type>
      <name>GetBottomStafflinePos</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a7c783336df148b7a3969dc982de6aadf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu32</type>
      <name>GetReferenceLinePos</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a284bcc07432176f6b7dc5fef746d688b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int100</type>
      <name>GetStaffScaling</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a70ba11b4193e1575c7a0ee0607f85cf0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int100</type>
      <name>GetSystemScaling</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a908a2078ae9ef2861dba9dc3edf1c69a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetAttachmentCount</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a80957afa18da9e75959f9e2288e4fafc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMusicStartPos</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a15e8490ad10afd1f6a8821bdf84f7779</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLeftEdge</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a8bd94bb524a4d5877b7c974cf5a5233c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetWidth</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a0af412de5ed7a9ccf19aa9ca1d684e45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMusicWidth</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>ae16321d80cf2f1edf346776f54197b18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetFrontRepeatWidth</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>abc91ccdbd08ff048f13c05172e103828</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetBackRepeatWidth</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a7959e64fb7fbe2a6083b05ef14add57c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRightBarlineWidth</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>aabed8702b334ee141ceb643d2a4ab055</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStaffSystem</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a6332250eb0e43b37aa9b23123b58b45f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu32</type>
      <name>GetSystemTopPos</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a1b6c71be290b48d72da708e6cac425fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu32</type>
      <name>GetSlotNumber</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>abf024f9458e5ce6d274e0ae5fd48d64c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAttachment</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a6a2b78ad525172f3562c7a57febf4d87</anchor>
      <arglist>(__FCBaseData *pBaseDataObject, fourbyte the_id, EAttachment *pAttachment, bool stop=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeMetrics</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a3227c2b9b902e8e3b49ea4c7c6027378</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>a1bd5189252e29c1c568e3a1930372fd6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MarkMetricsForRebuild</name>
      <anchorfile>class_f_c_cell_metrics.html</anchorfile>
      <anchor>ac25e817a59c63e2aeb930127db8e9c82</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCellPos</name>
    <filename>class_f_c_cell_pos.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type></type>
      <name>FCCellPos</name>
      <anchorfile>class_f_c_cell_pos.html</anchorfile>
      <anchor>aaba2c68a3a8fbc8ded75d68f58aea322</anchor>
      <arglist>(int measure, int staff, TimeEdu32 measurepos)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cell_pos.html</anchorfile>
      <anchor>a69e0eeee7e102d7a4fb22b50094a97bf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>eMeas</type>
      <name>GetMeasure</name>
      <anchorfile>class_f_c_cell_pos.html</anchorfile>
      <anchor>ade05674753de2eb1af8e83279bc12ca2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eStaff</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_cell_pos.html</anchorfile>
      <anchor>adfcb60a1ef128870a4c6a3bc5b83add9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_f_c_cell_pos.html</anchorfile>
      <anchor>a30a853e0dff455dd5181694cacdddc3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcClefIndex</name>
      <anchorfile>class_f_c_cell_pos.html</anchorfile>
      <anchor>a4e0b17d1c6c1d5a54e36a7d3d7a35470</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCells</name>
    <filename>class_f_c_cells.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cells.html</anchorfile>
      <anchor>aaa6e103b23e1a228753c97d651298da1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCells</name>
      <anchorfile>class_f_c_cells.html</anchorfile>
      <anchor>a89835f84b26ad81e81aed7c4d526cbac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyRegion</name>
      <anchorfile>class_f_c_cells.html</anchorfile>
      <anchor>adb549baffcae274eeb60400b8a46cfc0</anchor>
      <arglist>(FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachAtMeasure</name>
      <anchorfile>class_f_c_cells.html</anchorfile>
      <anchor>a35665d76807105ff6ba83d2a15a79fb5</anchor>
      <arglist>(int measure, FCIteratorHandler *pIterator)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachAtStaff</name>
      <anchorfile>class_f_c_cells.html</anchorfile>
      <anchor>af316f5a3c2bc6a1ba415353fdffe5903</anchor>
      <arglist>(int staff, FCIteratorHandler *pIterator)</arglist>
    </member>
    <member kind="function">
      <type>FCCell *</type>
      <name>Find</name>
      <anchorfile>class_f_c_cells.html</anchorfile>
      <anchor>a50eeb648456356f664c5b1ad5d9749dd</anchor>
      <arglist>(int measure, int staff)</arglist>
    </member>
    <member kind="function">
      <type>FCCell *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_cells.html</anchorfile>
      <anchor>a5703c31abd0b11ca8d6f47eb1ebd2c26</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCellText</name>
    <filename>class_f_c_cell_text.html</filename>
    <base>__FCCellDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a2b13c2acb02702755e7d207096c9298d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a969493fc13bf1d802cc382600368e2ac</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCellText</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>af547637e628a5fdc16fcee60a283e660</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateTextString</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a119d71ba92558a2d15dc71698964b7ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCTextBlock *</type>
      <name>CreateTextBlock</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a37de3208bdcbb6bf95b0ee74d9a81bb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewTextBlock</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a827c8d8057c48b22947d6b61c0a4aa60</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveTextString</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a3e5acaf6689e55f95e38731ae89f95c3</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTextBlockID</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a3feaac13d895ce9eae68622c201f0d68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetStringID</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a56481dd28f061c49562ae1b942902faa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a6eff2db194a988d67442fa8787abf52c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalPos</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a2867ae01c621495eac28a9dba37263cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVisible</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a239b1eb72d67571007160744fbcff3bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurePos</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a32714a4625d7beebc6199ad0b1682e7b</anchor>
      <arglist>(TimeEdu32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPos</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a8be0a00b64dbe0a189b416f271b43fd7</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVisible</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a8e5ab77f2620ed94a52ffcf080f5e475</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_cell_text.html</anchorfile>
      <anchor>a92dc99ec51dd0416db4463898533a6be</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCellTexts</name>
    <filename>class_f_c_cell_texts.html</filename>
    <base>__FCCollectionCellDetail</base>
    <member kind="function">
      <type></type>
      <name>FCCellTexts</name>
      <anchorfile>class_f_c_cell_texts.html</anchorfile>
      <anchor>aa42a13b34f34cf6425a5f99d4aaae447</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cell_texts.html</anchorfile>
      <anchor>a9323adea526ccb7868d40fa5ab549fcc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCCellText *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_cell_texts.html</anchorfile>
      <anchor>a410eea1a87943a916640dcc9f26b7703</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCenterSmartShape</name>
    <filename>class_f_c_center_smart_shape.html</filename>
    <base>__FCNoInciDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_center_smart_shape.html</anchorfile>
      <anchor>aa83bc5d5cc7bcd93c8f23b695eb1644b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_center_smart_shape.html</anchorfile>
      <anchor>a5ecbaa0b8e2fc1140ee9aff0713f9299</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCenterSmartShape</name>
      <anchorfile>class_f_c_center_smart_shape.html</anchorfile>
      <anchor>a9a994e8feb6257e3a53d2ed37821a621</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_center_smart_shape.html</anchorfile>
      <anchor>a483d2fc013e29b107cedba3098d2ef56</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCChord</name>
    <filename>class_f_c_chord.html</filename>
    <base>__FCCellDetail</base>
    <member kind="enumeration">
      <type></type>
      <name>ALTERNATEBASS_PLACEMENT</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a5e9af880f1e5f114a0e35b80c5b6b8e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>aa641a2be9ffa458d0fef994595467422</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a1df568509347a435b129f340cab05cbd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a289b52d30dc3c2f253ca5deb9dee46bf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCChord</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a6404202493c2d4b2c4ea7012901e6eca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEarlierThan</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>af16d540a8fe9862f0896efa53962f494</anchor>
      <arglist>(FCChord *pTestChord)</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>aa601f7abf271b9e920a65420a1221731</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurePos</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>aaa54769796aa99db590432664a90d7ba</anchor>
      <arglist>(TimeEdu32 position)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AnalyzeEntryChord</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>ad3fe8389f25bd0de66f737d81d3248e8</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>FCChordSuffixElements *</type>
      <name>CreateChordSuffixElements</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>aa5ce94b09a2aeb8af38080b15a9d36d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetChordSuffixID</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>ae69cb3ded54d1b4c562448f73c26eeca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetChordHorizontalPos</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>afc73fb0248e0f05e55be117f858917f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetChordVerticalPos</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a88f8911ddc483ade3281fd958ccf33a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetChordVisible</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a3e425c09221d1298de67c3afb3c93050</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetChordResize</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a4c8d11c9b3ff49e9c92387423aaf9dce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetChordRootVisible</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a3d135c14dae47f9798268319af5ed9ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetChordRootPlayback</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a81c4a8f572c68452273ea8bee78d63d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetChordRootLowercase</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>ae492af51a3341b0f1002baaf99b8e149</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetChordSuffixVisible</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a6a88dbe8de009bd54cf9ba1787e4874e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetChordSuffixPlayback</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a55e7f727b80ee10ebd1f4717ec2c1280</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCapo</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a7b6fdfac9bff2cb3791e58e6ba390f38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetCapo</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a2f6267313169767fec78b38d3821850f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetScaleNumber</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>adbff6451bdbdefe5fa75037ba618ed48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAlteration</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a9ccee5e8545e1a33bb44bafeb27ec023</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetChordAlternateBassVisible</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a99d04ff520006dd8c72f9130e2e868cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetChordAlternateBassPlayback</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>ad25820c26859cacd6739685c9a4cf5c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetChordAlternateBassLowercase</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a0afae9df06b9328c485632c0e5528a98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAlternateBassScaleNumber</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>abb8b5be8ee5ed3ff2a4007b0cb50c5ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAlternateBassAlteration</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a01df3af4c23e2f09c5bf0cef279abecf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ALTERNATEBASS_PLACEMENT</type>
      <name>GetChordAlternateBassPlacement</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a8b4e7da6ee521d551be3b674e384083b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFretboardStyleID</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>ae96ef93d2ffd94e3827de460ff3ca502</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFretboardHorizontalPos</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a3a03a6d19f7717c05c6e89085b20bf35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFretboardVerticalPos</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a0fa43415b92cef0bbe510585e7015024</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFretboardVisible</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a2eda3f7d4c66e09aa5b2aa87f817e887</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFretboardResize</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a8d74a39e23f89d2779b46f58f70e97ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFretboardPlayback</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a967550f95687d36cf714cfab34d5cac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFretboardUseFont</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a13e66e220d27c6a83f79201f7b9982da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordSuffixID</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a7908312419cf536ef99cf52174745f9b</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordHorizontalPos</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>aa3f9a851ed83f66b3767f340db7a0612</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordVerticalPos</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a18f3834a1e124f5cd953bef2ba00131c</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordVisible</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>adb74c1d01534a5f90576b8c62c1f6db7</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordResize</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>abc61cfa55b92659796e78537d6357643</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordRootVisible</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a207d05cea4a6456c13ca16a0010d6600</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordRootPlayback</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>ad59293f51cb901d25357d2a728b434ef</anchor>
      <arglist>(bool playback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordRootLowercase</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a347c94186ab72138d7144b396f722e61</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordSuffixVisible</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a3910b133ec2d539915c6057967420a27</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordSuffixPlayback</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>aff1dc56f5b8a7ae2ca8983819dc4f20a</anchor>
      <arglist>(bool playback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordAlternateBassVisible</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a0a9f8fac8b96dd235dd40eadf412c0a0</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordAlternateBassPlayback</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a633e9667fa79828c5d6d532bcadcb6d8</anchor>
      <arglist>(bool playback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordAlternateBassLowercase</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>ad657c0772cf4ec9664421774221a6626</anchor>
      <arglist>(bool lowercase)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordAlternateBassPlacement</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a9c702e70d4f749df2d9ef95025fde320</anchor>
      <arglist>(ALTERNATEBASS_PLACEMENT placement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseCapo</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a44a447576344e6e8967cf84ffc4b9669</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCapo</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a5666e479af851c1f515e9d4cf0957858</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScaleNumber</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a9cc858f221597d70a52ea8f9b6edf45f</anchor>
      <arglist>(twobyte scalenumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlteration</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a010d94bfd40d2d7f7340b1fbe204cd81</anchor>
      <arglist>(twobyte alteration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlternateBassScaleNumber</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a7e6646b085a9d976d493f36997905e52</anchor>
      <arglist>(twobyte scalenumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlternateBassAlteration</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a0817acbc15c6a6861c2b582e910d01ae</anchor>
      <arglist>(twobyte alteration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretboardStyleID</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a1fd784e77858473748809763d3f64f71</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretboardHorizontalPos</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a14dffbf5dfa46abd8ad4788f1f1293c4</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretboardVerticalPos</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>ac63fa54c0ed6428bff63d578c243e289</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretboardVisible</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a337b93eb671012b5cb1606fc31725ad4</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretboardResize</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>ad3e62633465b4e6b63a5025e88e3b3f0</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretboardPlayback</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a7567cc3f3b50904b7f5a90159cb51af5</anchor>
      <arglist>(bool playback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretboardUseFont</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>a3fa347a2bc26ed790b5dfc2f9edf85e8</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_chord.html</anchorfile>
      <anchor>ac8821c95338506d2617b342dcf81191c</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCChordPrefs</name>
    <filename>class_f_c_chord_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="enumeration">
      <type></type>
      <name>CHORDSTYLES</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_NORMAL</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59bacd66cbb81f92a0984511c839b225b1e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_ROMAN</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59baa7f5e0cc65816afae528e567d2225ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_NASHVILLE_A</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59badec935ce755e681dbdb0dc6ef670f2db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_GERMAN</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59baa6fc32e761aed830c1624c6f3fe973ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_SOLFEGGIO</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59ba19a2b482abb84bdfec606385842ee6ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_EUROPEAN</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59ba6b793099fa5bac467114540a522472c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_SCANDINAVIAN</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59bab1f03ca793ff6ee2928e530de84f6db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_NASHVILLE_B</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59bad06b6369b53f992d0d2d367bc8a0755f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_NORMAL</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59bacd66cbb81f92a0984511c839b225b1e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_ROMAN</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59baa7f5e0cc65816afae528e567d2225ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_NASHVILLE_A</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59badec935ce755e681dbdb0dc6ef670f2db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_GERMAN</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59baa6fc32e761aed830c1624c6f3fe973ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_SOLFEGGIO</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59ba19a2b482abb84bdfec606385842ee6ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_EUROPEAN</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59ba6b793099fa5bac467114540a522472c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_SCANDINAVIAN</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59bab1f03ca793ff6ee2928e530de84f6db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHRDSTYLE_NASHVILLE_B</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ab3f65563ee0a808ea62a16abda38c59bad06b6369b53f992d0d2d367bc8a0755f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>aed46803fe112a7b6f615f59ead8f1021</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>a92d9146681bc7f1bffd26b28f97ef648</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCChordPrefs</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>a1d770212538683e3fab663c0c776c2c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseSimpleSpelling</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>a8f9e2c1ef086f588b839cbd0fe3a80aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseSimpleSpelling</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ae2dba42bc4861cada83451c3b19ecccf</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLeftAlignment</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ae5950ccaea208d2562808d43ba6d8d1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftAlignment</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>ad6b7c85a289405ee028be1ab74eb43a1</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSharpBaselineAdjustment</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>a929623b871312cb6bf61d2566b09ecdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetFlatBaselineAdjustment</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>a2421da8f3dad6e3d0299a4eb239c604b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetNaturalBaselineAdjustment</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>addece2ec90bc4d1de0ba5db5e41c089b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSharpBaselineAdjustment</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>a429bfb67b96ec952ed8cce5a40cec36f</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlatBaselineAdjustment</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>a8ea6c8325612064b1cb678153a3cd7db</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNaturalBaselineAdjustment</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>a0149239a22b5a7c7867a3dbf1390599b</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>CHORDSTYLES</type>
      <name>GetStyle</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>a59851637812ed7bf8b380818984715fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStyle</name>
      <anchorfile>class_f_c_chord_prefs.html</anchorfile>
      <anchor>aba2f317d9f8801c0f79a1037e2ff9d36</anchor>
      <arglist>(CHORDSTYLES style)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCChords</name>
    <filename>class_f_c_chords.html</filename>
    <base>__FCCollectionCellDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_chords.html</anchorfile>
      <anchor>a6409646063fdf6c8fa1da8cff554d395</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCChord *</type>
      <name>FindMeasurePos</name>
      <anchorfile>class_f_c_chords.html</anchorfile>
      <anchor>a2094304cc3dc2118b0573d4ffad987ca</anchor>
      <arglist>(TimeEdu32 durationpos)</arglist>
    </member>
    <member kind="function">
      <type>FCChord *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_chords.html</anchorfile>
      <anchor>a62d2c5e67a408ea07173b35238075eca</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCChordSuffixElement</name>
    <filename>class_f_c_chord_suffix_element.html</filename>
    <base>__FCInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a9f312a8495d6f93ee29f0a7415549c3c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a5ed988bb7f886b1a63d74fe0ab71ff68</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCChordSuffixElement</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>abbbd28950430efc60a05f67d022fe0cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFontInfo</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a1ebf78f036fd3c572b7299fa2ebfcb9d</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontInfo</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>aba41974790918cf20e6f5ffce69978dd</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbol</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a2e728a8199e5df5bcd82f4eae429310f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbol</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a6f17a36b003f507a6bbf0df254dc0359</anchor>
      <arglist>(eUniChar32 symbol)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNumberRepresentation</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a100618fc5dac2fbc539375ec879aa608</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberRepresentation</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a67483c5f972827fe496fd8427a6c137b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPrefixFlat</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a1b3e70511a3012c90c78c6864a24cf8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrefixFlat</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>ab4e23eb530508998378665dc70d5d0a8</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPrefixSharp</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>aed8b05031345472d97669a606eaf92ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrefixSharp</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a402172fb68357aaf0f9f4c4e72283826</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPrefixPlus</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a2750bfc3832a14f8f77c843970b1123f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrefixPlus</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>aeb92a1bda4f734d775013fcabfdc5c6a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPrefixMinus</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a086612b78491fd098897d3f61b183b54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrefixMinus</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>ad89950bb10ae072df5ddaab234dc5542</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalOffset</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a5384ad94b7edb0599cf4d5051f69229f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOffset</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a03caf03a5dca3890eab033649515f85d</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalOffset</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a39bf2651d3b5e446a8850164326ab171</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalOffset</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>a63c646178c156f42bb7540938a8ac832</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_chord_suffix_element.html</anchorfile>
      <anchor>ac8821af16b513dad7c2853946f6c9eeb</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCChordSuffixElements</name>
    <filename>class_f_c_chord_suffix_elements.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_chord_suffix_elements.html</anchorfile>
      <anchor>a6d40a01a22812cb1aa52d81a71892655</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCChordSuffixElement *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_chord_suffix_elements.html</anchorfile>
      <anchor>ab13c986eb668fa7bdc9256bf4ef1f7e9</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCChorusLyricsText</name>
    <filename>class_f_c_chorus_lyrics_text.html</filename>
    <base>__FCLyricsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_chorus_lyrics_text.html</anchorfile>
      <anchor>a07e8f6f1b22f2d0a5f87f899f3a6cf92</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_chorus_lyrics_text.html</anchorfile>
      <anchor>a2417e29ef61a0041a22fe45fd7977582</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCChorusSyllable</name>
    <filename>class_f_c_chorus_syllable.html</filename>
    <base>FCSyllableBase</base>
    <member kind="function">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_chorus_syllable.html</anchorfile>
      <anchor>ab5ee4fc06e6cfb9d4649e5f38e602931</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_chorus_syllable.html</anchorfile>
      <anchor>a99b78eb74ab62b5912c181af69a6d2af</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_chorus_syllable.html</anchorfile>
      <anchor>abccd7682664b516060eeed04a0e46ed8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsChorus</name>
      <anchorfile>class_f_c_chorus_syllable.html</anchorfile>
      <anchor>a9e4fa841f4a31e18b964a56192336514</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCChorusSyllables</name>
    <filename>class_f_c_chorus_syllables.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_chorus_syllables.html</anchorfile>
      <anchor>ac8303cfe8cfa6b3db93e30f4e804037f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCChorusSyllables</name>
      <anchorfile>class_f_c_chorus_syllables.html</anchorfile>
      <anchor>ad9ea137292c63335411af432a5d9cdb4</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCChorusSyllable *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_chorus_syllables.html</anchorfile>
      <anchor>ae58f84a825fb6423021e94a4bf3db3ee</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCClefDef</name>
    <filename>class_f_c_clef_def.html</filename>
    <base>__FCGlobals</base>
    <member kind="function">
      <type></type>
      <name>FCClefDef</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a857e5d7a1830fe12e45548e413a8c1e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalAdjust</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a7bd4c95ce19325d32be030fafb3e7285</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetBaselineOffset</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a3aa4a156e508770e2ce4cf9c82af0b11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbol</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>ad6a90e8f6767df59a99535f8389651cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetClefPosition</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>ab6a63749c0b18cde87f2900caafc45f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCustomFont</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a6f02f3ee9dbace695fd035f40f0b461f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFontInfo</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>afe83a77cd990f90b5490992c841ae543</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetClefIndex</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a035029dac54f776d763097ffc001a5b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontInfo</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a003f71db2f34e304259fc8c484046541</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeID</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a2be2347485907ce3cb3ed9c23b67da2d</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseCustomFont</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a10f12090095a1d0bd01210ba99fdc073</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalAdjust</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a61b4571f9a464ecddbdec3c267e53665</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBaselineOffset</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a6907b77b4db6609c2b47c14fc33a7a4b</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbol</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>ab4a6cb78e3888270eba8a679920578ef</anchor>
      <arglist>(eUniChar32 symbolchar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefPosition</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a98dea9c6bd01d28785b92bce683af7d2</anchor>
      <arglist>(twobyte clefpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIsShape</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>aed18e4c3b4a439136188df6e399c993e</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIsShape</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a3dd3bb34b5430e3d21ace2d5aa2dc1c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetShapeID</name>
      <anchorfile>class_f_c_clef_def.html</anchorfile>
      <anchor>a6585a7e6684573d4312c06b776df4026</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCClefDefs</name>
    <filename>class_f_c_clef_defs.html</filename>
    <base>__FCCollectionGlobal</base>
    <member kind="function">
      <type></type>
      <name>FCClefDefs</name>
      <anchorfile>class_f_c_clef_defs.html</anchorfile>
      <anchor>ad863a007d00f0a2438decf840bfc1d2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_clef_defs.html</anchorfile>
      <anchor>af7d21f822e10ff8ee03b2f2d86bd793f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCClefDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_clef_defs.html</anchorfile>
      <anchor>aaedbd35e7ce425ba02866679784e9e7a</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCompositeTimeSigBottom</name>
    <filename>class_f_c_composite_time_sig_bottom.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_composite_time_sig_bottom.html</anchorfile>
      <anchor>a6ba4e2d5280b9bc46482ad7c97731c9f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCompositeTimeSigBottom</name>
      <anchorfile>class_f_c_composite_time_sig_bottom.html</anchorfile>
      <anchor>aae6105238064ebeece552326fd810aaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCCompositeTimeSigBottom</name>
      <anchorfile>class_f_c_composite_time_sig_bottom.html</anchorfile>
      <anchor>a25fa960448f742f1143108d8e0c24b88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetGroupCount</name>
      <anchorfile>class_f_c_composite_time_sig_bottom.html</anchorfile>
      <anchor>a3ca6a6a202ff9d1f4631bc3262baa4dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetGroupElementCount</name>
      <anchorfile>class_f_c_composite_time_sig_bottom.html</anchorfile>
      <anchor>a4a22a7b206b4c869b3099f7ac05bbef0</anchor>
      <arglist>(int groupindex) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetGroupElementBeatDuration</name>
      <anchorfile>class_f_c_composite_time_sig_bottom.html</anchorfile>
      <anchor>a0d4b35273eb774b012ab5d600342de79</anchor>
      <arglist>(int groupindex, int subindex) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetElementCount</name>
      <anchorfile>class_f_c_composite_time_sig_bottom.html</anchorfile>
      <anchor>a97f6d5dd8d70f789ddf73e7845e2c5bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AddGroup</name>
      <anchorfile>class_f_c_composite_time_sig_bottom.html</anchorfile>
      <anchor>ad392efb1f14c2a90b8404769671ce794</anchor>
      <arglist>(int elementcount=1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteGroup</name>
      <anchorfile>class_f_c_composite_time_sig_bottom.html</anchorfile>
      <anchor>a5c5054835e0c3ab9c33bf7868adee804</anchor>
      <arglist>(int groupindex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGroupElementBeatDuration</name>
      <anchorfile>class_f_c_composite_time_sig_bottom.html</anchorfile>
      <anchor>a250b97c74937a449e390ba77d9353c6a</anchor>
      <arglist>(int groupindex, int subindex, twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAll</name>
      <anchorfile>class_f_c_composite_time_sig_bottom.html</anchorfile>
      <anchor>a2a51d46e44bedcf570b494df0419f30c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAllForItem</name>
      <anchorfile>class_f_c_composite_time_sig_bottom.html</anchorfile>
      <anchor>aa03997d9102d57e12c6eec90db3d8645</anchor>
      <arglist>(CMPER cmper) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCompositeTimeSigTop</name>
    <filename>class_f_c_composite_time_sig_top.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>a1885f86fdaacc2898a9089d1c1bc40cc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCompositeTimeSigTop</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>a410e975d3a8db627cdee0914c31e5687</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCCompositeTimeSigTop</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>aae0f4e363e141fb6745f33c793e98a36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetGroupCount</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>ac28ee98a3c0e6b22e174bf8499b43b8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AddGroup</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>ae27d304dd3f3eacf6a8e94ca36674483</anchor>
      <arglist>(int elementcount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MergeWithPreviousGroup</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>a22b532aa9c17b5e4e50995d7f9d84cca</anchor>
      <arglist>(int groupindex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetGroupElementCount</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>ab44a7c0b80c9fbec6ae43cb7e19a6995</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcTotalGroupBeats</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>a7083a4c109bc2ae4125204eb8b2dc9d0</anchor>
      <arglist>(int groupindex) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetGroupElementBeats</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>a76cc1af970c42d0f276dbd67e19822f6</anchor>
      <arglist>(int groupindex, int subindex) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetGroupElementBeatsWithFraction</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>a2c3b58959e39f455ab00bb69c8118521</anchor>
      <arglist>(int groupindex, int subindex) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetElementCount</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>a46f0610a9557d92057d902619b07b252</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGroupElementBeats</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>a5ca6348d6d80b36c2b8446d34208db3f</anchor>
      <arglist>(int groupindex, int subindex, twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGroupElementBeatsWithFraction</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>a063116ef73f7ddee5410a8b136db7e08</anchor>
      <arglist>(int groupindex, int subindex, double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAll</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>a41251d629857c6b8469ac0d707cc2033</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAllForItem</name>
      <anchorfile>class_f_c_composite_time_sig_top.html</anchorfile>
      <anchor>a2aeadb5760385ad363fc949eeb859108</anchor>
      <arglist>(CMPER cmper) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCControl</name>
    <filename>class_f_c_control.html</filename>
    <base>__FCBase</base>
    <member kind="enumeration">
      <type></type>
      <name>CONTROL_ACTIONS</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>aa7fa7fe75a138d8747eee8be837f8256</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a034544fbbe481322555c87212b8c1449</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCControl</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>afba1f63143e9af920ec6a3747c2dfb5f</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCControl</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a2ab66a81b176a7d7d0299892084087a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPointsMeasurement</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a910e1aa96cc4ff08c6eea67677cc554f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__FCUserWindow *</type>
      <name>GetParent</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a69439d0b26fa6a2fa5f4582e4ed07761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WindowExists</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>abaf474fa24351ac10193d26760510ef7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>HWND</type>
      <name>_GetWinControlHandle</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>aa386f5ff47c4ef4fdb23a17117a21bcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Repaint</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a704664187dd7ce7e202bf8a524f12d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetControlID</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a6f7c1819972984a1ec0027e591dad0a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetAssignedID</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a512eab022c7766a25b4f1702b6accec3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CONTROL_ACTIONS</type>
      <name>GetAction</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a73edd87514533a5d8b81fd8cc3e1c8ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAction</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a6dacd4a107d74a44026e6ff10186c93c</anchor>
      <arglist>(CONTROL_ACTIONS action)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetEnable</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a6d240a9ccc8116652b5de549d90c9df5</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetEnable</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a487eb31581c68205dc8f985510b9df39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetVisible</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a20b747a0d2f080de96f7ba2ec8756a19</anchor>
      <arglist>(bool bShow)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetBold</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>ad340219136406d00c2e1abeffc683cdd</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetKeyboardFocus</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>af97ed9961e4df337d2484c14e6ce1ea3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTextAndResize</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>af960a6f2f2dc2a4d60d05632258a144d</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetText</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>ad2efaed1dc28c0f0beafcac7f1031f4b</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>GetText</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a2663c4f773c72deca32d8f20abfdf9e7</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeft</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>abf4350cb961f7d8388e17a8a785d3183</anchor>
      <arglist>(float pos)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetLeft</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a3af7a98ecd34e62c26ff64aae073b227</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTop</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a245d6ebb2adbf1e0883118195e8e92ac</anchor>
      <arglist>(float pos)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetTop</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a51897888a24d0384b3cd0e0e84ddb685</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetHeight</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a00611b21accb93c8bdb7acd8803f668e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetWidth</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a957b377ddbcdd3283b9f96a2b6ea227c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVisible</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>a95d9880afdd98ef157ea0853d4a99e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>ab729f664576aef6d51067be25d732b5e</anchor>
      <arglist>(float width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHeight</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>af67171351919017331c7f114d42f6603</anchor>
      <arglist>(float height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MoveRelative</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>af277b4a58978a8e7ccc67585c262f0cb</anchor>
      <arglist>(float horizmove, float vertmove)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MoveAbsolute</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>ab52ad77181b15adb04d680b8c7f6e43f</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ResizeRelative</name>
      <anchorfile>class_f_c_control.html</anchorfile>
      <anchor>ade6d50db38ae0b704e44273cc1de83cb</anchor>
      <arglist>(float horizresize, float vertresize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCppGarbageCollector</name>
    <filename>class_f_c_cpp_garbage_collector.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>__FCBase *</type>
      <name>GC_Add</name>
      <anchorfile>class_f_c_cpp_garbage_collector.html</anchorfile>
      <anchor>af250beffb3c3df018da61bdf2b55426e</anchor>
      <arglist>(__FCBase *pObject)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCrossStaffMod</name>
    <filename>class_f_c_cross_staff_mod.html</filename>
    <base>__FCEntryDetailNoteID</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cross_staff_mod.html</anchorfile>
      <anchor>ac42b1dbbff34aed8adfd4936f2384c87</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_cross_staff_mod.html</anchorfile>
      <anchor>a8e6bbabb55ce5956e76da6758cc0dbae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCrossStaffMod</name>
      <anchorfile>class_f_c_cross_staff_mod.html</anchorfile>
      <anchor>aa5c95f528c7d2ae5e0b7331292173b3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_cross_staff_mod.html</anchorfile>
      <anchor>a789a60226c370d3ef067f0d5fbd6fff2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaff</name>
      <anchorfile>class_f_c_cross_staff_mod.html</anchorfile>
      <anchor>abbc0d492c69c34dc910d7410600438fa</anchor>
      <arglist>(eStaff staff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteID</name>
      <anchorfile>class_f_c_cross_staff_mod.html</anchorfile>
      <anchor>afbe056df3e60cd6118ba45aa4a6f8223</anchor>
      <arglist>(twobyte id) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCrossStaffMods</name>
    <filename>class_f_c_cross_staff_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_cross_staff_mods.html</anchorfile>
      <anchor>a10e8b7361059eeab69f1ff9a3b1e8bc2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCrossStaffMods</name>
      <anchorfile>class_f_c_cross_staff_mods.html</anchorfile>
      <anchor>a25f354b9df3146af28eb66c68c89eda9</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCCrossStaffMod *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_cross_staff_mods.html</anchorfile>
      <anchor>a691afb77433db9d419091744191f9dfc</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlButton</name>
    <filename>class_f_c_ctrl_button.html</filename>
    <base>FCCtrlCheckbox</base>
    <member kind="function">
      <type></type>
      <name>FCCtrlButton</name>
      <anchorfile>class_f_c_ctrl_button.html</anchorfile>
      <anchor>a1896759609c3dd07f7c6a1d3001b3393</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_button.html</anchorfile>
      <anchor>ac4ac003d214ce56d5177f4852097790f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearShortcutKey</name>
      <anchorfile>class_f_c_ctrl_button.html</anchorfile>
      <anchor>aef95384ff99d1cc716030b19b289a1bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontSize</name>
      <anchorfile>class_f_c_ctrl_button.html</anchorfile>
      <anchor>a37772b6e569412600148673b58dc9af8</anchor>
      <arglist>(int fontsize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlCheckbox</name>
    <filename>class_f_c_ctrl_checkbox.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type></type>
      <name>FCCtrlCheckbox</name>
      <anchorfile>class_f_c_ctrl_checkbox.html</anchorfile>
      <anchor>a6caa7f5d5961883ce0fb95e309500845</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_checkbox.html</anchorfile>
      <anchor>a799d50428210c4133efbcb0503b3b40e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetCheck</name>
      <anchorfile>class_f_c_ctrl_checkbox.html</anchorfile>
      <anchor>a1b94200acc71f1a870d4db611b69633a</anchor>
      <arglist>(twobyte checked)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual twobyte</type>
      <name>GetCheck</name>
      <anchorfile>class_f_c_ctrl_checkbox.html</anchorfile>
      <anchor>ae4cf60ec0dafeb73e657fb7099f1c962</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetThreeStatesMode</name>
      <anchorfile>class_f_c_ctrl_checkbox.html</anchorfile>
      <anchor>a5fec8d2ae9f6b2c762db260b707074b2</anchor>
      <arglist>(bool allow3states)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetThreeStatesMode</name>
      <anchorfile>class_f_c_ctrl_checkbox.html</anchorfile>
      <anchor>a70918f1f2e07255aeb4275df178db08f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlComboBox</name>
    <filename>class_f_c_ctrl_combo_box.html</filename>
    <base>FCCtrlEdit</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_combo_box.html</anchorfile>
      <anchor>a7109d5c5d7782bb39e93e8aa79a4cb5b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCtrlComboBox</name>
      <anchorfile>class_f_c_ctrl_combo_box.html</anchorfile>
      <anchor>a827b8bf90ac3cdbb3d40bbf644423c0a</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>class_f_c_ctrl_combo_box.html</anchorfile>
      <anchor>a8fcc6398ecdbee2d900aa65900d798df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddString</name>
      <anchorfile>class_f_c_ctrl_combo_box.html</anchorfile>
      <anchor>a55dce62b54f0bbe13fa7d862500b402b</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStrings</name>
      <anchorfile>class_f_c_ctrl_combo_box.html</anchorfile>
      <anchor>acf5561429ebbe5dc6480ece938290544</anchor>
      <arglist>(FCStrings *pStrings)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCount</name>
      <anchorfile>class_f_c_ctrl_combo_box.html</anchorfile>
      <anchor>af44af4701033da1cdccc4bf99d5f33b9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlDataList</name>
    <filename>class_f_c_ctrl_data_list.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a530412b568f24839cbbcb4fb89b8a4e3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCtrlDataList</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a8c80a3d1fc182d64d6d5d136a84426a0</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontSize</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>afa5b47eff72eb43e25d6603949466bde</anchor>
      <arglist>(int fontsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetColumnTitle</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>aa82820af74a9af44a1e61a0dea4aa1cd</anchor>
      <arglist>(int columnindex, FCString *pTitle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddColumn</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a25c389ed0f142341df82208ace9b41d6</anchor>
      <arglist>(FCString *pTitle, float columnwidth)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AddRow</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a22d62332176af49e9d53cdb0f37ee95c</anchor>
      <arglist>(FCDataListRow *pRow)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InsertRowAt</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>ada674c04d8bba9f4b833d28fc886a929</anchor>
      <arglist>(FCDataListRow *pRow, int)</arglist>
    </member>
    <member kind="function">
      <type>FCDataListRow *</type>
      <name>CreateRow</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a0d66423a8ba7da3ae0305aa20714221f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteRow</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>adb48b3cfcbdaa34c80025500a46b9035</anchor>
      <arglist>(int lineindex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteAll</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>aba6595e01d41d3a3e68c52d7ffd4f9ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteAllColumns</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>ac57710d9ccb6540325962bab50da94d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCheckboxes</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>ac2a3b75c8053c0de5a4ebeaa2bf7cb75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseCheckboxes</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a90dc60a0f6364195dbb01516586c8b41</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseLeftCheckboxColumn</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a16c71769cdd1a5414f11d9dfe5968932</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UseGrid</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a355c22e80181b195b7857480bb4b1d9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UseFullRowSelect</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a1edf1d570160fb990fea8e4e9731ac52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UseAlternatingBackgroundRowColors</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>ae0fd49c84e90424afcec0851974611ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCount</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a68c370d6a4626aae2b0b8472d975e83c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCDataListRow *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>ac371f1d5c07ec67997f0a4dbf05b575d</anchor>
      <arglist>(int lineindex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Redraw</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a18537961ed92365473cc02597d34c5ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SelectLine</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a30c4827d44114e849fca2820efd2772a</anchor>
      <arglist>(int lineindex, bool ensurevisible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScrollToTop</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a7617d6613513ebac6307493212407873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpandLastColumn</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a77c1e6585c5efcad264945c14f58c335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSelectedLine</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a0ac82c5af18ae34695cd944e345dba46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>HandleSelectChange</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>ab34e102f9d2adf701ba67607ae290555</anchor>
      <arglist>(int lineindex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>HandleUnselect</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a0bc4848eac7679c551d36b83aeeba8a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>HandleCheckChange</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a5df9f6fd102ab7a778502f2f85211927</anchor>
      <arglist>(int lineindex, bool state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>HandleDoubleClick</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a220695e4720bb2071c6a153815fdefe7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReconnectAll</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a2d428f6e100b79c31ae6acf918638073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasCheckboxes</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>ad7335ecea723929b641e1212089ec031</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetDetailedColumnCount</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>abe543051dd69ca54680b26dc5150a994</anchor>
      <arglist>(bool includecheckboxcolumn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetColumnCount</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>af258a9ab30ff37192658280cf170759f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetColumnWidth</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>ab41182fd01691955327c2d4860408df1</anchor>
      <arglist>(int columnindex)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Swap</name>
      <anchorfile>class_f_c_ctrl_data_list.html</anchorfile>
      <anchor>a72182c2f998b3a34b5e5502392f37fb4</anchor>
      <arglist>(int rowindex1, int rowindex2, bool redraw)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlEdit</name>
    <filename>class_f_c_ctrl_edit.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>ac3f7ad2f8cfcf3cc935ce0c489be2d66</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCtrlEdit</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>acfd2deac42bbd0dc0e43d3219f6bef3c</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetInteger</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>add89ac1490a2ee811400250d77e9a6fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRangeInteger</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a15f6146e57c07e00ea9c7b164eafc0f0</anchor>
      <arglist>(int minimum, int maximum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMeasurement</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a6b693ee9a5ab2b77a4f89645406560f5</anchor>
      <arglist>(_ENUMCODE(MEASUREMENTUNITS) _LUACODE(twobyte) measurementunit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRangeMeasurement</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>afb55211c16015c8afe7100c80c55297d</anchor>
      <arglist>(_ENUMCODE(MEASUREMENTUNITS) _LUACODE(twobyte) measurementunit, double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMeasurementEfix</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>ae19e1c075c9a2dedc61f5fd3d329f640</anchor>
      <arglist>(_ENUMCODE(MEASUREMENTUNITS) _LUACODE(twobyte) measurementunit)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetRangeMeasurementEfix</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a4cbaae50952a58e8c9b0d7c540aeebac</anchor>
      <arglist>(_ENUMCODE(MEASUREMENTUNITS) _LUACODE(twobyte) measurementunit, float min, float max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurement</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a77327415d5cf86afb049d0a2b745fb27</anchor>
      <arglist>(double value, _ENUMCODE(MEASUREMENTUNITS) _LUACODE(twobyte) measurementunit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurementEfix</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a558bd016587b8ce7ac6b26e9e5460eb4</anchor>
      <arglist>(float value, _ENUMCODE(MEASUREMENTUNITS) _LUACODE(twobyte) measurementunit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMeasurementInteger</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a42251dfc8dbc3b29a22c19f945b15903</anchor>
      <arglist>(_ENUMCODE(MEASUREMENTUNITS) _LUACODE(twobyte) measurementunit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRangeMeasurementInteger</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a558e4bd0dbcccd4fa39f21116019abe0</anchor>
      <arglist>(_ENUMCODE(MEASUREMENTUNITS) _LUACODE(twobyte) measurementunit, int min, int max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurementInteger</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a39f760e55cb86da4edac1c243e3c82c3</anchor>
      <arglist>(double value, _ENUMCODE(MEASUREMENTUNITS) _LUACODE(twobyte) measurementunit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInteger</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>aa01d7b39b5164c210856b80d0e7f082f</anchor>
      <arglist>(int anint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFloat</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a04a73c26b3628d0533389ce6c9fda70d</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetFloat</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a4c15b02ddf9498d8d084c51c8a05897d</anchor>
      <arglist>(float min, float max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AdjustIntegerWithin</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a0b462def54e658af366351548c0679d5</anchor>
      <arglist>(int min, int max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFocus</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a57f49a54badb7564bb4531d04d9147f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SelectAll</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>ab05758692f9bce9144e937d793e07536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxLength</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>a2f8deeb89baadb688774db055f5dfe19</anchor>
      <arglist>(twobyte maxlength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReadOnly</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>afcfd53ae43ab0ad6589012aa048b94cf</anchor>
      <arglist>(bool readonly)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScrollToBottom</name>
      <anchorfile>class_f_c_ctrl_edit.html</anchorfile>
      <anchor>afa49474a4092915bf5dacc98aa3ac23c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlLine</name>
    <filename>class_f_c_ctrl_line.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_line.html</anchorfile>
      <anchor>abe0a41ba040123fcf85e23e28c5a0dd2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCtrlLine</name>
      <anchorfile>class_f_c_ctrl_line.html</anchorfile>
      <anchor>a02d7c28be826e35fbe5d5d25991f1629</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontal</name>
      <anchorfile>class_f_c_ctrl_line.html</anchorfile>
      <anchor>a4b5ed3d679e11c593c261ea7162e9fc2</anchor>
      <arglist>(bool horiz)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHorizontal</name>
      <anchorfile>class_f_c_ctrl_line.html</anchorfile>
      <anchor>ac389018df24f83b536b181a07d55e322</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlListBox</name>
    <filename>class_f_c_ctrl_list_box.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>a0bdb8f9f7309268c42a3ed7521a0ad7b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCtrlListBox</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>a889cfcb64f02397480cff27bb97f57b4</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>a28c167da7011bb07fefa27550e81823c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddString</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>a32486a8c4311c8961c7b2d42a49761b2</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSelectedItem</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>a74d52293fdd7bd35771c6e0ed5356cca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCount</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>add33625675e1ab7a3fe1a3e8d49f73ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSelectedItem</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>acb2c27c1b9b42ab540200b01e3cb0954</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetSelectedLast</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>a7d4f1396b7abf40cdbc20d197bfe3e64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearSelection</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>a653f8da726a5083ad0de4a3c1fd44ba2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetItemText</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>afa96c0e4c366afd4952cc4ad5ac443e6</anchor>
      <arglist>(int index, FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetItemText</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>a6d67c96709be0dcc919bed86c4f719ed</anchor>
      <arglist>(int index, FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteItem</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>a0fe74048feebe8d5ac0540f2531139dc</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertItem</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>ac3f0758a03b29632432f382cdc6d915c</anchor>
      <arglist>(int index, FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStrings</name>
      <anchorfile>class_f_c_ctrl_list_box.html</anchorfile>
      <anchor>abb047ca8757634f7613ab23e5f94b593</anchor>
      <arglist>(FCStrings *pStrings)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlPopup</name>
    <filename>class_f_c_ctrl_popup.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_popup.html</anchorfile>
      <anchor>ae8e0b160e7bcbcd0cfe8e212525ca9eb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCtrlPopup</name>
      <anchorfile>class_f_c_ctrl_popup.html</anchorfile>
      <anchor>a6dfc46946874aa160624cf30312f7266</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>class_f_c_ctrl_popup.html</anchorfile>
      <anchor>a01a74916ce9d19e2702a29fe711e3d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddString</name>
      <anchorfile>class_f_c_ctrl_popup.html</anchorfile>
      <anchor>a03a4a2e02e88af2c651a9be53edcea54</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertString</name>
      <anchorfile>class_f_c_ctrl_popup.html</anchorfile>
      <anchor>a381eaa2c36ebb3639358194ecd58f540</anchor>
      <arglist>(int index, FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStrings</name>
      <anchorfile>class_f_c_ctrl_popup.html</anchorfile>
      <anchor>abba7b5e3204b96a62a79fea7c366e55a</anchor>
      <arglist>(FCStrings *pStrings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteItem</name>
      <anchorfile>class_f_c_ctrl_popup.html</anchorfile>
      <anchor>a70cac7f75731771c1fd3d423d619301b</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCount</name>
      <anchorfile>class_f_c_ctrl_popup.html</anchorfile>
      <anchor>ae631e27b165d917fd96dd2e1bd872f63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSelectedItem</name>
      <anchorfile>class_f_c_ctrl_popup.html</anchorfile>
      <anchor>a74202df4b8379c6867fdaafd39495a0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSelectedItem</name>
      <anchorfile>class_f_c_ctrl_popup.html</anchorfile>
      <anchor>a60ef96c737e24344b9f931a5d0489466</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetItemText</name>
      <anchorfile>class_f_c_ctrl_popup.html</anchorfile>
      <anchor>a4e85cc055335c90127fbcb6d0e19de43</anchor>
      <arglist>(int index, FCString *pString)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlRadioButton</name>
    <filename>class_f_c_ctrl_radio_button.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type></type>
      <name>FCCtrlRadioButton</name>
      <anchorfile>class_f_c_ctrl_radio_button.html</anchorfile>
      <anchor>a80b6236e2d9597563d076c419fc70427</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCheck</name>
      <anchorfile>class_f_c_ctrl_radio_button.html</anchorfile>
      <anchor>a601747f18ba0b034b922535aabae6d8e</anchor>
      <arglist>(bool checked)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCheck</name>
      <anchorfile>class_f_c_ctrl_radio_button.html</anchorfile>
      <anchor>a41acb4299d675ba4e6b1abbf0d2934fb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlRadioButtonGroup</name>
    <filename>class_f_c_ctrl_radio_button_group.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type></type>
      <name>FCCtrlRadioButtonGroup</name>
      <anchorfile>class_f_c_ctrl_radio_button_group.html</anchorfile>
      <anchor>a83931f6230d8750e60ac3ce35b068453</anchor>
      <arglist>(twobyte id, int no_of_items)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlSlider</name>
    <filename>class_f_c_ctrl_slider.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type></type>
      <name>FCCtrlSlider</name>
      <anchorfile>class_f_c_ctrl_slider.html</anchorfile>
      <anchor>aaa3497f5ac368e712eb84c33a165340b</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_slider.html</anchorfile>
      <anchor>aacdd88a4c5cb38113c5840f4d0558806</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMinValue</name>
      <anchorfile>class_f_c_ctrl_slider.html</anchorfile>
      <anchor>a7f6772b48ad95a6ddafb58c386a1b96d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMinValue</name>
      <anchorfile>class_f_c_ctrl_slider.html</anchorfile>
      <anchor>a3a0163f7e7bdcef83febbd40ae037e1b</anchor>
      <arglist>(int min)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaxValue</name>
      <anchorfile>class_f_c_ctrl_slider.html</anchorfile>
      <anchor>a49357f91c9e5ec8e5f8b080949d31791</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxValue</name>
      <anchorfile>class_f_c_ctrl_slider.html</anchorfile>
      <anchor>af85e0ebb206eed133f83b2f850a412e4</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetThumbPosition</name>
      <anchorfile>class_f_c_ctrl_slider.html</anchorfile>
      <anchor>a7109e22236cc33e717e04cd437a0d4bc</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetThumbPosition</name>
      <anchorfile>class_f_c_ctrl_slider.html</anchorfile>
      <anchor>ac61bae8ac878f0827aca4498eb499d59</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlStatic</name>
    <filename>class_f_c_ctrl_static.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_static.html</anchorfile>
      <anchor>a6a6ae4fca5be16cdf7236ac206873fa5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCtrlStatic</name>
      <anchorfile>class_f_c_ctrl_static.html</anchorfile>
      <anchor>a124be3d4134b87d1d1a7e0814fd85832</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>class_f_c_ctrl_static.html</anchorfile>
      <anchor>ab87d4d0f82216d1b93cb45b928062b56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInteger</name>
      <anchorfile>class_f_c_ctrl_static.html</anchorfile>
      <anchor>aec37480f98d890e5a61cafc0995f2c49</anchor>
      <arglist>(int anint)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlSwitcher</name>
    <filename>class_f_c_ctrl_switcher.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type></type>
      <name>FCCtrlSwitcher</name>
      <anchorfile>class_f_c_ctrl_switcher.html</anchorfile>
      <anchor>adfe725ed591604f69ba323e0d53b922c</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_switcher.html</anchorfile>
      <anchor>a1a06f8dec8f44e38752a72c9df5e6f38</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddPage</name>
      <anchorfile>class_f_c_ctrl_switcher.html</anchorfile>
      <anchor>a135a61956027b4cd9a2d6f682cd299e7</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AttachControl</name>
      <anchorfile>class_f_c_ctrl_switcher.html</anchorfile>
      <anchor>a326e07e4af351d083a3e22e1d7751587</anchor>
      <arglist>(FCControl *pControl, int pageindex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleVisibleStates</name>
      <anchorfile>class_f_c_ctrl_switcher.html</anchorfile>
      <anchor>a036043087de97efdffea408705e991fe</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetPageCount</name>
      <anchorfile>class_f_c_ctrl_switcher.html</anchorfile>
      <anchor>a8605514c7aceefb1c24092d105a174b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSelectedPage</name>
      <anchorfile>class_f_c_ctrl_switcher.html</anchorfile>
      <anchor>ac4e89d38d57fd116247b2bff472c4c5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSelectedPage</name>
      <anchorfile>class_f_c_ctrl_switcher.html</anchorfile>
      <anchor>a1781859afd8146c22729a56ffbc69929</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlTree</name>
    <filename>class_f_c_ctrl_tree.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type></type>
      <name>FCCtrlTree</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a17b7f2454b74b0bfb89ca409688bf71c</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a02a4714f09838b92c71917b956b99bcb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCTreeNode *</type>
      <name>AddNode</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>aac2d861f6a8840f4e9f30d41e4121c6f</anchor>
      <arglist>(FCTreeNode *pParentNode, bool isContainer, FCString *pText)</arglist>
    </member>
    <member kind="function">
      <type>FCTreeNode *</type>
      <name>InsertNodeAt</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>ae7143168713b9d3281e89cd754094b29</anchor>
      <arglist>(FCTreeNode *pParentNode, FCString *pText, int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteNode</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a3fe566096caec697541a4f2a84c2bfdf</anchor>
      <arglist>(FCTreeNode *pNode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SwapNodes</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a7486cca4bb0b6b7892b50308bf8b5fc3</anchor>
      <arglist>(FCTreeNode *pNode1, FCTreeNode *pNode2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpandNode</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a778dcb601115be0fa229283d438c800d</anchor>
      <arglist>(FCTreeNode *pNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CollapseNode</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a39d3a5d115bf14c91815f2dc0742544c</anchor>
      <arglist>(FCTreeNode *pNode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNodeAttached</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>ac494dad44cdbb460f1bbcc2d7dd2a4ef</anchor>
      <arglist>(FCTreeNode *pNode2Find, FCTreeNode *pBaseNode)</arglist>
    </member>
    <member kind="function">
      <type>FCTreeNode *</type>
      <name>FindUserDataNode</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>ac18ca043e32231a2c2a15c13598278e6</anchor>
      <arglist>(void *userdata, FCTreeNode *pBaseNode)</arglist>
    </member>
    <member kind="function">
      <type>FCTreeNode *</type>
      <name>GetSelectedNode</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>ae9ccce159ea5532a4c57d119a598007b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcRootIndex</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a2592e15a757bc50ac7a494755bef7719</anchor>
      <arglist>(FCTreeNode *pNode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcNodeIndex</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a77ddea100eb1eb5593c0db45b3226a41</anchor>
      <arglist>(FCTreeNode *pNode, FCTreeNode *pParentNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontSize</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a221130c1965a47efa21c98d6b9f8431a</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetSelectedNode</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a4bb608e7a91593cd782cb9c0cc5a57be</anchor>
      <arglist>(FCTreeNode *pNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>adc45b2c4557a888f5e78edf803ae67eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpandAllContainers</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a57d804856e9cf08cd34ef43038f0e5aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CollapseAllContainers</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a55be243b752d1748a488041e16b1cd02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRootCount</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a9fc0c2be1032c6519af0f5c1df59619e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCTreeNode *</type>
      <name>GetRootItemAt</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a5b68f075818071497acdb9e49f7e9644</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRootIndexOf</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>aeb8cc031a003e7f5b23e6db0222f37f0</anchor>
      <arglist>(FCTreeNode *pNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Repaint</name>
      <anchorfile>class_f_c_ctrl_tree.html</anchorfile>
      <anchor>a88d0a7c93bd89ef5f922ca6e3a7389f4</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCtrlUpDown</name>
    <filename>class_f_c_ctrl_up_down.html</filename>
    <base>FCControl</base>
    <member kind="function">
      <type></type>
      <name>FCCtrlUpDown</name>
      <anchorfile>class_f_c_ctrl_up_down.html</anchorfile>
      <anchor>ad6b7905b8e1e7d8e6c269cf781b5e7dc</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ctrl_up_down.html</anchorfile>
      <anchor>a86819513c7b4f4c18c804949c6ec1700</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_f_c_ctrl_up_down.html</anchorfile>
      <anchor>aecb6d9957dcf19d23f6aa36c524ef3b3</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetValue</name>
      <anchorfile>class_f_c_ctrl_up_down.html</anchorfile>
      <anchor>aa0c7720f39a5d37a47e16c347646d58e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRange</name>
      <anchorfile>class_f_c_ctrl_up_down.html</anchorfile>
      <anchor>a8057d3a5f80ee682b582af6d91153a40</anchor>
      <arglist>(int min, int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMinimum</name>
      <anchorfile>class_f_c_ctrl_up_down.html</anchorfile>
      <anchor>abcfbcd5074a78c96d7e28a7179f2e8af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaximum</name>
      <anchorfile>class_f_c_ctrl_up_down.html</anchorfile>
      <anchor>a08d5eecae1ab5f7c25014b432aa1b196</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlEdit *</type>
      <name>GetConnectedEdit</name>
      <anchorfile>class_f_c_ctrl_up_down.html</anchorfile>
      <anchor>adac24ac8277d89daae35d4445e337e76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConnectIntegerEdit</name>
      <anchorfile>class_f_c_ctrl_up_down.html</anchorfile>
      <anchor>a3e4af9359f3faa045373095fcffbb9e1</anchor>
      <arglist>(FCCtrlEdit *pControl, int min, int max)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConnectMeasurementEdit</name>
      <anchorfile>class_f_c_ctrl_up_down.html</anchorfile>
      <anchor>aef34ba373d7208402cf2c80ef7a05b8d</anchor>
      <arglist>(FCCtrlEdit *pControl, double min, double max)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCurrentStaffSpec</name>
    <filename>class_f_c_current_staff_spec.html</filename>
    <base>FCStaff</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_current_staff_spec.html</anchorfile>
      <anchor>a6a93de9061ddaa946e4afea2e9e2e5dc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadForEntry</name>
      <anchorfile>class_f_c_current_staff_spec.html</anchorfile>
      <anchor>a7b57fab52e555d6f15e30228993e34d5</anchor>
      <arglist>(FCNoteEntry *pNoteEntry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadForCell</name>
      <anchorfile>class_f_c_current_staff_spec.html</anchorfile>
      <anchor>a80a29ded2a2b0c63a32d4506b5e9d47b</anchor>
      <arglist>(FCCell *pCell, TimeEdu32 durationpos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetConnectedDurationPos</name>
      <anchorfile>class_f_c_current_staff_spec.html</anchorfile>
      <anchor>ae8e7b9d74967bb6c62d742d2a058730f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetConnectedMeasure</name>
      <anchorfile>class_f_c_current_staff_spec.html</anchorfile>
      <anchor>a86550f53a3c38207ad2a6e4a9f9e90c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetConnectedStaff</name>
      <anchorfile>class_f_c_current_staff_spec.html</anchorfile>
      <anchor>a29a716de1cdcbfbd3fb67945bf03c32a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCustomLuaWindow</name>
    <filename>class_f_c_custom_lua_window.html</filename>
    <base>FCCustomWindow</base>
    <member kind="function">
      <type></type>
      <name>FCCustomLuaWindow</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>af5e02ff59d47e602fb09d1deffd127f4</anchor>
      <arglist>(lua_State *L)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>ae94886a7c0883d1422f8fde4d20c7869</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ShowModeless</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a002f165377f6191657f809a30e42b0ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterHandleCommand</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>add0856d52b9ecf89a63826b3754034ee</anchor>
      <arglist>(luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterHandleControlEvent</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a2c13548ebea959fd6260747fb86d6182</anchor>
      <arglist>(FCControl *pControl, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterHandleUpDownPressed</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>acdf33efe695e6699dcedce3987362af5</anchor>
      <arglist>(luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterHandleDataListSelect</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>aa3bff8103f55e93e4618e4e87e27495a</anchor>
      <arglist>(luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterHandleDataListCheck</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>ac05344daebf4c06711d2377da0e62a97</anchor>
      <arglist>(luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterHandleCancelButtonPressed</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a09fe8a8ed70c21da0e8279dd9f0b0b76</anchor>
      <arglist>(luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterHandleOkButtonPressed</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a4536617826061cc918381b463fe96789</anchor>
      <arglist>(luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterInitWindow</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a2a04daf21c47505b43b39bac5d81e84a</anchor>
      <arglist>(luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterCloseWindow</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>aa99161b9d5491f62dbe768115d8d8a49</anchor>
      <arglist>(luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterHandleTimer</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a85578f7b660f9d6b037568a8728388f1</anchor>
      <arglist>(luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleControlEvent</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a06ea38dd1b4c631219e1c06c320eb65e</anchor>
      <arglist>(FCControl *pControl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleCommand</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>ab1cb54662cbdec351cae106e5a3a480f</anchor>
      <arglist>(FCControl *pControl) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleUpDownPressed</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a8354acdc0bdf5e06c32517959bb6b82e</anchor>
      <arglist>(FCControl *pControl, int delta) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleDataListSelect</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a677e7caa6107553a51b13de02666dab3</anchor>
      <arglist>(FCCtrlDataList *pControl, int lineindex) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleDataListCheck</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a7308f9a97989f83c586ed5fd5fa880f1</anchor>
      <arglist>(FCCtrlDataList *pControl, int lineindex, bool checkstate) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelButtonPressed</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>ac32ef1f85396c3184903d526e6f32f3a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OkButtonPressed</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a91234f4f259f6b019245ef8de5524fbd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitWindow</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a6249cc15838787417119d3e7bd719454</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CloseWindow</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a95064c4c4c43fc2019fec781ff51812f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleTimer</name>
      <anchorfile>class_f_c_custom_lua_window.html</anchorfile>
      <anchor>a4ae14c8ae2cb53424f4f1f26ec1a15cb</anchor>
      <arglist>(twobyte timerID) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCustomSmartLineDef</name>
    <filename>class_f_c_custom_smart_line_def.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>TEXT_REFERENCE</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a5098d83e36eb7790ec746dc8fbdaf8a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a615c297df25545def183fc7b87b8ac9c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a3a744b917236d390aa07d6d7111a2d2b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCustomSmartLineDef</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>aa6aad8e3160b999d20b7b3669bc1418d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeepDeleteData</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a3030ccb23a7012c13bdc0b3b271fcca8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRawStringNumber</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a675881fd22f091ecc5ba6cf4fae6da88</anchor>
      <arglist>(TEXT_REFERENCE reference)</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalTextPos</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>afdabdfae3f670f92b00910bd5cbf9532</anchor>
      <arglist>(TEXT_REFERENCE reference)</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalTextPos</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a6f4d8d128122145629c779665e2b3274</anchor>
      <arglist>(TEXT_REFERENCE reference)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalTextPos</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a377f730b4c2fc0eebdf3e84d273097a5</anchor>
      <arglist>(TEXT_REFERENCE reference, Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalTextPos</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ae128f762ff4a182826673bfb2458f2c7</anchor>
      <arglist>(TEXT_REFERENCE reference, Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLineStyle</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a57667235cdc66a2424eaa3235582b499</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetLineWidth</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>afcd987d1bc957eed1515cde61bf012ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartArrowheadStyle</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>afd4c5a3649d268551f2b66f19327f6ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndArrowheadStyle</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ad4418ac45353d5ad0c02c6d4fa60979b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartArrowheadShapeID</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a7a9238d729b0257113ad86d4521119d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndArrowheadShapeID</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a79d27b3f256fad319ceedfefb5ef0627</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetLineCharacter</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>adeb514b965fc6224eff5f9ad5f98f6fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateTextString</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>af723f8a473020541e3af6439c34c0cac</anchor>
      <arglist>(TEXT_REFERENCE reference)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveTextString</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ae4dc6ec2208212696728523b1984528f</anchor>
      <arglist>(TEXT_REFERENCE reference, FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewTextString</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a316215b30e371f754849367ecd3aefdc</anchor>
      <arglist>(TEXT_REFERENCE reference, FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLineCharacterBaselineShift</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a3cf596965498b6f6e77309ab71946c77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineCharacterBaselineShift</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a01b89479b27a3ec8af4af6d69475267e</anchor>
      <arglist>(twobyte baseline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetLineCharacterFontInfo</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ad9ac3097e8f91b95eb2e345d6577e5e8</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineCharacterFontInfo</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a07ea9b19d31b27b389cef0aed48a9bfb</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHorizontal</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a73ad13283f45ee5933e2789492c6ecdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontal</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a9d2e0c8558b8744060074e362f352f22</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseAfterStartTextOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a042fcce3f25286d149f5afb868e79d5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseAfterStartTextOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>abc0fd5c4e8a18ab07dec937ee2ec6705</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetStartLineHorizontalOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a35cbab4c6f913e4ef408053fa490b501</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartLineHorizontalOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>aa6cce609a601c0a1825d2b58be67d8b8</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseBeforeEndTextOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a909f5a2111d43d4e9e8e2e518563a65b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseBeforeEndTextOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a8afa5139cda56c4365b50b30d2ddc6f3</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetEndLineHorizontalOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a8fe265ec40f7ae6a66316dfd5df92446</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndLineHorizontalOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a6453979c6eac57f1414650dc51c62a41</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseAfterContinuationTextOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a5928f4bced7c135e6ba7efdc9b860e72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseAfterContinuationTextOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>accf91e07b3f0c8998088faa032a14f5b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetContinuationLineHorizontalOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a22c851bdb878131d77672102121a8b07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetContinuationLineHorizontalOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ae413bbb146e92e9291e6c5c4f207d889</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLineVerticalOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ad3bc3a4ea869937b0409bf740a44a79f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineVerticalOffset</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ab60ff1322f0bf7ca5f8e0b9483c26f50</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineStyle</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>aa23b82465269b147b33b250c944eb162</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineWidth</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a53694187da994550b6d0d39f121ff776</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetLineDashLength</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a907193855c51591a216a9a874078aef5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineDashLength</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a594516afdeba6b43a64b84b7c8768a1f</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetLineDashSpace</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a3f56c032da5c3cd8b462fd7e181ffc74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineDashSpace</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a7ad171e4e196ec8c7c526a65ce18ed36</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartArrowheadStyle</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ab5d9c7a3819c543d2ce37b26f37c35ff</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartArrowheadShapeID</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a1bdc899a23523c716057933d5b7a78e3</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndArrowheadStyle</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a3372e01ca3add1f226c52a408e5aeb31</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetStartHookLength</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ab68c180545963f1d33c2909f29b0e791</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartHookLength</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ad669f5b6754c17f257f6f0b9ecf68a49</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetEndHookLength</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ab9c2540cb9370deaf92304d59b123e99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndHookLength</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>a401d595a88e7b6d529afaff39ab31376</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndArrowheadShapeID</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ae44671e9cca4e68ead8ec782f502173d</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineCharacter</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ae4443b145a425e410dd77651c2429961</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_custom_smart_line_def.html</anchorfile>
      <anchor>ac35b40d40f24913038206defedabddfb</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCustomSmartLineDefs</name>
    <filename>class_f_c_custom_smart_line_defs.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCCustomSmartLineDefs</name>
      <anchorfile>class_f_c_custom_smart_line_defs.html</anchorfile>
      <anchor>acf1ccfe5c8e83e6b26f8c022df12abf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_custom_smart_line_defs.html</anchorfile>
      <anchor>a254e203b6d7bc1e713cdd10ba952b370</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCCustomSmartLineDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_custom_smart_line_defs.html</anchorfile>
      <anchor>a520e0aa4d359ac2f2d40d04042834955</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCustomStemMod</name>
    <filename>class_f_c_custom_stem_mod.html</filename>
    <base>__FCEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_custom_stem_mod.html</anchorfile>
      <anchor>a8151337d577cf5ffe18ffca630a16487</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_custom_stem_mod.html</anchorfile>
      <anchor>a9b528e9e801591839a0443a34b019d30</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCCustomStemMod</name>
      <anchorfile>class_f_c_custom_stem_mod.html</anchorfile>
      <anchor>a8ee58d8ebf6ee16e791b4b62eddc163e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UseUpStemData</name>
      <anchorfile>class_f_c_custom_stem_mod.html</anchorfile>
      <anchor>a3ab54cc46151a6f4f6c4437954297a47</anchor>
      <arglist>(bool useupstem)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetShapeID</name>
      <anchorfile>class_f_c_custom_stem_mod.html</anchorfile>
      <anchor>a2a69faaf518bf767c24cfa3f0bfebd3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeID</name>
      <anchorfile>class_f_c_custom_stem_mod.html</anchorfile>
      <anchor>a6dda94370337d32273978faceb014571</anchor>
      <arglist>(CMPER theid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCustomStemMods</name>
    <filename>class_f_c_custom_stem_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_custom_stem_mods.html</anchorfile>
      <anchor>a31145256a0ff24d633df03b343388f0b</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCCustomWindow</name>
    <filename>class_f_c_custom_window.html</filename>
    <base>FCResourceWindow</base>
    <member kind="function">
      <type></type>
      <name>FCCustomWindow</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a55605134fcffe2966857c0eb5357ae97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a9490769fe85b8242ab3eb8a7a90855fc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_CalcAvailableCtrlID</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a32c7e9351df31b580f3b23a291694108</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCControl *</type>
      <name>_AddCreatedCtrl</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a1acb1a31f08ebb8e32bbca99850baf69</anchor>
      <arglist>(FCControl *pControl, float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOkButtonCanClose</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>ac5ed8479f85a3621eec1bdf617552ab9</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetOkButtonCanClose</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a2f05f5e01a4ba9daeb2257b9a971bef4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OkButtonPressed</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a7dfeec59b97963f8c7939f0d893f05c4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlStatic *</type>
      <name>CreateStatic</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a3f20ade06204c59642211817b2c7f468</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlEdit *</type>
      <name>CreateEdit</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a71ac6220339c58e4498fcd3969ccdc99</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlButton *</type>
      <name>CreateButton</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>ac238739395ec8cf541432785664e7553</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlCheckbox *</type>
      <name>CreateCheckbox</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a6652b6eacabd72c09c63d14d99a24a17</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlRadioButton *</type>
      <name>CreateRadioButton</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>acc7718a04bc63352f724a75eae4124ae</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlButton *</type>
      <name>CreateOkButton</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>ad6db94d813383ce0d28a370856e44704</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlButton *</type>
      <name>CreateCancelButton</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>aca8c5af5683a1e22c8531e59371c56f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlButton *</type>
      <name>CreateCloseButton</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a0b102296c94dd5b7354407827c4876db</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlPopup *</type>
      <name>CreatePopup</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a48776c80b590437cd2037aea79185622</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlLine *</type>
      <name>CreateHorizontalLine</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>ae096aa45dacb0a781b6c3f857c8190a0</anchor>
      <arglist>(float x, float y, float width)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlLine *</type>
      <name>CreateVerticalLine</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>ae3c787936e927e76078e0b3f2a51dd88</anchor>
      <arglist>(float x, float y, float height)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlSlider *</type>
      <name>CreateSlider</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a234b2144eb9206c98511128d3dc8b0cf</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlListBox *</type>
      <name>CreateListBox</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a18a69d63dc4e0ea0f85dad5daee882be</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlUpDown *</type>
      <name>CreateUpDown</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>ae379851d6eb165f596fc2c07e20e520c</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlRadioButtonGroup *</type>
      <name>CreateRadioButtonGroup</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a64c314df07f336e470974585dac74e16</anchor>
      <arglist>(float x, float y, int no_of_items)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlTree *</type>
      <name>CreateTree</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>aaebc365e5c71dd5d090b2a485165d876</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlSwitcher *</type>
      <name>CreateSwitcher</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a384826b07550dac5728392eedd02eef6</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlDataList *</type>
      <name>CreateDataList</name>
      <anchorfile>class_f_c_custom_window.html</anchorfile>
      <anchor>a7600fde1a4d486e0663cb603a6b19bec</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCDataListRow</name>
    <filename>class_f_c_data_list_row.html</filename>
    <base>FCStrings</base>
    <member kind="function">
      <type></type>
      <name>FCDataListRow</name>
      <anchorfile>class_f_c_data_list_row.html</anchorfile>
      <anchor>a1ee088a538cc3dc255b72c067fc5934d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_data_list_row.html</anchorfile>
      <anchor>a0faa11cbcb0124df35a41231aef9c819</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCheck</name>
      <anchorfile>class_f_c_data_list_row.html</anchorfile>
      <anchor>a2809b44575230e915e8d67f70b174cf5</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCheck</name>
      <anchorfile>class_f_c_data_list_row.html</anchorfile>
      <anchor>a6e19055d9a7ec2214bc6d095c2631772</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetConnectedLineIndex</name>
      <anchorfile>class_f_c_data_list_row.html</anchorfile>
      <anchor>a846de613bf8ea13481ea1cff21cf6747</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlDataList *</type>
      <name>GetConnectedList</name>
      <anchorfile>class_f_c_data_list_row.html</anchorfile>
      <anchor>a34cefdab1929f851b7e78bde50516c42</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCDistancePrefs</name>
    <filename>class_f_c_distance_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ace0fc0a43b53c27c2fb4646d44e1d552</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ad0380d8b27dae5c7f0e69270edc8634d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCDistancePrefs</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a9d3ac4b3f9a5fc237b5e94f1b9bb933c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSpaceBefore</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>af9199d9660920200c10c35fc404c56a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSpaceAfter</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a070083bb342c36e47602bfc2188d61d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAugmentationDotSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>acf7d332a7a02de17f470cd14e8a9c109</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAugmentationDotNoteSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>aa64a56f91ec8de8c27ddd1de1b0b67b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAugmentationDotVerticalAdjust</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a712080c052615896129149aabd5d93a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAugmentationDotUpstemAdjust</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ab7b609ca815eecda736b95b6a5556720</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetClefChangeOffset</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>accafed5901f2d65c63afdffc75ed6cfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSecondaryBeamSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ae09dbe797602143bd5c0ce87905c9047</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTimeSigTopVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a1dc8ef4039c65f00b4ad061deedb709e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTimeSigPartsTopVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a8eba320c6502cea04b2cc0c84c26f62e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTimeSigBottomVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a0b8462fac83e03cc42e0364010448ff2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTimeSigPartsBottomVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ab43bf77952cff9f679b0355057e85117</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetBarlineDoubleSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ad84eac96505b20d46fc97ab054420901</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetBarlineFinalSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a58bd25f83ef2994f83bc4baa28a861d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu32</type>
      <name>GetBarlineDashSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a9ad3a3859ad9c82b9eb3b365927c4430</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetKeySpaceBefore</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>adb379bebc6bc64ed92a0d8543019dd50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetKeySpaceAfter</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a78bae43da393820f200ed83294b0837f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetKeySpaceAfterCancel</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a88f518cf98a14a62f4ead957a4af369e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetKeySpaceBetweenAccidentals</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ab4d7bb65bfcf0959bb19bad18207c3da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetClefSpaceBefore</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ad0e338f1fe6da66f1ca706a060128430</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetClefSpaceAfter</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a93ac72536e8a6b43f1075a117ae49913</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetStemVerticalNoteheadOffset</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a944a82b4b726f8b4706f52658cf2ef12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTimeSigAbbreviatedVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a80a385b152d9a1c33442fa5b37611ecd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTimeSigPartsAbbreviatedVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a51f124da5872b1f6f65af4548a2a3e97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTimeSigSpaceBefore</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ade2ce7b7f6b82c4ae3fbed13d460b12e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTimeSigPartsSpaceBefore</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a6aabbe8c0daf5c67e804801e4e5965ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTimeSigSpaceAfter</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ab897184af2eea856e6f3f52e8ec021bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTimeSigPartsSpaceAfter</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>adbdeeb8dc1c3efe03820830fd3a68a5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAccidentalVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a5c3f02c2e25fa8b5a87cc8ac3a6f0263</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetAccidentalMultiCharSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a630786b05f024f12bf95434c75183cdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetAccidentalNoteSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a5c999fedb05ffa1e46588aaaec72c331</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetAccidentalMultiSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ae61429728e6732e14fba4e3b3f184962</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAlternateHalfDiamondVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ac2a39e7b3e2a57294fe8cf8f3234c50e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAlternateWholeDiamondVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a388b8e6dfafdd7b2a5622562eaf04fd0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAlternateBrevisDiamondVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ad97f9d5deaa9a0532c317427ade194f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBeamMaxDistance</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a5e9f12ef01c64591a3fdbc80558343fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetGraceNoteSpacing</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a54bf49f7f24e61b071e2da68321e51f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetGroupBracketDefaultDistance</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a0d05196693b1bca84b24e7f105a81d0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetKeyTimeExtraSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a051d346c975e784af3db5b60b1bc10d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetClefKeyExtraSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>af97cb7119e0a5d5d68b6fbb1d9bbedf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetClefTimeExtraSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>afdb3b0605b9316933f24da22f24eda8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAccidentalCrossLayerPositioning</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a5209a4deb196e96cc14410f53060f78d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpaceBefore</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a46183ea13df722dd7abe46506340b9e9</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpaceAfter</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ab20acf478a29edccbd213727d3005d21</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAugmentationDotSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>abdb2efcdbb00f0363e69381a24f7c1d3</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAugmentationDotNoteSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a45eacec542c72b692364437e0cc888dd</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAugmentationDotVerticalAdjust</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>aa159f7856d03e97e75cdb554faba1649</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAugmentationDotUpstemAdjust</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a4af4ec3ada1a0b7f525c1c91e59d55b6</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefChangeOffset</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a4e96238d40d4a400bac83c822c791767</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSecondaryBeamSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>af3f9f4550d0647ddce67ef7026d31936</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigTopVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a374c0d7fe4332fa86936955397678fd7</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigPartsTopVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a015b4769effaf0306842cfc59a9f732a</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigBottomVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ae71f2184d9803a57744d42114641b561</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigPartsBottomVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a9fefd33e2d102531ddb61a34205f85ac</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBarlineDoubleSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ac755197fa952821d3e448ec4373234d2</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBarlineFinalSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>afcaf1b8145efdbbdc464e459136de6e1</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBarlineDashSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>aa698d2062315140e561a3138313f3963</anchor>
      <arglist>(Evpu32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySpaceBefore</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>aeb2e794e3f86a8a402edb85b619c3e40</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySpaceAfter</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>aa2d8c7581ade5143ed908062da925bae</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySpaceAfterCancel</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>aa4b81a8f6f54e648cdb744d485233a46</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySpaceBetweenAccidentals</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a4dc545bcf4d5fa3b9fb1599fa65106e5</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefSpaceBefore</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ae9b68bd6d2035286007703ed9e11e6f6</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefSpaceAfter</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>aa8e9f16d0ab0bcc06a15e76fc86b970d</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStemVerticalNoteheadOffset</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a95878d31049b8be6ab97e0a218a3ce1b</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigAbbreviatedVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>abafaf571b3148140b8bbdb10473ba6be</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigPartsAbbreviatedVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a98adc05dfc89adad1222623f56646824</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigSpaceBefore</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ad304b8db097a29984367843ff745d3cb</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigPartsSpaceBefore</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a768998acdca3c7ce9a34c2517fc1225d</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigSpaceAfter</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a3f8961be193ce7fbb53cb393f38f0ef2</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigPartsSpaceAfter</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a264453d9f35fb5ef866d963012168144</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAccidentalVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>aa7d84e150cd752ca1037a5a27b7614bb</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAccidentalMultiCharSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a71ef8a1ad2b6bc22d92157f8cefca4c9</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAccidentalNoteSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>aab78323a4760551ed570cda41ffb01e2</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAccidentalMultiSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ae8820a6a25cb6f31188b31abd198edfb</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlternateHalfDiamondVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>abb127b627d1def863f1f84968ab5b87b</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlternateWholeDiamondVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a67e0b955bc52ac8bfe8423e2dd1299ab</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlternateBrevisDiamondVertical</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a54529c4b2aa6ac8a591019e46c45aae8</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBeamMaxDistance</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>ae357414ce342e3cfdf536f7141089c5f</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGraceNoteSpacing</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>acfaf931aec3029fc40e337566ff7220e</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGroupBracketDefaultDistance</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a94a83f4e273c014b3ae8c478ffdb60ac</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeyTimeExtraSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a02ff8100e81011edb4e88d1aa951c32c</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefKeyExtraSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a33eaab6b78c0771830f9ca868599bef2</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefTimeExtraSpace</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a46971aee4867387bb3d4d8b0a268e2e4</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAccidentalCrossLayerPositioning</name>
      <anchorfile>class_f_c_distance_prefs.html</anchorfile>
      <anchor>a84ce78816ed19ea1e2844d454028ef44</anchor>
      <arglist>(bool value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCDocument</name>
    <filename>class_f_c_document.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a6e7018940443fa04edc4ee9c4199237e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCDocument</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a6031a0749ea65c0ce7f8fa46d0139105</anchor>
      <arglist>(EDOCID id=-1)</arglist>
    </member>
    <member kind="function">
      <type>EDOCID</type>
      <name>GetID</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>ac49a13f8d18aaf27ccf07de907587be0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCurrent</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>ac2b68748eede96d191f03e981642f485</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdentical</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>af0a2b495c801a57db1fa311cc9a6a339</anchor>
      <arglist>(__FCBase *pCompareObject) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUntitled</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>aed34dbfd9aede31995a9ebeff46a322a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPath</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a72c3e385d960488c04b6dbe54e328f08</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPathSpec</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a52616a932befbb135456bbddbb6d7bca</anchor>
      <arglist>(void *pathspec, EVERSION convertversion)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetToCurrent</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>ad1963d799f720a121e33522603bb7902</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>_SetID</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>acc7a6c75256ebd13cc906eac2d41654b</anchor>
      <arglist>(EDOCID docID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SwitchTo</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a261731843ab6715fc5fdc6d931bf32db</anchor>
      <arglist>(FCString *pUndoString, bool saveedits)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SwitchBack</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a310793ea965326171aa16a2dc818bb68</anchor>
      <arglist>(bool saveedits)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DisplayVisually</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>aa47154f7a0d93ba55ff2495154021d4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a7490f9f875efbf45af3173b9355bbdbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Open</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a6a56b5200a8494bd4734eff1ddfc84bb</anchor>
      <arglist>(FCString *pFilePath, bool createwindow, FCString *pUndoString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>New</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a6a57000d37540b1332289b38655aa71d</anchor>
      <arglist>(FCString *pUndoString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CloseCurrentDocumentWindow</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a3d011a4266d03d9a04c0a2e2d617025d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Close</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a00bfd4a1eee13886cbef3ba1eb88c036</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Print</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a36257a11274feb4ae6f09ff201af8316</anchor>
      <arglist>(FCPrintSettings *pSettings)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDirty</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>ab5c8d944347589a1e9945e330586dbe3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDirty</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a42b8839af3a27ca675a831765e743a23</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a8649116e672fe8287a8ce85ae6830d06</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>_SetLastUndoString</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>a722dec6ae977251ef0643302afe5e456</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>GetLastUndoString</name>
      <anchorfile>class_f_c_document.html</anchorfile>
      <anchor>af88557885de0249fd3c5aae13a61a619</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCDocuments</name>
    <filename>class_f_c_documents.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_documents.html</anchorfile>
      <anchor>a8e7e09a4a808d8eaaef78643e29ed503</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAll</name>
      <anchorfile>class_f_c_documents.html</anchorfile>
      <anchor>aff9b6081a0055c53ee5b02ccc910b23d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachWithScope</name>
      <anchorfile>class_f_c_documents.html</anchorfile>
      <anchor>aaf0737f7bc0c36983f59974f3b04511e</anchor>
      <arglist>(FCIteratorHandler *pIterator, FCString *pUndoString)</arglist>
    </member>
    <member kind="function">
      <type>FCDocument *</type>
      <name>FindCurrent</name>
      <anchorfile>class_f_c_documents.html</anchorfile>
      <anchor>ab49b8e7189a7f3f5ecc7af4a09899d4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCDocument *</type>
      <name>FindID</name>
      <anchorfile>class_f_c_documents.html</anchorfile>
      <anchor>a52747fca7279cabf86867f3fd2125f27</anchor>
      <arglist>(EDOCID docid)</arglist>
    </member>
    <member kind="function">
      <type>FCDocument *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_documents.html</anchorfile>
      <anchor>a3a68d6a339ecd9b4fab3ae15891b5b06</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCDotMod</name>
    <filename>class_f_c_dot_mod.html</filename>
    <base>__FCEntryDetailNoteID</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_dot_mod.html</anchorfile>
      <anchor>a760c7f0eb7625cd6c90f1c7472f107a8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_dot_mod.html</anchorfile>
      <anchor>a348dbcdc06c5053ab5300554848420d2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCDotMod</name>
      <anchorfile>class_f_c_dot_mod.html</anchorfile>
      <anchor>ae3ed07c194a1c82b2f36d36bda9e7bcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalPos</name>
      <anchorfile>class_f_c_dot_mod.html</anchorfile>
      <anchor>a8f563a7d0449e92b17ab31430d3014c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalPos</name>
      <anchorfile>class_f_c_dot_mod.html</anchorfile>
      <anchor>a9d8190ac2e5fb6e1f573e50254e37829</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPos</name>
      <anchorfile>class_f_c_dot_mod.html</anchorfile>
      <anchor>ad966755d2bf98de77684f0a1782a85e4</anchor>
      <arglist>(twobyte pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPos</name>
      <anchorfile>class_f_c_dot_mod.html</anchorfile>
      <anchor>a8053aada24048b2b7ef7e4c3599499b4</anchor>
      <arglist>(twobyte pos)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetInterDotSpacing</name>
      <anchorfile>class_f_c_dot_mod.html</anchorfile>
      <anchor>a9168a2e2cb66fdd39192bcf63b2b0878</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInterDotSpacing</name>
      <anchorfile>class_f_c_dot_mod.html</anchorfile>
      <anchor>a39441b38e8f2b7e88c124ddd3285dc82</anchor>
      <arglist>(twobyte space)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteID</name>
      <anchorfile>class_f_c_dot_mod.html</anchorfile>
      <anchor>ab1e969de6bb1c6298cf063f03f5f65f4</anchor>
      <arglist>(twobyte id) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadRestDotAt</name>
      <anchorfile>class_f_c_dot_mod.html</anchorfile>
      <anchor>a7651c624a68936295905a7a07b17f63b</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveRestDotAt</name>
      <anchorfile>class_f_c_dot_mod.html</anchorfile>
      <anchor>adbd477f35961feaa67513f3dff51521f</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCDotMods</name>
    <filename>class_f_c_dot_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_dot_mods.html</anchorfile>
      <anchor>ab1366b804d764f52eec927335a0df3f2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCDotMods</name>
      <anchorfile>class_f_c_dot_mods.html</anchorfile>
      <anchor>aaf89e38e11a2a530dc2b4392c72ad20e</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCDotMod *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_dot_mods.html</anchorfile>
      <anchor>a20c9380ae1bc2b57b23e601118184b8c</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCEnclosure</name>
    <filename>class_f_c_enclosure.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>ENCLOSURESHAPE</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_NONE</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399ab9d02ac9b1761adc229c7ade612e14ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_RECTANGLE</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399a76ea93b976afae52273ead5a3e13e40c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_ELLIPSE</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399a0e4044d06d42a7debeba482c78beae1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_TRIANGLE</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399a6ef98f59631f7a6e839403fcba930ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_DIAMOND</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399a20b287d822f7287bd864f507f0230171</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_PENTAGON</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399a0f22278ea58c73fe16639db3d0758eae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_HEXAGON</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399af7c0211d9320b2421191cda9791e5863</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_SEPTAGON</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399ae77e9503b21e45d345f713d01182150f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_OCTAGON</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399a2f86479fc23018258cdb31dd7fb54e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENCLOSUREMODES</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a109c0798d731a1b7db0964b2883c2ebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSUREMODE_NONE</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a109c0798d731a1b7db0964b2883c2ebba8dc8252b7c8ad5bbf77bcc76b8aabf93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSUREMODE_MINWIDTH</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a109c0798d731a1b7db0964b2883c2ebba829b517e0a2a44124ff966972bb3eec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSUREMODE_MATCHDIMENSIONS</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a109c0798d731a1b7db0964b2883c2ebba9defa7758eaaab9a7f0eb854fe2cb1d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_NONE</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399ab9d02ac9b1761adc229c7ade612e14ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_RECTANGLE</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399a76ea93b976afae52273ead5a3e13e40c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_ELLIPSE</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399a0e4044d06d42a7debeba482c78beae1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_TRIANGLE</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399a6ef98f59631f7a6e839403fcba930ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_DIAMOND</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399a20b287d822f7287bd864f507f0230171</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_PENTAGON</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399a0f22278ea58c73fe16639db3d0758eae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_HEXAGON</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399af7c0211d9320b2421191cda9791e5863</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_SEPTAGON</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399ae77e9503b21e45d345f713d01182150f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSURE_OCTAGON</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abd2d0bb2e9f9f5aa9f99f43eefcae399a2f86479fc23018258cdb31dd7fb54e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSUREMODE_NONE</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a109c0798d731a1b7db0964b2883c2ebba8dc8252b7c8ad5bbf77bcc76b8aabf93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSUREMODE_MINWIDTH</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a109c0798d731a1b7db0964b2883c2ebba829b517e0a2a44124ff966972bb3eec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCLOSUREMODE_MATCHDIMENSIONS</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a109c0798d731a1b7db0964b2883c2ebba9defa7758eaaab9a7f0eb854fe2cb1d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a19c309e16de09b61143dc35e8e65beb7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a4055a86bf58609a76820aa6deda6b788</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCEnclosure</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>af50427bf26f7554b72157ae297fe6050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_AssignEDTEnclosure</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a6cea6cfa345c55b30aa83c4ce16cf08e</anchor>
      <arglist>(void *pPointer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShape</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>af12f55fcae66ea99ba65c3b65707eae7</anchor>
      <arglist>(ENCLOSURESHAPE shape)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineWidth</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a8e910998b8837fc8c57a04e60e9d75e8</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOffset</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a148c536635e468cfedcb2c98492e3b52</anchor>
      <arglist>(int offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalOffset</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a6ad58b76e453b95928d0aaf978eec81b</anchor>
      <arglist>(int offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalMargin</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a63e4af6a432430734e514085f75dbd8c</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalMargin</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>ab671f4abfbb0d16d1939c80516818573</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFixedSize</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a8ae0f82ef92399926546d401737104cd</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOpaque</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a05ead4a5104f24c488380b6109dcec8d</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRoundedCorners</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a46f2ef8d443bfd1ff0133c33b6360b5e</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRoundedCornerRadius</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a0dadf720df366fd676d9165f58687595</anchor>
      <arglist>(Efix32 radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMode</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a05ffdaf135cc9f1858429458a6d11a55</anchor>
      <arglist>(ENCLOSUREMODES enclosuremode)</arglist>
    </member>
    <member kind="function">
      <type>ENCLOSURESHAPE</type>
      <name>GetShape</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a8ccd05295833728df0af49587b0dd194</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLineWidth</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a021e9c20306819e8f1d7617d834d9a87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHorizontalOffset</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a8ccf94f4738b4d38a070f4f57a8fe284</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetVerticalOffset</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>accbc1878f589ec8ea8daf50b5065e4c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHorizontalMargin</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>adeb7dfea60fc7d62c6c45775a1333c7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetVerticalMargin</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>af50f704ea2437e28f3a0fe09c2e79969</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFixedSize</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a787715009518cee76a57697f6b45fe62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetOpaque</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a231c5a1773a65ddd49747a2767d48752</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRoundedCorners</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>abafb14cc6f87585ba6406adcc78bdcfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetRoundedCornerRadius</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>aea8d5d7507be88e520aa231852aa55f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ENCLOSUREMODES</type>
      <name>GetMode</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>ac9121ba21babbcab2d77670a04d724ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAs</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>a1ab13a17bc456b32868630f5ce0384bb</anchor>
      <arglist>(CMPER itemno) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_enclosure.html</anchorfile>
      <anchor>aa5d0e252b9da04d401c55e4fd9e9e0d9</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCEndingRepeat</name>
    <filename>class_f_c_ending_repeat.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>afa15e9ca2109b6696b6857f06a81d6db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a99a21f1eb79c6af8161c461384faae72</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCEndingRepeat</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a2ce6707c3967d15b95c766fdd1311261</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeepDeleteData</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a2b48e03cb9de040443b09a0772f5f2ff</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeepSaveAs</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a7c97b12d101a185b60362008cf06a280</anchor>
      <arglist>(CMPER itemno) override</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaffListID</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>ac447411e28b4a87ab2f95406641e963a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSkipOnIgnore</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>aa2984fd36f33123d205f32ac7a10338c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eMeas</type>
      <name>GetTargetMeasure</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a29fe5026cdf43f00b023912e7d980c08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIndividualPositioning</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>ad5338e6e29adc593c220651f3191f104</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalTopBracketPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a3e959c015191b20a92260d0ff686647a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalLeftBracketPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a42bdac699a802f051220c2f6ca9b59f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalLeftBracketPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a9c2c11367ce918b5b8a8ec871df11848</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalRightBracketPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>ab72b2ab0555bb5df9d9b5942fe7feef1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalRightBracketPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a8a567e7a7d9dbbc76cc68871283e7f47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalTextPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a4e898234ed808384158686fc631a8d76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalTextPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a654de5f456c7bb2fc850b0b92cb6efc6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCTextRepeat::REPSHOWMODES</type>
      <name>GetShowMode</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a807ca1ed2312da4ec4b1e397fe2255e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetPassNumbersCount</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>ac64e63b9f6343fd26fc5d056740fb366</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCTextRepeat::REPTARGETTRIGGERS</type>
      <name>GetTargetTrigger</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>ad0a3a0632aff11e0f4d2d737100f6c83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaffListID</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a413674509f833c32d667816934ca3343</anchor>
      <arglist>(twobyte list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSkipOnIgnore</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a3be3d3b97817287037107b0f909f53c3</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTargetMeasure</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>ad97ccabe10fb89c3f24e10d808bb7062</anchor>
      <arglist>(eMeas measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIndividualPositioning</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>ac27119d413d4203a25bd6bde838d7ba7</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalTopBracketPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a0ab53def06be58f50ccb5a4c8f8f38b9</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalLeftBracketPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a8bc6762317c890360790f43284adc0bb</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalLeftBracketPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a19341a32cc83b70a0f6bd16d07bd28f5</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalRightBracketPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>ab8a34ff801099c3b82ee1d7021da9910</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalRightBracketPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>afd7bae3189511f76e422bd21f228ae39</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalTextPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a8e2d8a2aa39d8e610ac0212154a4996b</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalTextPosition</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a689bdb84d6468a20ddb27879979c8d48</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowMode</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a82a2b3b75e0d960d7e300632761d4d7e</anchor>
      <arglist>(FCTextRepeat::REPSHOWMODES mode)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateTextString</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a4aaf65296c93df23ac046878c5900ad1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveTextString</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>aec5125926dd19deabc3ce3081dc7c39b</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPassNumbers</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>ac39fa51c85bf82edb300582595b7b6b8</anchor>
      <arglist>(FCNumbers *pNumbers)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetPassNumbers</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a5cfb53c921ddcc8ee8b0e5428182e9c0</anchor>
      <arglist>(FCNumbers *pNumbers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTargetTrigger</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a8aad92d339ac96041a97bc2b525ba638</anchor>
      <arglist>(FCTextRepeat::REPTARGETTRIGGERS value)</arglist>
    </member>
    <member kind="function">
      <type>FCSeparatePlacements *</type>
      <name>CreateSeparatePlacements</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>acc6f3ef622dc43aa99abbf6f908625fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCSeparatePlacements *</type>
      <name>CreateTextSeparatePlacements</name>
      <anchorfile>class_f_c_ending_repeat.html</anchorfile>
      <anchor>a5801719026a2011e3744b81f7c1c93b6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCEndingRepeatText</name>
    <filename>class_f_c_ending_repeat_text.html</filename>
    <base>__FCOtherText</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_ending_repeat_text.html</anchorfile>
      <anchor>a696330a3f780b354bdf6a23214d2ed8c</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCEndTieMods</name>
    <filename>class_f_c_end_tie_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_end_tie_mods.html</anchorfile>
      <anchor>afb54c0a32f0613493212ee3a34efcabe</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCEndTieMods</name>
      <anchorfile>class_f_c_end_tie_mods.html</anchorfile>
      <anchor>aeebbba2512dd1a3c0382831e0a3ea839</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCTieMod *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_end_tie_mods.html</anchorfile>
      <anchor>aab187be90f9b22c46f4579c4660310ca</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCEntryAlterMod</name>
    <filename>class_f_c_entry_alter_mod.html</filename>
    <base>__FCEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_entry_alter_mod.html</anchorfile>
      <anchor>a0a9af0d63ac8d93416204c55c7da4bbf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_entry_alter_mod.html</anchorfile>
      <anchor>a37396929e15f25b8e277fe700d1ef45c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCEntryAlterMod</name>
      <anchorfile>class_f_c_entry_alter_mod.html</anchorfile>
      <anchor>a60c02df0c53cf8c2b572e5c92ca473ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetResize</name>
      <anchorfile>class_f_c_entry_alter_mod.html</anchorfile>
      <anchor>a216194bee18967c235c23985a8737712</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetResize</name>
      <anchorfile>class_f_c_entry_alter_mod.html</anchorfile>
      <anchor>acbbd1b421b681ae6244cb0d0a19e9e37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_entry_alter_mod.html</anchorfile>
      <anchor>a03c66ce0d9f6df6453dbc6e8ff01aa5a</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCEntryMetrics</name>
    <filename>class_f_c_entry_metrics.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>aa5620fda0a20b3ba1f016503cfb97182</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCEntryMetrics</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>af96ae1d4e362069ee7dff8699fd815d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>ae930f913606a793444382fd884dfadd2</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcLeftmostNotePosition</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a629164ada4cf9881814fb37b9d18b19c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetAttachmentCount</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a9c8e83e9e950fb9a0add20a17dbbda1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAttachment</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>acfd572a55dca45d5f276e475bba94cd7</anchor>
      <arglist>(__FCBaseData *pBaseDataObject, fourbyte the_id, EAttachment *pAttachment, bool stop=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetTopPosition</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a06443dca724c8df232e2488c6a4cf73e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetBottomPosition</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>aca62996b3d5e63bfae3b7e6b7e5550fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStemBottomPosition</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a8489fb18acaa9f9d7b2a55bccf924c53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStemTopPosition</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a6d9b8af2ba0005a4aadac39ea9f6a473</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLeftPosition</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a9d73c87a649e20e65e5732ee591a63b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRightPosition</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a34a428695b996533e40f63b5e55a9138</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStemLeftPosition</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a7aed57b32f3547b661a1c75fcedf8716</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStemRightPosition</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a9b1cc203d5ad3ff2778b46a32b45ea9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLastDotPosition</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a2b358597eeba3a6189cec5b35aace21e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetFirstAccidentalPosition</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a59cd7a9219557feaacf27ab2782050ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_32</type>
      <name>GetEntryFlags</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>ac1094fedee9cb7d24e25f868bc3c6a6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ENoteMetrics *</type>
      <name>FindNoteMetrics</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a42cb9385319fdbccda5a8408ea4801b3</anchor>
      <arglist>(twobyte noteID)</arglist>
    </member>
    <member kind="function">
      <type>ENoteMetrics2014 *</type>
      <name>FindNoteMetrics2014</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a6f65bf66614ec5eeddba313e90b9409d</anchor>
      <arglist>(twobyte noteID)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNoteCount</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>ab18049b8c3a79fba6677fd35a5b131d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNoteLeftPosition</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a33880a293e62e04c5e813c5d3c91296f</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNoteWidth</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a9f9b632abb38575d767713d08c5ebd9d</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNoteCenterVerticalPos</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a83cc61f5e862c7b12de6e2d7c462a8be</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>eNoteID</type>
      <name>GetNoteID</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a38be57a062e0931679ddc981c1cde6e1</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>JWERECT *</type>
      <name>GetStemRect</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a03564d65913f7608f485aef08f5cd22c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JWERECT *</type>
      <name>GetNoteheadRect</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a208f5a1e330c43a7b0cd9a141b5a6694</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeMetrics</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>a3533159b660b4f0cbd8bdb8c3d8bd80c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>ab1b5a9aa69e496d875d85aa0f54dcd6b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MarkMetricsForRebuild</name>
      <anchorfile>class_f_c_entry_metrics.html</anchorfile>
      <anchor>abdbc34322e692bb64b24901c533980b6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCExecutableShapeDef</name>
    <filename>class_f_c_executable_shape_def.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_executable_shape_def.html</anchorfile>
      <anchor>ae0aa2726f320d1bf458118deccced4c2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_executable_shape_def.html</anchorfile>
      <anchor>a4b6332a927be984f74486b346a6ae986</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCExecutableShapeDef</name>
      <anchorfile>class_f_c_executable_shape_def.html</anchorfile>
      <anchor>a4ce9739595a262349fee5d0cd3ef0ea1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetShapeID</name>
      <anchorfile>class_f_c_executable_shape_def.html</anchorfile>
      <anchor>a2507d76b8d56a0de00af584f08c7ff67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeID</name>
      <anchorfile>class_f_c_executable_shape_def.html</anchorfile>
      <anchor>a2831562bcf85bd5bd40a263aebe5ae79</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_executable_shape_def.html</anchorfile>
      <anchor>a1eccc90def00610707dcf074d94e90b5</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCExecutableShapeDefs</name>
    <filename>class_f_c_executable_shape_defs.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_executable_shape_defs.html</anchorfile>
      <anchor>acb8c1cbbdf0a55e081ce6d223f3d7b88</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCExpression</name>
    <filename>class_f_c_expression.html</filename>
    <base>__FCInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>EXPRESSION_PLAYBACK_STARTPOINTS</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>ad9ff8705b184a052d594836ac4e3e2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPRPLAYSTART_POSINMEASURE</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>ad9ff8705b184a052d594836ac4e3e2c2a53b2110c1d0897cfc37bf090ecfd2097</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPRPLAYSTART_ALIGNMENTPOINT</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>ad9ff8705b184a052d594836ac4e3e2c2aa8619850323b79e6aacd588fe45b6d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPRPLAYSTART_BEGINNINGOFMEASURE</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>ad9ff8705b184a052d594836ac4e3e2c2a8686fd359e97a2a02a40adce4b5305df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPRPLAYSTART_POSINMEASURE</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>ad9ff8705b184a052d594836ac4e3e2c2a53b2110c1d0897cfc37bf090ecfd2097</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPRPLAYSTART_ALIGNMENTPOINT</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>ad9ff8705b184a052d594836ac4e3e2c2aa8619850323b79e6aacd588fe45b6d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPRPLAYSTART_BEGINNINGOFMEASURE</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>ad9ff8705b184a052d594836ac4e3e2c2a8686fd359e97a2a02a40adce4b5305df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a67bda66d1ee1c46aa0834fc6a147f96b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a6a8a1d526bbfa994728235d7fac8e8ce</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a8e72d9a790bc76e3f3523c3d08ce454d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCExpression</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a995e681021fa771ea6e23d2352477e95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignTextExpressionDef</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a1f8b6d1475029fe857c0caf6279a33c3</anchor>
      <arglist>(FCTextExpressionDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignShapeExpressionDef</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a3ecead1afea842568087ada32b10721b</anchor>
      <arglist>(FCShapeExpressionDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcMetricPos</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>aabcafadffbbc829a74839abce9c0045c</anchor>
      <arglist>(FCPoint *pPoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetPos</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a19161ba3e1c29f3cf10a84c277dda389</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>aba44e5a5e55f3835d8f3a0b6eb6bcf98</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasStaffValue</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a5c2aa8b9e87c282ab2f5dfc3c1a17fdd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>eMeas</type>
      <name>GetMeasure</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a3fe1a38acffc6b44210d80ef6eb667ce</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLayerAssignment</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a15b0130c36d1a32f2d237f0c1763b3b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPlaybackLayerAssignment</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>ae6b162fcafe839f97a6866636ec54984</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EXPRESSION_PLAYBACK_STARTPOINTS</type>
      <name>GetPlaybackStart</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a56bbb633c49fdcc860ba653dc01f7f7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetScoreAssignment</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>aed997f0e668f90379ccc60ef9aba67f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPartAssignment</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a54bd7c4e7af97e86822fe733112f4285</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaffListID</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a624067f9fba16a7d1285cc98bac8c8a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaffGroupID</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a2d517153d57604718f35fff513601d95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRehearsalMarkOffset</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>aa4cc3f6dc1f401297d02319b0e9a6bd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVisible</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a0ef34444af61f91fe5f038092a396140</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetScaleWithEntry</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>af0443d181b68cadc47b0a80f60dea9ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a5d15e0fdadc37ff3131a755a58c231e9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalPos</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>adab3d10807d1335e3ffd9712e6afc20b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalPos</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>add931590481a4605e080b0ded3f72b03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetGraceNoteIndex</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a0b603c79a5a312144d42d60576cbe507</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsVisibleOnStaff</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a9dc40c8d4209b151f0f7038caaa8a10a</anchor>
      <arglist>(twobyte staff)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeExpressionDef *</type>
      <name>CreateShapeExpressionDef</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a639332e623bb4b578cfb40f436433f60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCTextExpressionDef *</type>
      <name>CreateTextExpressionDef</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>aaea7359f8bb5c1e4fb10f40ccb8e416a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsShape</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a40c52834e1c521eed939bbcb031804bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSingleStaffAssigned</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a09d618bc2200e5e1f8556de395968bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShape</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>ae485ed9dfdadc49d4f875b60344d9a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetID</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a599bda844209b52a643f0e7fd70a913b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewToCell</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>aef424089da2b68d2bbb060376774f274</anchor>
      <arglist>(FCCell *pCell)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetID</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a6d9792f7112d345ddc952a4cda18d223</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLayerAssignment</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>ac7841193fc1b36b4c1eb7d78e973a2e4</anchor>
      <arglist>(twobyte layer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScoreAssignment</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a180a2fa85a3e6a67fecea0103916933f</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPartAssignment</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a69e684d23be355c232e2767ff14f978d</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlaybackLayerAssignment</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a1cf655fbfa45e6ffe572c9de6baf29c3</anchor>
      <arglist>(twobyte layer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlaybackStart</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a880d6259a9b7e34434bd2bf8d9848abc</anchor>
      <arglist>(EXPRESSION_PLAYBACK_STARTPOINTS value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaff</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>adaa6a71c6513cf28fc6935e7629cfd7d</anchor>
      <arglist>(twobyte staffno)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShape</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>aa0d2f4fd5c124e9ec05f207ac24ea983</anchor>
      <arglist>(bool isshape)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaffListID</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a6fa02708c017af2102541d7a43ed8b44</anchor>
      <arglist>(twobyte ID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaffGroupID</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>ae68fa8651351176ddb7f59625e39b0eb</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRehearsalMarkOffset</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>acac432f7f308c6a08c31135510336b07</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVisible</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a5f8bd5bfdb7de26edc12cb3875638eba</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScaleWithEntry</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a13383a95602b89be7a5be0e08a5a5011</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurePos</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a158eae5e20cffb44617a03698943cdf3</anchor>
      <arglist>(TimeEdu32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPos</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a2819e727d7fea02721679affbb4cfad1</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPos</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>ac34ab6c3e53c01593b14a439e235fae1</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGraceNoteIndex</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>a8600982d0b958d0ffa795741c1c20782</anchor>
      <arglist>(twobyte index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_expression.html</anchorfile>
      <anchor>aa74b99375492caea9346af4238eda3c9</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCExpressions</name>
    <filename>class_f_c_expressions.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCExpressions</name>
      <anchorfile>class_f_c_expressions.html</anchorfile>
      <anchor>ae529f87d1e8348b2bddcdce2017f0d59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCExpression *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_expressions.html</anchorfile>
      <anchor>aa81975cc3e771b46d4c0bbc4f8ad2184</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_expressions.html</anchorfile>
      <anchor>aeca02ca56e4db87f04c0a370e7cb86ba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAllInCell</name>
      <anchorfile>class_f_c_expressions.html</anchorfile>
      <anchor>afc85d43e8906aa4529f90c5f194861c9</anchor>
      <arglist>(FCCell *pCell)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAllInCellLayout</name>
      <anchorfile>class_f_c_expressions.html</anchorfile>
      <anchor>a6b5e303f4ff10677a31d5909c2035384</anchor>
      <arglist>(FCCell *pCell, FCStaffSystems *pStaffSystems)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAllForRegion</name>
      <anchorfile>class_f_c_expressions.html</anchorfile>
      <anchor>ae642fe42c6d61725f3c5c0091735da9a</anchor>
      <arglist>(FCMusicRegion *pRegion)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFileInfoText</name>
    <filename>class_f_c_file_info_text.html</filename>
    <base>FCRawText</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>a1f34c6e92d5086385ff00433eecdc817</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadTitle</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>a74aa25c3df020c3eb4a1e0da4b950304</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadSubtitle</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>a11fabd676677fb30d3776d42da5ed1e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadComposer</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>aba0c39139839d1b1febf7feb8427e8fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadArranger</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>a41a5392ddf6e75e1ee79fab4aec5af2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadLyricist</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>ab3e3a607bf2458db6a6cc44b6f37a4c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadCopyright</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>a24692f5e467bf080d7ff8fcf6a75d659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadDescription</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>a691901dfd3c4044bcaa4ac2dac128d5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAsTitle</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>a949bb9d680efb5d344211b48098d70be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAsSubtitle</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>ab5f7747fd03d3bc63a3bbae6d33e8fe8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAsComposer</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>acd54aa5577a45533162922471129850b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAsArranger</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>a703f0cd72f7bd55eb1233f6b1f3167d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAsLyricist</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>a9816179490f73c2a4f2cc374b64c436f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAsCopyright</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>ad338f75e6ddf3a8f06d0b36efc6402d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAsDescription</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>a0fc5c0dbe3498b6e2b5401d3b6849263</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_file_info_text.html</anchorfile>
      <anchor>aec1042146f971e2e8a7345bc16b51d43</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFileOpenDialog</name>
    <filename>class_f_c_file_open_dialog.html</filename>
    <base>__FCFileDialogBase</base>
    <member kind="function">
      <type></type>
      <name>FCFileOpenDialog</name>
      <anchorfile>class_f_c_file_open_dialog.html</anchorfile>
      <anchor>ad236f08d878a2661a9af81c91a217fa4</anchor>
      <arglist>(FCUI *pUI)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_file_open_dialog.html</anchorfile>
      <anchor>a9b2ef584d786ccd6ddfe16657bb384b2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultiSelect</name>
      <anchorfile>class_f_c_file_open_dialog.html</anchorfile>
      <anchor>a2cd91a4c581c9f5a85e64b0d0f694ebe</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetMultiSelect</name>
      <anchorfile>class_f_c_file_open_dialog.html</anchorfile>
      <anchor>ac72bb82888e5223ca15e811cc1f01caf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFileNames</name>
      <anchorfile>class_f_c_file_open_dialog.html</anchorfile>
      <anchor>ae4e6910dcfcaab9d94e0fbbe67acb7ef</anchor>
      <arglist>(FCStrings *pStrings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetFileNames</name>
      <anchorfile>class_f_c_file_open_dialog.html</anchorfile>
      <anchor>acba648339313fd378400366abc64f132</anchor>
      <arglist>(FCStrings *pStrings)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Execute</name>
      <anchorfile>class_f_c_file_open_dialog.html</anchorfile>
      <anchor>a4c8fd657d6de78630764be71143c832b</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFileSaveAsDialog</name>
    <filename>class_f_c_file_save_as_dialog.html</filename>
    <base>__FCFileDialogBase</base>
    <member kind="function">
      <type></type>
      <name>FCFileSaveAsDialog</name>
      <anchorfile>class_f_c_file_save_as_dialog.html</anchorfile>
      <anchor>a15eb6efb9fed1f365b56f625c2354006</anchor>
      <arglist>(FCUI *pUI)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_file_save_as_dialog.html</anchorfile>
      <anchor>a7b879f453e9abbcaae3b258d8cb21ab8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Execute</name>
      <anchorfile>class_f_c_file_save_as_dialog.html</anchorfile>
      <anchor>a7271c2f868777d7f27970356e42b7f55</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFileStream</name>
    <filename>class_f_c_file_stream.html</filename>
    <base>__FCBaseStream</base>
    <member kind="function">
      <type></type>
      <name>FCFileStream</name>
      <anchorfile>class_f_c_file_stream.html</anchorfile>
      <anchor>ab23f4fe8d93f952c6625a908c9719ee0</anchor>
      <arglist>(FinPathSpec25 *pFolder, FCString *pFileName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCFileStream</name>
      <anchorfile>class_f_c_file_stream.html</anchorfile>
      <anchor>a55acc459eb9777fb32a09beac961e6d8</anchor>
      <arglist>(FCString *pFolder, FCString *pFileName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCFileStream</name>
      <anchorfile>class_f_c_file_stream.html</anchorfile>
      <anchor>abaade94eff2c5a14f5590936a0ff9759</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>_GetFILE</name>
      <anchorfile>class_f_c_file_stream.html</anchorfile>
      <anchor>a07de92300ad36d1d491bcf1e47569f27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOpen</name>
      <anchorfile>class_f_c_file_stream.html</anchorfile>
      <anchor>a2d70744f3624a53feb75083c8ff05e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OpenFile</name>
      <anchorfile>class_f_c_file_stream.html</anchorfile>
      <anchor>abc3fe88c2e83191dec36ec6b19209554</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>OpenRead</name>
      <anchorfile>class_f_c_file_stream.html</anchorfile>
      <anchor>a6001c211d91c06be4c890f5343e22559</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>OpenWrite</name>
      <anchorfile>class_f_c_file_stream.html</anchorfile>
      <anchor>a2720e106471bd43ee5bb8392dbda8cf0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Close</name>
      <anchorfile>class_f_c_file_stream.html</anchorfile>
      <anchor>a9fcca66db52c3f0ba746807479676468</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFullPath</name>
      <anchorfile>class_f_c_file_stream.html</anchorfile>
      <anchor>a6a84c46014309176017de9da94ffc7ac</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFolderBrowseDialog</name>
    <filename>class_f_c_folder_browse_dialog.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type></type>
      <name>FCFolderBrowseDialog</name>
      <anchorfile>class_f_c_folder_browse_dialog.html</anchorfile>
      <anchor>a64b3a8bae5dfc55295b4dc918c338550</anchor>
      <arglist>(FCUI *pUI)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_folder_browse_dialog.html</anchorfile>
      <anchor>a4f37fcc89b2766b996270f0e3c348c13</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFolderPath</name>
      <anchorfile>class_f_c_folder_browse_dialog.html</anchorfile>
      <anchor>a7a06026d3222f76bc36f4fbc3bae2a7e</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWindowTitle</name>
      <anchorfile>class_f_c_folder_browse_dialog.html</anchorfile>
      <anchor>ad1c5a4ccbb1a5c8d494f6644c8d027ca</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseFinaleAPI</name>
      <anchorfile>class_f_c_folder_browse_dialog.html</anchorfile>
      <anchor>a1dd1205466381d285483f1b58c50e024</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFolderPath</name>
      <anchorfile>class_f_c_folder_browse_dialog.html</anchorfile>
      <anchor>a2b9c413c1cdaa8018a7fb93b4979509f</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetWindowTitle</name>
      <anchorfile>class_f_c_folder_browse_dialog.html</anchorfile>
      <anchor>a98bb718a0e43ebbd7f12cb4c7cb9912a</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseFinaleAPI</name>
      <anchorfile>class_f_c_folder_browse_dialog.html</anchorfile>
      <anchor>aea625545d3f04567a76e306984c246ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Execute</name>
      <anchorfile>class_f_c_folder_browse_dialog.html</anchorfile>
      <anchor>a9ad9dc62660dcb3f32624e2e4b19d73b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFontDialog</name>
    <filename>class_f_c_font_dialog.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_font_dialog.html</anchorfile>
      <anchor>a5562a94941a464fede5c49b52d55e573</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCFontDialog</name>
      <anchorfile>class_f_c_font_dialog.html</anchorfile>
      <anchor>ad41388038192c16ec47fbc9fea3da89f</anchor>
      <arglist>(FCUI *pUI, FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseSizes</name>
      <anchorfile>class_f_c_font_dialog.html</anchorfile>
      <anchor>ac0fd6d5521f263258e9b6812afb18ee2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseStyles</name>
      <anchorfile>class_f_c_font_dialog.html</anchorfile>
      <anchor>a692911fb6ff205c08c491edb01e7e1a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCFontInfo *</type>
      <name>GetFontInfo</name>
      <anchorfile>class_f_c_font_dialog.html</anchorfile>
      <anchor>a5d0a902a608938e9ec4a405f75764e1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetSampleString</name>
      <anchorfile>class_f_c_font_dialog.html</anchorfile>
      <anchor>aa31dd832d4a6ff8cb4336c4dbbe45939</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseSizes</name>
      <anchorfile>class_f_c_font_dialog.html</anchorfile>
      <anchor>ac08818f332afe52b720c95680c10ad50</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseStyles</name>
      <anchorfile>class_f_c_font_dialog.html</anchorfile>
      <anchor>aace78b949d649c131d0b433f03d0bd71</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontInfo</name>
      <anchorfile>class_f_c_font_dialog.html</anchorfile>
      <anchor>ab588498d9e3b1c28e5b585e06cf6907e</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSampleString</name>
      <anchorfile>class_f_c_font_dialog.html</anchorfile>
      <anchor>a90fde929bd27b792908641b7d688442a</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Execute</name>
      <anchorfile>class_f_c_font_dialog.html</anchorfile>
      <anchor>a539291c31d75f43c08beb921e25e0ded</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFontInfo</name>
    <filename>class_f_c_font_info.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>afca26f6f74b1f39cecc60dbafe7f25f8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>abef6002f8eeefa7bfeb46e737a8413cd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCFontInfo</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>aa0a63dd78be20993380366d8272b47f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyFrom</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a2fb1a18bc8e81fe57aa1ec56b3d2c49b</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>FCFontInfo *</type>
      <name>CreateCopy</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a488edaabf58af3b4d29ceef3f2859344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFontPrefs</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>abf5ad5bbb5cc3371ffc723ed202c2b6b</anchor>
      <arglist>(int prefsID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveFontPrefs</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a21648e157b4caced1e14701df23de457</anchor>
      <arglist>(int prefsID)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSize</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a27c9ebbbbbbe91a8b4858b73eada2673</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetSizeFloat</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>ad192adedc1443d4ff524fd98255f6aad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetNameString</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>ae9bbd4e77379b3657e86d9d8ef2b576b</anchor>
      <arglist>(FCString *pString) const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetName</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>aa51f8c170a151f5ebd1b8f96681c3587</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetNameByID</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>ae608837bf331b538b31d4c0f6a201eac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetEnigmaStyles</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a62ffc2c8e92b18e229ef36457ff0966d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MakeEnigmaString</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a1e5b54735f71e6bf9a65e9820f36ab13</anchor>
      <arglist>(FCString *pString, FCString *pFontTagString=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateEnigmaString</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a904573e3711e03d0d7b12e1c045b72c6</anchor>
      <arglist>(FCString *pFontTagString=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeEnigmaStyleString</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a9bd88b1024ccee410fcc51ec3bdbca61</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeEnigmaSizeString</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>aeddfe75feccf0718a87aaf6937847bf3</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateEnigmaStyleString</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>aeaaee351309abb691f2a0af3d3cd01a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ParseEnigmaCommand</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a2140e5d5a406d4fec083b3128e0831c6</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ParseEnigmaFont</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a2168361de4c7d3689631806e01688970</anchor>
      <arglist>(const EEnigmaFont *pEnigmaFont)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEnigmaStyles</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>af733c2b56f86ba97702cd3393e0e5a98</anchor>
      <arglist>(FLAG_16 fontstyles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a4a7634e5d73b77cfcc393c6b30c10d96</anchor>
      <arglist>(const char *pszName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontID</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>abb96d23ef4563ecdd21ba3ca83b36e1c</anchor>
      <arglist>(EFONTID fontID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNameString</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a655d49e3b5382cbd0f0a5aa7e25903eb</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNameByID</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>acbcc4d8edf6695bf63d1a9b652025f8d</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSize</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a73ee76d025336da644a3af98683f54bf</anchor>
      <arglist>(twobyte fontsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSizeFloat</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a143a593d3108c58b1e4510c2699a0ef1</anchor>
      <arglist>(float fontsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAbsolute</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a13c5ef10be0d38fda58a9cc3157150a2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStrikeOut</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a69d8121fdc4d305d8d37c4757c0cf293</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBold</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a36f87fe2c8134dae4a336e30bd0c1ab8</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHidden</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>ab1c791fc2f309ba553e638a56552ac35</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetItalic</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a3dc0aca7ba2250a364f54d82ddab84b8</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUnderline</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a6f6ecefe825a6d5fb5bc6359c8e64488</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlain</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a68d12c08c241260a61c823b847311ccd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsName</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>ad0c8537b3efe89000250b0e54fa363aa</anchor>
      <arglist>(const char *pszTestName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNameString</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>ab84fb66d9af2ee2ff7c501bc572259df</anchor>
      <arglist>(FCString *pTestName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPlain</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>ab2915f0c35ddfbb19429c74566626559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBold</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a0eb059892a8d9a0afacd622344f4da19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetItalic</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>ae36264556f6eefaea9eac313bb0018f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUnderline</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>ae5fcb965424dd3214701bbbb3b2e2b48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetStrikeOut</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>ade53bc7c3cef9b638a03bab3b18ef87f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAbsolute</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>acee8695e4c3809cecd7a202e79efaba7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHidden</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a8e06a1afe5eda1ab3af3226c37f89970</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIsSMuFLFont</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>abdbc82f519333f69fe4065809d8e7afe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdenticalTo</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a91ee582dc3b2536e856b5dea66f5b984</anchor>
      <arglist>(FCFontInfo *pCompareWith)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeDefaultMusicFont</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>af475313f4762e9a2a377d945f12d0a10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a9cf46e5a08a515012cc3bd6aa939af31</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static fourbyte</type>
      <name>GetSystemTextEncoding</name>
      <anchorfile>class_f_c_font_info.html</anchorfile>
      <anchor>a949827d65c375b68a9de6bbed654be8f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFontPrefs</name>
    <filename>class_f_c_font_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="enumeration">
      <type></type>
      <name>FONTPREF_CONSTANTS</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_MUSIC</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca4dd02e4e1a9a9965bef9eb3390868073</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_KEYSIG</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca592a226497746d28ddb6128ef3b2d28e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_CLEF</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcae37f4877473ab5c7aa7bb0ce02404725</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TIMESIG</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca36073624db225160d23a26c3408bd45f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_CHORDSYMBOL</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaaa001bd217adae5099ffcd4b1f3aba7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_CHORDALTERATION</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca95ed691951b17248fad9c3e082da849e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ENDING</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcad4f360eebe35cdb41a7dddd3902dd2aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TUPLET</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca6d3b2fa312c4548f3bd1ef608917c6b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TEXTBLOCK</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca65deb680bd93f5e9f2732b98e755960c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_LYRICSVERSE</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca027644dd84802fa0f77e4c15421d1a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_LYRICSCHORUS</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca187fc4b340b5587c1e141bb0bae999e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_LYRICSSECTION</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcac403a407c437297d5ff6d88979727239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_MULTIMEASUREREST</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcae8de63c50566d928f280ca337b5fd381</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_CHORDSUFFIX</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcadc67a86f668b5e77d92db719490471be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_EXPRESSION</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaaaf1d8f311d174d048213f29c3b22155</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_REPEAT</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca701558c8ec5c61705d0343c8ab86c199</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_CHORDFRETBOARD</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcacffb5ca7f3836e5c3d586029aa2428cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_FLAG</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcafc8457ca06de583df37f8e5ad3ea794d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ACCIDENTAL</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca1e4ae70b3a020c1e4c88c6dc29c4cfbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ALTERNATESLASH</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaa4f93264c8236b2fa11253f0ad9358f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ALTERNATENUMBER</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaf373c5a23c44c5df270132c17c8d5367</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_REST</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaeb795b349fc40436dd752890da852bbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_REPEATDOT</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca2fc3e445aceb6d726152154d0869ee95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_NOTEHEAD</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca18ee3ca3a92ee5e81d86f3a294fbb749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_AUGMENTATIONDOT</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca8d23af883106b66753bc08232b35e5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TIMESIGPLUS</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca577d67bb51f089cc4fbbe7836ec84249</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ARTICULATION</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca719cc111fef7ffd293d9917e03a256de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_DEFTABLATURE</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca921f9b08945b5ed544a63067176e8f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_PERCUSSION</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca279de4a19d746667eaab63ac95cf174e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_8VA</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca5fc43cd3d80616669c9c3b9add60fb95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_MEASURENUMBER</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaeb3823f29ae412aebc0ee61bfbe9a369</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_STAFFNAME</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaa2d99e33f8fc02e8b44b09495e25abf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ABRVSTAFFNAME</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca24985c53c3db728b778c97fbae971b38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_GROUPNAME</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca4bb81ddea8337d09f312a43dcd2799fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_8VB</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca108383bb913986b5388df80650964a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_15MA</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaa3f445a1437355de0c29d05e1634a028</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_15MB</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcacb10399fa1aa2e6adee5c4afdef3de53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TR</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaef29c219134f2462d6207bf43f718204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_WIGGLE</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcada1a57d7eaa51e71e5e92844ea9c32ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ABRVGROUPNAME</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca0b38d86fe15572497118386aa66249e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_GUITARBENDFULL</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca15c7ce92374a6bb924dfa091952ab87a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_GUITARBENDNUMBER</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcae3f90488310c65133d33b46e680ca26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_GUITARBENDFRACTION</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca01992e041a12b6a810a563574f2cc644</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TIMESIG_PARTS</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca0241dc99858d5dc14585df289405ff05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TIMESIGPLUS_PARTS</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcae0e62d077839a63f5de9f536ce84a3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_MUSIC</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca4dd02e4e1a9a9965bef9eb3390868073</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_KEYSIG</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca592a226497746d28ddb6128ef3b2d28e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_CLEF</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcae37f4877473ab5c7aa7bb0ce02404725</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TIMESIG</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca36073624db225160d23a26c3408bd45f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_CHORDSYMBOL</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaaa001bd217adae5099ffcd4b1f3aba7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_CHORDALTERATION</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca95ed691951b17248fad9c3e082da849e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ENDING</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcad4f360eebe35cdb41a7dddd3902dd2aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TUPLET</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca6d3b2fa312c4548f3bd1ef608917c6b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TEXTBLOCK</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca65deb680bd93f5e9f2732b98e755960c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_LYRICSVERSE</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca027644dd84802fa0f77e4c15421d1a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_LYRICSCHORUS</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca187fc4b340b5587c1e141bb0bae999e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_LYRICSSECTION</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcac403a407c437297d5ff6d88979727239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_MULTIMEASUREREST</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcae8de63c50566d928f280ca337b5fd381</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_CHORDSUFFIX</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcadc67a86f668b5e77d92db719490471be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_EXPRESSION</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaaaf1d8f311d174d048213f29c3b22155</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_REPEAT</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca701558c8ec5c61705d0343c8ab86c199</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_CHORDFRETBOARD</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcacffb5ca7f3836e5c3d586029aa2428cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_FLAG</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcafc8457ca06de583df37f8e5ad3ea794d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ACCIDENTAL</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca1e4ae70b3a020c1e4c88c6dc29c4cfbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ALTERNATESLASH</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaa4f93264c8236b2fa11253f0ad9358f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ALTERNATENUMBER</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaf373c5a23c44c5df270132c17c8d5367</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_REST</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaeb795b349fc40436dd752890da852bbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_REPEATDOT</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca2fc3e445aceb6d726152154d0869ee95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_NOTEHEAD</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca18ee3ca3a92ee5e81d86f3a294fbb749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_AUGMENTATIONDOT</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca8d23af883106b66753bc08232b35e5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TIMESIGPLUS</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca577d67bb51f089cc4fbbe7836ec84249</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ARTICULATION</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca719cc111fef7ffd293d9917e03a256de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_DEFTABLATURE</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca921f9b08945b5ed544a63067176e8f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_PERCUSSION</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca279de4a19d746667eaab63ac95cf174e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_8VA</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca5fc43cd3d80616669c9c3b9add60fb95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_MEASURENUMBER</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaeb3823f29ae412aebc0ee61bfbe9a369</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_STAFFNAME</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaa2d99e33f8fc02e8b44b09495e25abf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ABRVSTAFFNAME</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca24985c53c3db728b778c97fbae971b38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_GROUPNAME</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca4bb81ddea8337d09f312a43dcd2799fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_8VB</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca108383bb913986b5388df80650964a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_15MA</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaa3f445a1437355de0c29d05e1634a028</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_15MB</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcacb10399fa1aa2e6adee5c4afdef3de53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TR</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcaef29c219134f2462d6207bf43f718204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_WIGGLE</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcada1a57d7eaa51e71e5e92844ea9c32ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_ABRVGROUPNAME</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca0b38d86fe15572497118386aa66249e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_GUITARBENDFULL</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca15c7ce92374a6bb924dfa091952ab87a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_GUITARBENDNUMBER</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcae3f90488310c65133d33b46e680ca26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_GUITARBENDFRACTION</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca01992e041a12b6a810a563574f2cc644</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TIMESIG_PARTS</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fca0241dc99858d5dc14585df289405ff05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FONTPREF_TIMESIGPLUS_PARTS</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aea5171854ff6c09db3eabbf35c0114fcae0e62d077839a63f5de9f536ce84a3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>aed7493f60392c1537c7bff8cc4f9d3ae</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>a1bcff72893f4b69b294098f399ca8fd3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCFontPrefs</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>a1e67c4d520eba20327e4090d0c015adc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFontInfo</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>a6d22c8b1649c7df9be78613fecb64341</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>FCFontInfo *</type>
      <name>CreateFontInfo</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>a7a46c7701a230e94ca65c9b9145ca070</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetFontInfo</name>
      <anchorfile>class_f_c_font_prefs.html</anchorfile>
      <anchor>ae5565f3a4c4b55c08d580e0ddb5d3b53</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFreezeSystem</name>
    <filename>class_f_c_freeze_system.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_freeze_system.html</anchorfile>
      <anchor>aa97eb7749ee48aee0ece4239f6815d89</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_freeze_system.html</anchorfile>
      <anchor>abb5c6f181fa7817c32546c2e3d23300c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCFreezeSystem</name>
      <anchorfile>class_f_c_freeze_system.html</anchorfile>
      <anchor>a6d938397abb3430bb2945fc4882e883e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNextSysMeasure</name>
      <anchorfile>class_f_c_freeze_system.html</anchorfile>
      <anchor>ac7400a2159b77647fbbefeae8a1df4aa</anchor>
      <arglist>(twobyte measure)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetNextSysMeasure</name>
      <anchorfile>class_f_c_freeze_system.html</anchorfile>
      <anchor>ab202065c0c36d7ec36b2df49693150ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_freeze_system.html</anchorfile>
      <anchor>a5bf04b189fd753b633c693adb226bedb</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFreezeSystems</name>
    <filename>class_f_c_freeze_systems.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_freeze_systems.html</anchorfile>
      <anchor>a72d3438efd1ba81210b33049f8307c1f</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFretboardGroupDef</name>
    <filename>class_f_c_fretboard_group_def.html</filename>
    <base>__FCInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_fretboard_group_def.html</anchorfile>
      <anchor>aaa92f92a5f60512b4d677f21228e25ea</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_fretboard_group_def.html</anchorfile>
      <anchor>ab3526cf9741fa86ea84a944174527a63</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCFretboardGroupDef</name>
      <anchorfile>class_f_c_fretboard_group_def.html</anchorfile>
      <anchor>afc976bf3bf72369015b88e9d7aa44832</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_f_c_fretboard_group_def.html</anchorfile>
      <anchor>af664e0267d1bfd9fbe7b134e17b0270f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>_GetInci</name>
      <anchorfile>class_f_c_fretboard_group_def.html</anchorfile>
      <anchor>a482a33cdc2719b9afce6c0cda23dde4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_fretboard_group_def.html</anchorfile>
      <anchor>a62845ba72a19fb2060481807a939e1a7</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFretboardGroupDefs</name>
    <filename>class_f_c_fretboard_group_defs.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_fretboard_group_defs.html</anchorfile>
      <anchor>ab410f12f17390a0e64da8bf8818bc0b3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_fretboard_group_defs.html</anchorfile>
      <anchor>ab0938c73e10939c6e73c53ba94023e91</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>FCFretboardGroupDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_fretboard_group_defs.html</anchorfile>
      <anchor>ae22392f8ae60560a5fea58ca3eb45156</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFretboardStyleDef</name>
    <filename>class_f_c_fretboard_style_def.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a1d29fa59e941357be83457be85e2dc4a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>acf8ca1be652123e5cf0362c035d7ae37</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCFretboardStyleDef</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a2af82ac3e1b0d1b4df1e36742244ef12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetName</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>aea9df952a15bc6d8756d2d6c1d0772b0</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetStringSpacing</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>ae5133a9dc655e165dcbf99cb41962c92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetStringThickness</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>ae840378fb8b0822126bfd380fefd7750</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetFretSpacing</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a8a2c46217d47809e27f46654da1d430d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetFretThickness</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a55f930ba559a6c28280ccd7e61889233</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetNutThickness</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a676d575f147f49ba13346ead2e66e0ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetHorizontalFingeringOffset</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a8c27a82d5d69523dd9a7a8668b41730b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetVerticalFingeringOffset</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a70f0473c01bcea79af55643e17e7ec3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetFingeringWhiteout</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a83a80958882dfdf897507723686b7f33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetHorizontalHandleOffset</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>abb47b5c3417a6aeba55e0edd19b62c8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetVerticalHandleOffset</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a59a1554479a969f9357e3070a9ca60c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFretNumberText</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a37ad8d5b01e2ca1fdc327a1ec7fb7d41</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetHorizontalFretNumberOffset</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>aeef3c26a2b37965edd49b6ce338e4468</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetVerticalFretNumberOffset</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a871f2ef0b4fa0375f415ef7d84021205</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetFretCountDefault</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a2b909368bc61d3b65195393a4a2d5374</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowLastFret</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a0ce196c8cb626fbd658ba0d0c4e7c0fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRotate</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>ac138d5234b08654b18c795dc1ce17bae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDrawFingeringWhite</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a9e6588e90ee9ee58248063acce825f9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFingeredShapeID</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>ab1bbf6bc7148c951601e7f73782b5722</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetOpenStringShapeID</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a362ce88e67f1f908d1083cf210d71629</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMuteStringShapeID</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a39859522fb224ea8eeb935f953f4bafb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBarreShapeID</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>af0143b8b55c86544dfa4bfb3311eeb00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetCustomShapeID</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a7ddf9e47338371441401b3704c4f3da6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFingeringFontInfo</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a244e9d637d033feea9d042c618a3f3d1</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFretNumberFontInfo</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>ad08f3ac142c00e6332061b0b3351d76e</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>ae24996171793788afb3f0836eb58d453</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStringSpacing</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a871da830f4a46453fae2619b2c95f5fc</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStringThickness</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>aefac9b63e7b2991869b59f162132caee</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretSpacing</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>ac7866b3dd146437475886c1d9111a296</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretThickness</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a29ad62d329b9681dd8adc186c9626b2f</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNutThickness</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a14255c8476f9537f8c297a9c65a118a8</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalFingeringOffset</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a1ae8b7c5d5a6f3c37d3fb1fbf80199b2</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalFingeringOffset</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a933f5f0d99ebfcd68cf2757fd33b2c77</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFingeringWhiteout</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>abe8c3f9cb3c86c1edbf3891cfdba202b</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalHandleOffset</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>aefc4eb3221c9bb0f683cbf2783c42491</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalHandleOffset</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a90e3af51ea0bc678c2bdf38666ec3aa4</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretNumberText</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a6b7b066dc35f4cb66d7d5dea127f1b52</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalFretNumberOffset</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a5cbb9bc1365ec81e28327e92887d43a0</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalFretNumberOffset</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a43911a1832a5e6a14753dabbe1e76a5b</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretCountDefault</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>ab7cbfd06101f29fe646e439e14b8de57</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowLastFret</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>aee3d5cd2ffe6fc6f58a1bdc0c5927a0c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRotate</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>ab1e8d61164851fadd56efc96bb4d13e9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDrawFingeringWhite</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>ac4b368a4caa9593f0577a70ab4c0b1a1</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFingeredShapeID</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a0b041cdf02e4552c93bfa63a9e8f99db</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOpenStringShapeID</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a64749dc83566fd02f683f7f29f55d0fd</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMuteStringShapeID</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a62b790f0e80f7678271a12008d9f6c29</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBarreShapeID</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a4e5ddbcfa9275150c45ca88d08f8659d</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCustomShapeID</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a4a3f84a11c664c67ffa1510e2ddbe17d</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFingeringFontInfo</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a9ae2df3341c84c891c2e08dfeb02c702</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretNumberFontInfo</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a2870d14f6b82f8e2b2e8d129f211795e</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_fretboard_style_def.html</anchorfile>
      <anchor>a5aa67c1db7488f2abe286abaaac03034</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFretboardStyleDefs</name>
    <filename>class_f_c_fretboard_style_defs.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_fretboard_style_defs.html</anchorfile>
      <anchor>a80fa6e8a5c68ea37851dcf7465fc4bd3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_fretboard_style_defs.html</anchorfile>
      <anchor>a351b8f89c5e73e18d4ce9d9cb60b0af4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>FCFretboardStyleDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_fretboard_style_defs.html</anchorfile>
      <anchor>a66829aef050047d59345100631577828</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFretInstrumentDef</name>
    <filename>class_f_c_fret_instrument_def.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>af1eb0fa355752f40d8a152a025ccd9dc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>a2f375df06161df62eb6cd3799deef213</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>acaffe893980c0fb926b9e785b31ac510</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadNext</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>a8b146cc8befd7c137f260bd3c495e351</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCFretInstrumentDef</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>af32d1794c96c3853e04c6a7a654a753a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFretCount</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>a44b6a7227450ea0e7a43e5c6bf0dbdaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretCount</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>ace74261ae4aaa05157abf811435abf2f</anchor>
      <arglist>(twobyte count)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStringCount</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>a60387c060e938065dd1b20d21580020d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStringCount</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>aa32b7625aa113f372fb0a2281c224e9d</anchor>
      <arglist>(twobyte count)</arglist>
    </member>
    <member kind="function">
      <type>eClef</type>
      <name>GetSpeedyClef</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>ae9d3968927e32813c00f4e29d84526ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpeedyClef</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>ad0f3b8dd57979e1a16d2f706df646615</anchor>
      <arglist>(eClef clef)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetName</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>a6e5925948bc926508952c1ad65a44a09</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetName</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>a7391a2b856a5289225a1fb1672d22d60</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStringTuning</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>a2d4aa607a3d263745060cfe3998cc280</anchor>
      <arglist>(int stringnumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetStringTuning</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>a35b6a2289453811baa7dbc176946ba6b</anchor>
      <arglist>(int stringnumber, twobyte midinumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDiatonic</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>aeb23952b0976999a461da09fe6c1afd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetDiatonicCount</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>aca904be2ef91e4445bf6c7ea1fa8ed73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDiatonicInfo</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>a35d92410af5c85c8bbfa27e7c658385e</anchor>
      <arglist>(FCNumbers *pNumbers)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetDiatonicInfo</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>a0a93104a35d4b7dc1de75345daf894f8</anchor>
      <arglist>(FCNumbers *pNumbers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_fret_instrument_def.html</anchorfile>
      <anchor>a59fadd94cbdcec8c4df60e3384fd36bc</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCFretInstrumentDefs</name>
    <filename>class_f_c_fret_instrument_defs.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCFretInstrumentDefs</name>
      <anchorfile>class_f_c_fret_instrument_defs.html</anchorfile>
      <anchor>a838031a94317ed31528522ddfe1c0053</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_fret_instrument_defs.html</anchorfile>
      <anchor>a94686524c39e3ab230ad10ee602fa80f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCFretInstrumentDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_fret_instrument_defs.html</anchorfile>
      <anchor>aa1f8c456e2b38076362192ba9e43b9c3</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCGeneralPrefs</name>
    <filename>class_f_c_general_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a31672012e56a548891bad7922f4405f3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>adf257ba255ef78cb3d097097aeaa51f8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCGeneralPrefs</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a13976c30d84c8d06a1c75fe1cd0e78d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPitchRepresentationType</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>ae8816b068f392b17362af85f3858c685</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPitchRepresentationValue</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a9a61d6fcb6adf6eb84d085b07e82c987</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MEASUREMENTUNITS</type>
      <name>GetMeasurementUnit</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>ab4cfa23963bdd8c01641c3bb98b6e76a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowDefaultStaffNames</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a326f9863bfa6c6acb370d5beeebe2956</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowDefaultGroupNames</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>af92f43e324e388fa534c7c4ec6d11d91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRespaceMeasureLayout</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>ae182a8f78a4246d3bc5e18f26e337581</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAutomaticUpdateLayout</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a01c049db4b124a766810441b1dfacb51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRetainFrozenMeasures</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a6769ae000c89eaf241b1a1fc1aac4e2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRecalcMeasures</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a4db243044aa8abf8a7dea3785f107627</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRecalcSystems</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a7530b75b8471dfeb6dc70b996c60d713</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRebarWhenTimeSigChanged</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a4046873805e1f388391d8cfe1e97417e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPitchRepresentationType</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>aa2137dc9b200fe4d374dd5e136b2fb6a</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPitchRepresentationValue</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a99e6ce3cdc26b4639aa55dcd58a7c3bb</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurementUnit</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a231790359b89d06a5c835db3eeceb371</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowDefaultStaffNames</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a70de0730c10bfb816c787ff4d36c5282</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowDefaultGroupNames</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>af9a9504fd2f238c8f68495bbb2698c57</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRespaceMeasureLayout</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>ad11864a1d3b300c850afe1e50572cdb3</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAutomaticUpdateLayout</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a2214626157251d87ffdb5d814177c8f8</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRetainFrozenMeasures</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>a6705eaca90315b313b665a020b2eccb1</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRecalcMeasures</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>ad90707e3e47b45174aed0d44b18f72bb</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRecalcSystems</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>afe8fe60997108a20af2393af2369d4d3</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRebarWhenTimeSigChanged</name>
      <anchorfile>class_f_c_general_prefs.html</anchorfile>
      <anchor>ad9725f9de47d44f9ba19cc7e443016aa</anchor>
      <arglist>(bool state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCGridsGuidesPrefs</name>
    <filename>class_f_c_grids_guides_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="enumeration">
      <type></type>
      <name>ITEMTOSNAP</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_BRACKETS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a65e9b2aa0bb9ffe4e84a149a97129740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_CHORDS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2ab00e4b97372ff0c77d7bee9d84e383ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_EXPRESSIONS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2ac3e143ddb727dd0330ed551bd73b9ed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_FRETBOARDS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2ad4e0e21f6b61b7016e489b9966c8dc7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_GRAPHICSMOVE</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a9912aebda5de4f75a8d6f3a35d1759c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_GRAPHICSSIZING</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a5a8020acc1fb56497f4983195c8fa0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_MEASURENUMBERS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a8ab239c8667e6daeb239ae15388f3144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_REPEATS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a470086ecd03ed62102ef3bfb23bb72d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_SPECIALTOOLS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a0dd2ba0d264f3e79f370519012d2c9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_STAFFNAMES</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a89f7470e98d40a613f686de2674f9e5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_STAVES</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a2153a48eed9b545e1d4206c1737c07f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_TEXTBLOCKMOVE</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2ac2e6ee6628a6863fe364c93de37e632f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_TEXTBLOCKSIZING</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a13bd065ed695493e3c02ea3633af5ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GGLINESTYLES</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a9c098b5eab4d6549337eb45d4e952fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GGLINESTYLE_SOLID</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a9c098b5eab4d6549337eb45d4e952fe8ab2bf4bc1cf0aa23a6b9252bc84e7de8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GGLINESTYLE_DASHED</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a9c098b5eab4d6549337eb45d4e952fe8a03b0d8d40b1af25a3ff2adac22b8fc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GGLINESTYLE_DOTTED</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a9c098b5eab4d6549337eb45d4e952fe8a66f592a1512a71ad0fab66d33f317744</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GGLINESTYLE_CROSSHAIR</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a9c098b5eab4d6549337eb45d4e952fe8ac491bdbaa52eafe42ef1a76b404d6792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_BRACKETS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a65e9b2aa0bb9ffe4e84a149a97129740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_CHORDS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2ab00e4b97372ff0c77d7bee9d84e383ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_EXPRESSIONS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2ac3e143ddb727dd0330ed551bd73b9ed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_FRETBOARDS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2ad4e0e21f6b61b7016e489b9966c8dc7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_GRAPHICSMOVE</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a9912aebda5de4f75a8d6f3a35d1759c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_GRAPHICSSIZING</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a5a8020acc1fb56497f4983195c8fa0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_MEASURENUMBERS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a8ab239c8667e6daeb239ae15388f3144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_REPEATS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a470086ecd03ed62102ef3bfb23bb72d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_SPECIALTOOLS</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a0dd2ba0d264f3e79f370519012d2c9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_STAFFNAMES</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a89f7470e98d40a613f686de2674f9e5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_STAVES</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a2153a48eed9b545e1d4206c1737c07f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_TEXTBLOCKMOVE</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2ac2e6ee6628a6863fe364c93de37e632f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SNAPITEM_TEXTBLOCKSIZING</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae2d3ab3f907415de60c6b672929be7c2a13bd065ed695493e3c02ea3633af5ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GGLINESTYLE_SOLID</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a9c098b5eab4d6549337eb45d4e952fe8ab2bf4bc1cf0aa23a6b9252bc84e7de8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GGLINESTYLE_DASHED</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a9c098b5eab4d6549337eb45d4e952fe8a03b0d8d40b1af25a3ff2adac22b8fc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GGLINESTYLE_DOTTED</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a9c098b5eab4d6549337eb45d4e952fe8a66f592a1512a71ad0fab66d33f317744</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GGLINESTYLE_CROSSHAIR</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a9c098b5eab4d6549337eb45d4e952fe8ac491bdbaa52eafe42ef1a76b404d6792</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ace6372442e729df258b71222025d8e02</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a252277b26e9a950d37bede1a8df312df</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCGridsGuidesPrefs</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ae411a684dc2f411ebd817a04fa563a1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCGridsGuidesPrefs</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a990b362dafbbd513e0071a962e341d5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>acf605760922efd7f8078a86d2ec8a3fb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCGuides *</type>
      <name>GetHorizontalGuides</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ab3d11bada74cfb0480bf0a4991c8b94e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCGuides *</type>
      <name>GetVerticalGuides</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a409edce2daef6f2aad95038797fcc65f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetGravityZoneSize</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a77cecc8278907be5089f037fe70b78fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGridShow</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a8cf2a5700f5c506049d133624b6e0e07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGridSnap</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>aaf73104239c35c0edd1d4d64c64c2265</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetGridStep</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a13ef34ccbf1172ba7ec39cdc495f4106</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>utwobyte</type>
      <name>GetGridColorRed</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a90c5008cce95659180f776cc8780ac28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>utwobyte</type>
      <name>GetGridColorGreen</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a44f9e991dfa52c234b6b6f330000bfce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>utwobyte</type>
      <name>GetGridColorBlue</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>aa8b875ce28ab7b8257c7869864e5a535</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GGLINESTYLES</type>
      <name>GetGridLineStyle</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ac3db58216285cb74d5ac9cbd2d8bd16c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetGridDistance</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a969d02a196fbc3f3d020451380009598</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGuideShow</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a365665844139f97b5a96477437bfb813</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGuideSnap</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>aa6bc95818fba53f78a02511a38dc70be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>utwobyte</type>
      <name>GetGuideColorRed</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ab64d9b1608ea0be4e20d1a1e71064b48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>utwobyte</type>
      <name>GetGuideColorGreen</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a916a77dbccb98ea06e60408759c3a12a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>utwobyte</type>
      <name>GetGuideColorBlue</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a90bebba6d63f03d2fd3c1d782f58fb6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GGLINESTYLES</type>
      <name>GetGuideLineStyle</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a58b19147542be0abb8991bd9f95f05c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGridSnapToItem</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ad682af664543fe89d072fd735e49bf49</anchor>
      <arglist>(ITEMTOSNAP itemconstant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGuideSnapToItem</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a9ef669d12dedfba42bfa3647cfe0f968</anchor>
      <arglist>(ITEMTOSNAP itemconstant)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHorizontalGuideCount</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a0972e0ab2eb727cf2b28b09004109fcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetVerticalGuideCount</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a9e6d0c6f23e5a8532e94b3cf75ea05ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGravityZoneSize</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a08a99f7ea652b85662b39ff95224bc12</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridShow</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a5df990ac9b68110eff72ad313f5749c7</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridSnap</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a0f7df80c9589a404485327f4f7cdd654</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridStep</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ac0bae9d170a7c1d4a360cdcbfc049f23</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridColorRed</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a2157a60a5b7e79bfc423ac9c0c268e79</anchor>
      <arglist>(utwobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridColorGreen</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a6c3c1719cf823ed18bc7c09559508d77</anchor>
      <arglist>(utwobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridColorBlue</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>abb787363a93cdacd23815fcbcd078e35</anchor>
      <arglist>(utwobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridLineStyle</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a5e0392ccc07152ab90321cb2e76c02a8</anchor>
      <arglist>(GGLINESTYLES value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridDistance</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a688b43db548187ab700da97e9d701135</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuideShow</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>af54fbf86eaa64446a6de28f1000a4520</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuideSnap</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>abc17fe5973ea9781a7c9221f53dbe4d1</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuideColorRed</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>af1584b9298fc0b9b7f24bc206fa3b0e4</anchor>
      <arglist>(utwobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuideColorGreen</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a756d62c6c9e32f2953b49761907267d9</anchor>
      <arglist>(utwobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuideColorBlue</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>ac262affb4c6afbde7815df4295400934</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuideLineStyle</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a997d27bf23abe7a2e1411fb65f0bef24</anchor>
      <arglist>(GGLINESTYLES value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalGuideCount</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>affe791ede7e6c1883fc215488ba69e14</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalGuideCount</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a40bb9ec6d04679f46b213ca14120fafd</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridSnapToItem</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a1e1086a336724c4780fcd7fad5422ac2</anchor>
      <arglist>(ITEMTOSNAP itemconstant, bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuideSnapToItem</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a7457fb764255ff04cfb655fd7adf59b8</anchor>
      <arglist>(ITEMTOSNAP itemconstant, bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridColors</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a9d2c3ca8231bffb61b5dacca6c438abb</anchor>
      <arglist>(utwobyte red, utwobyte green, utwobyte blue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuideColors</name>
      <anchorfile>class_f_c_grids_guides_prefs.html</anchorfile>
      <anchor>a526be4716035bfd57cf4600bd87f7dbf</anchor>
      <arglist>(utwobyte red, utwobyte green, utwobyte blue)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCGroup</name>
    <filename>class_f_c_group.html</filename>
    <base>__FCNoInciDetail</base>
    <member kind="enumeration">
      <type></type>
      <name>FCGROUP_BRACKETS</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_NONE</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90a04f5867e471db52bd7f48fcc50207cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_PLAIN</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90ae2f6826305564d0fd26fc8fb4793e02f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_CHORUS</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90a61ebcc7ccfe074ba165f859afc0497f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_PIANO</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90aa97c212826347cd74091055c04f9c263</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_REVERSECHORUS</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90abfdab93e2474a88df8a27861f14428c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_REVERSEPIANO</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90a1c1686cb52cc44a6d18afb146288c93b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_CURVEDCHORUS</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90a2602372a6b40f3f932edf4cdfbd1c641</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_REVERSECURVEDCHORUS</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90afaf010e47dce2f8f3c3c718a49199d73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_DESK</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90a3a16628dfab39518e3bc697a94bcd4af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_REVERSEDESK</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90a0beb1744c414162f3859bc0b32087b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GROUPSTAFFHIDES</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab88cca81b4bc8e0d532dec1b22c39cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUPSTAFFHIDE_NORMAL</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab88cca81b4bc8e0d532dec1b22c39cc7a9b24e9d0a1b12288cb738dab05672d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUPSTAFFHIDE_ALLEMPTY</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab88cca81b4bc8e0d532dec1b22c39cc7a29d7442f271ee2fd17881174ed68811a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUPSTAFFHIDE_NEVER</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab88cca81b4bc8e0d532dec1b22c39cc7a562d21624cd6e866352d2ded77fa9600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GROUPBARLINESTYLES</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a579c63eeab767bb4430c27fa010c0300</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUPBARLINESTYLE_ONLYON</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a579c63eeab767bb4430c27fa010c0300a0bcc752da203a7d30125f9feefe533d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUPBARLINESTYLE_ONLYBETWEEN</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a579c63eeab767bb4430c27fa010c0300ac98afe0c6d64d211fe16068cb36a6611</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUPBARLINESTYLE_THROUGH</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a579c63eeab767bb4430c27fa010c0300a80fb6e20744f91ca9b6b9198bd8263cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_NONE</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90a04f5867e471db52bd7f48fcc50207cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_PLAIN</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90ae2f6826305564d0fd26fc8fb4793e02f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_CHORUS</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90a61ebcc7ccfe074ba165f859afc0497f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_PIANO</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90aa97c212826347cd74091055c04f9c263</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_REVERSECHORUS</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90abfdab93e2474a88df8a27861f14428c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_REVERSEPIANO</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90a1c1686cb52cc44a6d18afb146288c93b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_CURVEDCHORUS</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90a2602372a6b40f3f932edf4cdfbd1c641</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_REVERSECURVEDCHORUS</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90afaf010e47dce2f8f3c3c718a49199d73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_DESK</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90a3a16628dfab39518e3bc697a94bcd4af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRBRAC_REVERSEDESK</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7c6e13f626bb586c5462e4d9d7e0e90a0beb1744c414162f3859bc0b32087b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUPSTAFFHIDE_NORMAL</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab88cca81b4bc8e0d532dec1b22c39cc7a9b24e9d0a1b12288cb738dab05672d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUPSTAFFHIDE_ALLEMPTY</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab88cca81b4bc8e0d532dec1b22c39cc7a29d7442f271ee2fd17881174ed68811a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUPSTAFFHIDE_NEVER</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab88cca81b4bc8e0d532dec1b22c39cc7a562d21624cd6e866352d2ded77fa9600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUPBARLINESTYLE_ONLYON</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a579c63eeab767bb4430c27fa010c0300a0bcc752da203a7d30125f9feefe533d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUPBARLINESTYLE_ONLYBETWEEN</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a579c63eeab767bb4430c27fa010c0300ac98afe0c6d64d211fe16068cb36a6611</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUPBARLINESTYLE_THROUGH</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a579c63eeab767bb4430c27fa010c0300a80fb6e20744f91ca9b6b9198bd8263cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a13671f3ca2b3cb5bd621d0dd20488365</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a7197613f4584d37928dab2f3e244d678</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCGroup</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab2173c53069bf9b46415b1d463c4b538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcStaffIndex</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a9bacc851c32373102baeecd31ab79150</anchor>
      <arglist>(twobyte staff)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcStaffSpan</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ada94fe5406b04a45608fc206dab1463d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsStaff</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>abe99d4a7c9d51ae2fa3f8582a6955700</anchor>
      <arglist>(twobyte staff)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateAbbreviatedNameString</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a266372b5fca6421e8bb76460739d7b33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateFullNameString</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a4e64d91e7ee978f9964d3d221739ba67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateTrimmedFullNameString</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a21771dae7fcdab6aeb1d7edb5894b614</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateDisplayFullNameString</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a4ea8891e9cf0ae1595ce2f2f70ca40ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetAbbreviatedNameID</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a1d9e63192748ffbcc11b974c53877f75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFullNameExpandSingle</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>aa74d51e5f212a3fdaf7f01f4f34b98f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAbbreviatedNameExpandSingle</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a8e81c22a05c6657ade0e4a53c1764f85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCGROUP_BRACKETS</type>
      <name>GetBracketStyle</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>af642cafeea26f16368d4e511c8ae5058</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetBracketHorizontalPos</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a4abe7d785bff0974a9ddd118179890a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetBracketVerticalTopPos</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a5d56ad5d8f385aecbc6f8578cc45d7f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetBracketVerticalBottomPos</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a7085b528e0fe1b937f3844ee57f6baaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBracketSingleStaff</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ae2eedc9c33b171f7a49988df854924b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndStaff</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ae368f01a6889a41149e3ccde0c39aeaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetFullNameID</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a3159166ecee9e0e924e988bd475df818</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseFullNamePositioning</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a4bd5761a3354d34607942c7e78c0d494</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseAbbreviatedNamePositioning</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a3930c6ce507bfcb76b89042a15e281f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetFullNameHorizontalOffset</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a505769e62d28e5da3b6fd0a93ba6dd68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetAbbreviatedNameHorizontalOffset</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab5805bcd8b2d65280d3e98b151fd27b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetFullNameVerticalOffset</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a547f11100e7ebef69016dab4398b59f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetAbbreviatedNameVerticalOffset</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a8890bfdc4bb07f14b31edcd88679f276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartStaff</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a81fcbacec9801cbf0ed716852f290c2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetItemID</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>adacf6694e646d9e65822577581a28f0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBarlineStyle</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>aa5263e228afbb6d66450782d2d528e8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBarlineUse</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>af423da49918c64ea04a7e4a315b952e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBarlineShapeID</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a554c434b3d6c9a65a3e15abd976b3182</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GROUPSTAFFHIDES</type>
      <name>GetEmptyStaffHide</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a14c55b62bc0ec8658de9f489d046ba44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowGroupName</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a2e0f90f0aa7de91b8a3b4c8b503b2c87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GROUPBARLINESTYLES</type>
      <name>GetDrawBarlineMode</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ae12e5f1fe99c9fc904d591e3e407624a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetFullNameJustify</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a4dee2abb8d7472a6d8139b9ce7fa4258</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetAbbreviatedNameJustify</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a4851610fa20c2d90fadebfd4d3404a64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetFullNameAlign</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a1e1badc2c7c7096b440270e2a677a5f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetAbbreviatedNameAlign</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a9c9f6d156a5a04ad40c1bb78272e940a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasFullName</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>afe819efccb59fd4f06c2338b2b449b84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasAbbreviatedName</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>af517d98e3f3f581d0a89c39c38f25cbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndMeasure</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a1594dc0c2e977564146f2ca9f4968d5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartMeasure</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>af465229696278ae0eeb97d3b6b871020</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndMeasure</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a00559edd676f584784b7883922a129c7</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartMeasure</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a4e86e6adc0eaae1dd3e43e60fbe4c60e</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartStaff</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>af01e6cff05ff65372b01ee21e4849717</anchor>
      <arglist>(twobyte staffno)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndStaff</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a075fea43670f239f7a178710a5c21572</anchor>
      <arglist>(twobyte staffno)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewAbbreviatedNameBlock</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a3f6c9bdaaa826c3ce6655d8d4b4c4dd4</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewFullNameBlock</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>aa5c2c616f94118bd59f420333a0509ca</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseFullNamePositioning</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ace548fe1e4d66fca4a0a3e60751b61d3</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseAbbreviatedNamePositioning</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a07564904d2f63549d994f66c65e223b6</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFullNameHorizontalOffset</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ad9aa3941da6dbf8cb014d849816bb43d</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAbbreviatedNameHorizontalOffset</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>abc40a1b3312473d6f77c52c6ba4e9f94</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFullNameVerticalOffset</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a9ee91c953dc629f493951c32bf9219e3</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAbbreviatedNameVerticalOffset</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>abdd15e3034cd51d941e412ac89d43e32</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBarlineStyle</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>abdd5fa0051864008ba747d2493a35c60</anchor>
      <arglist>(twobyte barline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBarlineUse</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a1885d5dab7c80d4e13fbb7c2f98112f4</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBarlineShapeID</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a4c98d7b1ab6f2b408f3b5a117378e8b7</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEmptyStaffHide</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a8447baa883b005a7c7290dff8e6c715c</anchor>
      <arglist>(GROUPSTAFFHIDES value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowGroupName</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>afafdcbd576af2834b1bee49b35eeb213</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDrawBarlineMode</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ab7988f4350308587a200037903e9b325</anchor>
      <arglist>(GROUPBARLINESTYLES value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFullNameJustify</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ae2219d5a5fd73bbf11570db73b7502b7</anchor>
      <arglist>(FLAG_16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAbbreviatedNameJustify</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a9e394a1681dd7a06bb7a4053d1df9252</anchor>
      <arglist>(FLAG_16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFullNameAlign</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ac0a054597c3cca412f55015911b9a0ff</anchor>
      <arglist>(FLAG_16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAbbreviatedNameAlign</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a76bb30cc9a55226a1023f2bbf58b7b2f</anchor>
      <arglist>(FLAG_16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFullNameExpandSingle</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>ad6c3e45415be431db305702af1a20036</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAbbreviatedNameExpandSingle</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a8f331c7b6c08cc4784bacc7b9296bd88</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBracketStyle</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>aac288bb28beb772bf20713c015acb0c7</anchor>
      <arglist>(FCGROUP_BRACKETS bracketid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBracketHorizontalPos</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>afa0685355d60eef7880cd59fd1161688</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBracketVerticalTopPos</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a15b7b1ef63586360085510b9228730cf</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBracketVerticalBottomPos</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a917b11778f9b91bb50e85ba8623e3dc7</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBracketSingleStaff</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a0f6fc9d665c0398c8301ef487167e94b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_group.html</anchorfile>
      <anchor>a49bf61419d71f5a2a9b3103df1ee18a0</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCGroupNamePositionPrefs</name>
    <filename>class_f_c_group_name_position_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>a8af3d1bec4994cb07b9ab0ca68fdbeb4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>a53e0362310dabc7f8c96a49f6761171b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCGroupNamePositionPrefs</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>a54fccd021bf36f73fce372c9aa423f19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>a0529c50ac1614f8720cb7a3804b3ba20</anchor>
      <arglist>(twobyte prefsNumber) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>acbe310bba327d233e56daede7f0e7243</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFull</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>ad08efd91b2d4f8bd2d54b57fa5223d03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadAbbreviated</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>ac99f1267a27757a05956e56c78aa1ecf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalPos</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>a1b07eb73f9982dc5ee37cddec178a364</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalPos</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>a457cfd968682c75250b14be832c6ae94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetJustification</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>ab72b6829b4cf7bcc6c5b02a3f36890a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetAlignment</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>a334045a4810417b7bcf9538b1cda405f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetExpandSingleWord</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>aaf4da4ef8cbbd17efa9f471d0560443c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPos</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>adff08a32565793c288a4995a52c58c55</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPos</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>aa550a649c421ae9b416503a2dfd2656b</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetJustification</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>aa56ea672238b7b61fa8689b526163985</anchor>
      <arglist>(FLAG_16 justification)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlignment</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>aeddbf282148606003fa150187fdb4401</anchor>
      <arglist>(FLAG_16 alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExpandSingleWord</name>
      <anchorfile>class_f_c_group_name_position_prefs.html</anchorfile>
      <anchor>afb05629e63a130e0fc081cf70949b398</anchor>
      <arglist>(bool state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCGroups</name>
    <filename>class_f_c_groups.html</filename>
    <base>__FCCollectionNoInciDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_groups.html</anchorfile>
      <anchor>afbb1445511669c7f1b163c378572dbb4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCGroups</name>
      <anchorfile>class_f_c_groups.html</anchorfile>
      <anchor>a2a2cfa8d549d3b389058285da5bac111</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCGroup *</type>
      <name>Find</name>
      <anchorfile>class_f_c_groups.html</anchorfile>
      <anchor>a608cf2201886e1bd699d9dea929a6899</anchor>
      <arglist>(CMPER startstaff, CMPER endstaff, twobyte startmeasure=1)</arglist>
    </member>
    <member kind="function">
      <type>FCGroup *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_groups.html</anchorfile>
      <anchor>af1b85bca397ddb652556cddc90ed8595</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCGuide</name>
    <filename>class_f_c_guide.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type></type>
      <name>FCGuide</name>
      <anchorfile>class_f_c_guide.html</anchorfile>
      <anchor>a6438a6b2808d9959bc7724f9cd98ab32</anchor>
      <arglist>(Efix32 position)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_guide.html</anchorfile>
      <anchor>a66c7c4399fd958609727dfef896d4ac3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetPosition</name>
      <anchorfile>class_f_c_guide.html</anchorfile>
      <anchor>a49e36f81a650969f7248adcb43fcdef1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPosition</name>
      <anchorfile>class_f_c_guide.html</anchorfile>
      <anchor>a7a5b00471c5bf2c13ad5f226d5211037</anchor>
      <arglist>(Efix32 value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCGuides</name>
    <filename>class_f_c_guides.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_guides.html</anchorfile>
      <anchor>a9f57d611e5b82667786eaca9e73e34cc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAll</name>
      <anchorfile>class_f_c_guides.html</anchorfile>
      <anchor>a399f56c0cfe90b18ecb6d638bf0d5934</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCGuide *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_guides.html</anchorfile>
      <anchor>a11258da1ed59db8bfb573a7413489d6a</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>FCGuide *</type>
      <name>FindClosest</name>
      <anchorfile>class_f_c_guides.html</anchorfile>
      <anchor>a606c8b4b30d1900aff109354fc8cb7d8</anchor>
      <arglist>(Efix32 testposition, Efix32 gravityzonesize)</arglist>
    </member>
    <member kind="function">
      <type>FCGuide *</type>
      <name>AddGuide</name>
      <anchorfile>class_f_c_guides.html</anchorfile>
      <anchor>a9a1be61f43e06881667092f53bd16f87</anchor>
      <arglist>(Efix32 position)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCHumanPlaybackPrefs</name>
    <filename>class_f_c_human_playback_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_human_playback_prefs.html</anchorfile>
      <anchor>af48466ed390310ef23ca751710239d64</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_human_playback_prefs.html</anchorfile>
      <anchor>a8a69f502212eb4708f2d6be59118c4bd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_human_playback_prefs.html</anchorfile>
      <anchor>a51c3c68f70a2bda630292b6343b77fa1</anchor>
      <arglist>(twobyte prefsno) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUsed</name>
      <anchorfile>class_f_c_human_playback_prefs.html</anchorfile>
      <anchor>acae15487dbe180e41847fa9d37e89001</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPlaybackStyle</name>
      <anchorfile>class_f_c_human_playback_prefs.html</anchorfile>
      <anchor>a00b39dc78624dce412f4ad13864104a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCustomStyle</name>
      <anchorfile>class_f_c_human_playback_prefs.html</anchorfile>
      <anchor>aed1f596707ba5db09bbb64884759805f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCIndependentCellDetail</name>
    <filename>class_f_c_independent_cell_detail.html</filename>
    <base>__FCNoInciCellDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>af22bed8fca8068890e7d3133c1087c26</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a3936be4a60c89ff3d4df52bdabaafe46</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCIndependentCellDetail</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a05c0469c7981629a7fbef4d7c5e4c1f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHasKeySignature</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>aa67afded4419e59e8d4b77765ed0e68e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHasTimeSignature</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>ae9113e0d3f8651e75985b526e4d76af2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHasTimeSignatureForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>afcab8217e3434ab12bec58601741e24f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>eKey</type>
      <name>GetKeySignatureID</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a684218d14ac49e9ddab99c6f29040c6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTimeSignatureBeats</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a86e04eb4b3389c780517e0f3ed4d047a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTimeSignatureBeatsForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a549863a4fbcec64816c83c36c8c49b6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTimeSignatureBeatDuration</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a5f308f36a90937c974f4727a3a056c91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTimeSignatureBeatDurationForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a5790cf0db33dace12f7384fb6c304c08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTimeSignatureCompositeTop</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>aa704bafd4436462b4641e0927e2b0034</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTimeSignatureCompositeTopForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>ae54bd0b43d81279b749a195a23924668</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTimeSignatureCompositeBottom</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a8f66c0ed2fbef3c9beff483770eea4a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTimeSignatureCompositeBottomForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>ab30ab1b82be00d7e360e594f7f46ad63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTimeSignatureAbbreviateForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>acfc815a22130044ccce055c4335d9081</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFullTimeSignature</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a084bc89ddf6f8b26ad0e775fab0f6f80</anchor>
      <arglist>(FCTimeSignature *pTimeSig)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFullTimeSignatureForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a41e0adf8e9bbe4179c630ba9e7246a0e</anchor>
      <arglist>(FCTimeSignature *pTimeSig)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHasKeySignature</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>ae384319fc2267dabcb247dbf27e5abb4</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHasTimeSignature</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a43ca617575553bc34d27a175dcff2cb0</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHasTimeSignatureForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a6b699c85f9eeb3af7cd279f77a5b9228</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySignatureID</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a13df5e4ca563934f41741e1027ab9ce9</anchor>
      <arglist>(eKey value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSignatureBeats</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a5792873fe9885144b3d8d724518009bb</anchor>
      <arglist>(twobyte beats)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSignatureBeatsForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a2135bfcf24d5efe24b1e39defa242a38</anchor>
      <arglist>(twobyte beats)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSignatureBeatDuration</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a0825477c79dc1f6381584c65b91cd94e</anchor>
      <arglist>(twobyte beatduration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSignatureBeatDurationForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a67e314c2eb27d223379135fa2e607ce0</anchor>
      <arglist>(twobyte beatduration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSignatureCompositeTop</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a3fc620db7389219878b4ea913b62f20c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSignatureCompositeTopForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>aa39c5d6380e12ceb4a1a8d7e21345dd9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSignatureCompositeBottom</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a661ac421b8670c937e12888df6eb377a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSignatureCompositeBottomForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a856090bbab83107de893e5aff55ca254</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSignatureAbbreviateForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>aae6df990caa063a3d732eb32fb6d667b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFullTimeSignature</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a2e471ea9824bdff1d5c8b8ea0f1078d0</anchor>
      <arglist>(FCTimeSignature *pTimeSig)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFullTimeSignatureForDisplay</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>a65ef2f068767a72586ff9e9d168d0dc1</anchor>
      <arglist>(FCTimeSignature *pTimeSig)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFullKeySignature</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>ac97141faebe9fc322541ff5af1cf0e32</anchor>
      <arglist>(FCKeySignature *pKeySig)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_independent_cell_detail.html</anchorfile>
      <anchor>ad6cfcec5bd047565a0de88d1ec35e953</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCInstrumentDef</name>
    <filename>class_f_c_instrument_def.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_instrument_def.html</anchorfile>
      <anchor>a006bc6b443c0cd2c029e7811e73fceb0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_instrument_def.html</anchorfile>
      <anchor>ab236a7361c43cc644d34620b8e5ad384</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCInstrumentDef</name>
      <anchorfile>class_f_c_instrument_def.html</anchorfile>
      <anchor>a227f8cbf4d800ea2c04de68110436246</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateNameString</name>
      <anchorfile>class_f_c_instrument_def.html</anchorfile>
      <anchor>aa6170787022f38c154379e5d1c802095</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVirtualChannel</name>
      <anchorfile>class_f_c_instrument_def.html</anchorfile>
      <anchor>ab532e52bd7f8f11d07f3d7485576cbb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPercussionMapID</name>
      <anchorfile>class_f_c_instrument_def.html</anchorfile>
      <anchor>a5ececad33ea811443ef12b49b6467d24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPercussionMapID</name>
      <anchorfile>class_f_c_instrument_def.html</anchorfile>
      <anchor>a53ab82c834e547c9cc754737ddfbc070</anchor>
      <arglist>(twobyte mapID)</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionMapNotes *</type>
      <name>CreatePercussionMapNotes</name>
      <anchorfile>class_f_c_instrument_def.html</anchorfile>
      <anchor>a5f83fd864c968104c0eb1b1ab589625a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPercussionMapLocation</name>
      <anchorfile>class_f_c_instrument_def.html</anchorfile>
      <anchor>aadba706cb10879bb79ea1f6d7836e0bf</anchor>
      <arglist>(void *pFileSpecLocation, FCString *pMapName, EVERSION finpathspecversion)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_instrument_def.html</anchorfile>
      <anchor>abc4e0fae78481ee5df7d96e1e9ea1de0</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCInstrumentDefs</name>
    <filename>class_f_c_instrument_defs.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCInstrumentDefs</name>
      <anchorfile>class_f_c_instrument_defs.html</anchorfile>
      <anchor>a761fa119c9849412b80de417ec279ca9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_instrument_defs.html</anchorfile>
      <anchor>a7c7534d1b6ec0f4aad61db627decb6b3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCInstrumentDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_instrument_defs.html</anchorfile>
      <anchor>a2b2131230eb4fe62c71f8ae027dd074b</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCInstrumentDefText</name>
    <filename>class_f_c_instrument_def_text.html</filename>
    <base>__FCOtherText</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_instrument_def_text.html</anchorfile>
      <anchor>a76b367f55e0ba02f571aea1a2abf0ab3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_instrument_def_text.html</anchorfile>
      <anchor>aa7006675a712bbba5f7912d977118ff7</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCInstrumentPlaybackData</name>
    <filename>class_f_c_instrument_playback_data.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_instrument_playback_data.html</anchorfile>
      <anchor>ac9a9f76f5f0d27f9108754c780a6a8e4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_instrument_playback_data.html</anchorfile>
      <anchor>aacc052954e1b9d82a08ce3b3d25a7617</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCInstrumentPlaybackData</name>
      <anchorfile>class_f_c_instrument_playback_data.html</anchorfile>
      <anchor>aa437e87dec779ab209570b4dc7266ea1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCInstrumentPlaybackData</name>
      <anchorfile>class_f_c_instrument_playback_data.html</anchorfile>
      <anchor>af1c14b16fd5aa04c4469e7c7c9913061</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCLayerPlaybackData *</type>
      <name>GetChordLayerData</name>
      <anchorfile>class_f_c_instrument_playback_data.html</anchorfile>
      <anchor>a00af7f948a223d3174db955c6cf4a9d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCLayerPlaybackData *</type>
      <name>GetMidiExpressionLayerData</name>
      <anchorfile>class_f_c_instrument_playback_data.html</anchorfile>
      <anchor>a52033b5beee5f1d8a0bb5111330fc4ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCLayerPlaybackData *</type>
      <name>GetNoteLayerData</name>
      <anchorfile>class_f_c_instrument_playback_data.html</anchorfile>
      <anchor>a44c51278fb3e98c23995f5779a8b58d7</anchor>
      <arglist>(int layernumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_instrument_playback_data.html</anchorfile>
      <anchor>a3ba2fa082a60f45a7e4ba0992d3755ba</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCIteratorHandler</name>
    <filename>class_f_c_iterator_handler.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a2391b1006d2a00fb6946fc3d52fcc47e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCIteratorHandler</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>acd30c777fa81efb84c555d0ac73d92cb</anchor>
      <arglist>(bool bUseProgressBar=false, bool bUserAbortable=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Iterate</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>af7ed674d7f3b31d4f6b05e3bda247b3d</anchor>
      <arglist>(__FCBase *pObject)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SecondPassIterate</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a4e55e2a101a8a4ee32b2fdc5b8b3343d</anchor>
      <arglist>(__FCBase *pObject)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IterateIndex</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a9c614a206ed2c84f60e4546605168a91</anchor>
      <arglist>(__FCBase *pObject, int index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Match</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>ae25561d127ef88c95d0fee09189a9e0b</anchor>
      <arglist>(__FCBase *pObject)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Compare</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a6124af102105df5c2ce522c4169b8b13</anchor>
      <arglist>(__FCBase *pObject1, __FCBase *pObject2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>PreProcess</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a65120bd25fc4d09c0f49f9d31a656799</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>PreProcessIfExist</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a19f18ca5d098a83dd6aa46ffe9c7e4be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PostProcess</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>ab3e92f8eb4b277d9f696154856bf79e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PostProcessIfExist</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a38fcef8c129c9b3b34a6c018e0b317b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastAbortState</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a66573da76852a5f02ea88cda7b0604e3</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLastAbortState</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a0d0c1eaca498855a3f55b0084e5aeb9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseProgressBar</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>ab34fb185c6a4cbc21b72c91a2773a677</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseProgressBar</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a90be615591fd3077973f37c6031f38e1</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetProgressBarAbortable</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a73980af0bba786ea3387beebc9442a99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetProgressBarAbortable</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>aebb186cc7ec92550296e83e74d312a3a</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSaveAfterIterate</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a7cf5f859a54ab7be3fa8fef94f816395</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSaveAfterIterate</name>
      <anchorfile>class_f_c_iterator_handler.html</anchorfile>
      <anchor>a5dbeeb0970def2eb290e2c3637efbf91</anchor>
      <arglist>(bool value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCKeySignature</name>
    <filename>class_f_c_key_signature.html</filename>
    <base>__FCBaseData</base>
    <member kind="function">
      <type></type>
      <name>FCKeySignature</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>ad6d468cc6082f3d146dcc88ecd751c8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a8f501b415ac3d01a6b162450ca817fcd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>afc6176c88bf05cc3da63a4af55e2ee55</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetID</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>accae4be2ba29a099c9fb70e2eeb74a16</anchor>
      <arglist>(eKey newkey)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTransposeAlteration</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a8f27b85d16b3e563f4f8a655c05b75b6</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTransposeSimplify</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a6a8a780b7c842c9bf88085b83f2fb702</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMajorKey</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a69aa493f292f7a65c48d8b46e802cc36</anchor>
      <arglist>(int accidentalnumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMinorKey</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>ac69a7e601f40e713049f4b50aa1b24bd</anchor>
      <arglist>(int accidentalnumber)</arglist>
    </member>
    <member kind="function">
      <type>eKey</type>
      <name>GetID</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a453f875535d5c67bf549205a3cbbe53f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAlteration</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>af7ebcc11895dc25923d32182a0420dfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eKey</type>
      <name>GetIDWithTransposition</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a7b925a16a181e07ba92946fa9671bacd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTransposeAlteration</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a84df27dc8b750dfc3e7c0acebb1c2f3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTransposeSimplify</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>ac19f684f4bf51b9a8c020b675b7385d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTransposeChromatic</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>ad2a1a4cd2f70be5b1dfc6fb2c1c7451f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcScaleRootIndex</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a2326859ad5d8134bec1e334c78fc4a9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcRootRelationIndex</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a99220cc854e2fdde3b293b047fc46d77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcRootRelationAbsoluteIndex</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>abb71be8055a555583b21bbe872845f36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcSharps</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a58a1a73cbe4d9985c4dad3a56feb4af1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcFlats</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a3cf38b5d6cd3d49abc3614a7b7c0bbca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcTotalChromaticSteps</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>ad81c3331f3c379db8079174231365a0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; eHarmLev &gt;</type>
      <name>CalcDiatonicStepsMap</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>aaab3305370dc0c89177cf8293d80b3d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPredefined</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a7ab899537b54884309284563237cf064</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLinear</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a2bc909479549c86441343e264dec9f10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMajor</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a06c96239d42406b9a7f98eec2b13ec30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMinor</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a16f2c64151ef663f2b7c392c77937130</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdentical</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a696863f269b5175c73a2c4ee3538e8e4</anchor>
      <arglist>(__FCBase *pCompareObject) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSharpNote</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>ac9c23aca0679f4fb1b4520a30532a00a</anchor>
      <arglist>(int letterindex)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFlatNote</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a5aae4743fc5ae29391a43eea4cd398c5</anchor>
      <arglist>(int letterindex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeString</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>af86efce3ea428c6e0e337e335bad7275</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>ae2775786a50978061f8713a68c5e1c9d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>ae1f68b81cab5454eee914efa8d50fb04</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>twobyte</type>
      <name>KeyMode</name>
      <anchorfile>class_f_c_key_signature.html</anchorfile>
      <anchor>a8dfb8549fb7abdb9674b0a6a12dfee6f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCLayerPlaybackData</name>
    <filename>class_f_c_layer_playback_data.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type></type>
      <name>FCLayerPlaybackData</name>
      <anchorfile>class_f_c_layer_playback_data.html</anchorfile>
      <anchor>aa1fcbd7bef9ccab2c9790619bac648aa</anchor>
      <arglist>(__EDTLayerPlayData *pData)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_layer_playback_data.html</anchorfile>
      <anchor>abc48e347568ca53f3ab1581bfe771712</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ePlaybackRoute</type>
      <name>GetInstrumentDefID</name>
      <anchorfile>class_f_c_layer_playback_data.html</anchorfile>
      <anchor>a9341a2eafa6a990f117919b789b4a2de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPlay</name>
      <anchorfile>class_f_c_layer_playback_data.html</anchorfile>
      <anchor>afdb5677eedd1c3e31c6728f1fb84b425</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSolo</name>
      <anchorfile>class_f_c_layer_playback_data.html</anchorfile>
      <anchor>ac0cc6fb9834a98ad63762aa37c23af60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInstrumentDefID</name>
      <anchorfile>class_f_c_layer_playback_data.html</anchorfile>
      <anchor>a0a36b11c2d50b9a576d684b204d8ff87</anchor>
      <arglist>(ePlaybackRoute value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlay</name>
      <anchorfile>class_f_c_layer_playback_data.html</anchorfile>
      <anchor>a743cc39f01c782331ef06eaa0b639f8e</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSolo</name>
      <anchorfile>class_f_c_layer_playback_data.html</anchorfile>
      <anchor>a03c958c38300fdb9bcbe6b9cc15752ec</anchor>
      <arglist>(bool state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCLayerPrefs</name>
    <filename>class_f_c_layer_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a3260451549af3f5d2992ddd9eeb9fdec</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>abe4b6e7737c8e7d5b34abe1669707589</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCLayerPrefs</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a784ab385ec1bfd8c11bc5313c08a1fdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLayerIndex</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>aed5bfa5783385551ed219f43797d9dba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLayerNumber</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>ae2b7b9933fe1e9a307ef9dcaed231155</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRestOffset</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>aa4e20aeabe7ac9801400d410e94d5345</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseRestOffset</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a64b87838b5ff7032abf394ac7222b8cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseRestOffsetInMultiple</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a57df3daf6a14addf68a36ea789e6e835</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseFreezeStemsTies</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a0127381d52af0ba79d14da2674cc1c75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFreezeStemsUp</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>aaac4019eac78496d9b6a0e1b700b0144</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFreezeTiesSameDirection</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>aa47131bf06ee0e4669a53055da8b9aee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPlayback</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a09458aedb4adeaaa7c24372c107e0909</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSpacing</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>aea4bc0be483e6ebb65356dcaf59a68cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIgnoreHiddenNotes</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a1db3054882552e1a78f411fe5de9d63e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHideWhenInactive</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a1965f9d6ac4648a2cc658a1bfb581f11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIgnoreHiddenLayers</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>aaea3372660054ecb44af9e306936d975</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRestOffset</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>abbbd4c935b467b88642fe3e88c05f165</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseRestOffset</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a65e42c6b4e514d86cbc4eeb73814d72f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseRestOffsetInMultiple</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a9793bc898bc30738ae267e35c868784b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseFreezeStemsTies</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a7789ca42dcc6abc8b6522c778bc2b176</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFreezeStemsUp</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a194566fcd5659f6e03d3d4e758c894fa</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFreezeTiesSameDirection</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a723d74e0b24db722a74b84f16b878159</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlayback</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a791313ca761486f93a2f5f358cf9cf2c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpacing</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a7ab5c79af1cee829a68b12a518626790</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIgnoreHiddenNotes</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a92a6a752b571d3b6680ee66b106c8404</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHideWhenInactive</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a49f75b4241f4d95e6bbebaecd15c6c73</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIgnoreHiddenLayers</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a8bbe25d77df28fd4d29772c4060d6a7b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static twobyte</type>
      <name>GetMaxLayers</name>
      <anchorfile>class_f_c_layer_prefs.html</anchorfile>
      <anchor>a254deed4c1418808e6ca1a944c36ddfd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCLuaIterator</name>
    <filename>class_f_c_lua_iterator.html</filename>
    <base>__FCBase</base>
    <member kind="enumeration">
      <type></type>
      <name>LUAITERATOR_ENTRYFILTERS</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_NOTE</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aab1fceba7cbb065fcb42eb354752e5505</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_REST</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa3804501f32ab9407fff5f185915fbc5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_CHORD</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa652383cff692e643cc3ca7a5d5413944</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_SINGLENOTE</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa1fda0d3b00c5c2a4b8ed358abae60181</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_ARTICULATIONFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa424520d2ca3e5775456033d9a97e4563</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_SMARTSHAPEFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aaf8b6d7d514dbad261252152182402f77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_NOTEDETAILFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa83c1b9e7204300104b471bf50d159e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_PERFORMANCEDATAFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa2969389b5212d99297d879ca73e7f284</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_SPECIALALTSFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aac73b3cd8275ee9c8e6420a2f7ab09c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_TUPLETSTARTFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa41467e324570ffc88719848a8c0c0606</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_LYRICFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa80d17454b773135e99d933f9890d4d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_STEMDETAILFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aaaef5631272ffd8d1a1ece5f1ec33f06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_SECONDARYBEAMFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa1da4afd9ef14c3202310b09f6ba29f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_GRACENOTE</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa622d78404ede5705639dae5502c4c3c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DOTTED</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa565bc93e05ae963259d54fea9f5d2066</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DURWHOLE</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aac045d92fa69328e36e636833872c4db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DURHALF</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa064cd281f344be66932d0917ac9c7e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DURQUARTER</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa0cbf0ba091813cf4434289f48988981d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DUR8TH</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa73b96cd5fc6b6076f9e71961b82cc12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DUR16TH</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aad856b3988b1a4b6a205ed1d794362aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DUR32ND</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa83cd0c0539b0dedef98f48f4db506202</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DUR64TH</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa85418fd7c0a41d8c29032b0ad6ecc2ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LUAITERATOR_NOTEFILTERS</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac81ba1a48730e6ae267b2cd1c39d9db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINFILTER_TIE</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac81ba1a48730e6ae267b2cd1c39d9db1afa9510979f43f19827ca176b795d8b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINFILTER_ACCIDENTAL</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac81ba1a48730e6ae267b2cd1c39d9db1a44a55c1be81a8fa1e43cf412daecbbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINFILTER_ACCIDENTALPARENTHESES</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac81ba1a48730e6ae267b2cd1c39d9db1a53993c03952f2c298e6f0fb8c50a4165</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINFILTER_ACCIDENTALFREEZE</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac81ba1a48730e6ae267b2cd1c39d9db1a5ba1c44ee1e8e0d849a93aac35c408fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LUAITERATOR_LOGICMETHOD</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aa832d75112692311b3fe9a5fc1267e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LILOGIC_AND</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aa832d75112692311b3fe9a5fc1267e67afa91a6d9d9ab8926b90c25cd5e9308cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LILOGIC_OR</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aa832d75112692311b3fe9a5fc1267e67af18892c74a4d69b8b6134907964c871d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LILOGIC_NOT</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aa832d75112692311b3fe9a5fc1267e67ac9e24bf5d927a4d6c7de275d910dcba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_NOTE</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aab1fceba7cbb065fcb42eb354752e5505</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_REST</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa3804501f32ab9407fff5f185915fbc5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_CHORD</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa652383cff692e643cc3ca7a5d5413944</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_SINGLENOTE</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa1fda0d3b00c5c2a4b8ed358abae60181</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_ARTICULATIONFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa424520d2ca3e5775456033d9a97e4563</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_SMARTSHAPEFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aaf8b6d7d514dbad261252152182402f77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_NOTEDETAILFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa83c1b9e7204300104b471bf50d159e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_PERFORMANCEDATAFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa2969389b5212d99297d879ca73e7f284</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_SPECIALALTSFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aac73b3cd8275ee9c8e6420a2f7ab09c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_TUPLETSTARTFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa41467e324570ffc88719848a8c0c0606</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_LYRICFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa80d17454b773135e99d933f9890d4d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_STEMDETAILFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aaaef5631272ffd8d1a1ece5f1ec33f06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_SECONDARYBEAMFLAG</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa1da4afd9ef14c3202310b09f6ba29f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_GRACENOTE</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa622d78404ede5705639dae5502c4c3c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DOTTED</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa565bc93e05ae963259d54fea9f5d2066</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DURWHOLE</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aac045d92fa69328e36e636833872c4db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DURHALF</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa064cd281f344be66932d0917ac9c7e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DURQUARTER</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa0cbf0ba091813cf4434289f48988981d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DUR8TH</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa73b96cd5fc6b6076f9e71961b82cc12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DUR16TH</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aad856b3988b1a4b6a205ed1d794362aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DUR32ND</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa83cd0c0539b0dedef98f48f4db506202</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIEFILTER_DUR64TH</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac6e996e113e5e13dc822c6a0c569923aa85418fd7c0a41d8c29032b0ad6ecc2ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINFILTER_TIE</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac81ba1a48730e6ae267b2cd1c39d9db1afa9510979f43f19827ca176b795d8b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINFILTER_ACCIDENTAL</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac81ba1a48730e6ae267b2cd1c39d9db1a44a55c1be81a8fa1e43cf412daecbbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINFILTER_ACCIDENTALPARENTHESES</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac81ba1a48730e6ae267b2cd1c39d9db1a53993c03952f2c298e6f0fb8c50a4165</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINFILTER_ACCIDENTALFREEZE</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac81ba1a48730e6ae267b2cd1c39d9db1a5ba1c44ee1e8e0d849a93aac35c408fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LILOGIC_AND</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aa832d75112692311b3fe9a5fc1267e67afa91a6d9d9ab8926b90c25cd5e9308cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LILOGIC_OR</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aa832d75112692311b3fe9a5fc1267e67af18892c74a4d69b8b6134907964c871d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LILOGIC_NOT</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aa832d75112692311b3fe9a5fc1267e67ac9e24bf5d927a4d6c7de275d910dcba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCLuaIterator</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a74d9e33d53c19566b358fe8c3bfa6c42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ad232748f804c2f76beaddd4f34fc81c4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEach</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a9f50a6f6be53b2107b5fb10cf1623b63</anchor>
      <arglist>(__FCCollectionData *pCollection, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachSaved</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a0ce9ac6cf27cc5eb1069d064ada15d1a</anchor>
      <arglist>(__FCCollectionData *pCollection, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachEntry</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a9541a6fadc2181ad2f03ce762029432a</anchor>
      <arglist>(FCMusicRegion *pRegion, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachEntrySaved</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ab58c25b2e01e92b4970b86763c6f1945</anchor>
      <arglist>(FCMusicRegion *pRegion, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachNote</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a7dec16a84242c454ecdf5c8a7bb334c7</anchor>
      <arglist>(FCMusicRegion *pRegion, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachNoteSaved</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aba116224cb374e2c46d6f00b22193fa0</anchor>
      <arglist>(FCMusicRegion *pRegion, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachCell</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aab028d5f80ec88f78de72b0bb5807ff6</anchor>
      <arglist>(FCMusicRegion *pRegion, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachPart</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a014edb9c2822d990ecb843c730876d5d</anchor>
      <arglist>(luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachObject</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a7be2106a4fec95b86a19b788f828aca1</anchor>
      <arglist>(int classID, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachObjectSaved</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a3341d8cedb06c6658195059c8c86b818</anchor>
      <arglist>(int classID, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachRegionObject</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a448f09012308441cc23e4b3313fa1caa</anchor>
      <arglist>(FCMusicRegion *pRegion, int classID, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachRegionObjectSaved</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a3a79699d94da828eee188ee7cefdfb18</anchor>
      <arglist>(FCMusicRegion *pRegion, int classID, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachDocument</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a5900f43ae3a0a679ef27ca3157e1e21b</anchor>
      <arglist>(luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachDocumentSaved</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a683b57c077ea13342f8ec0572b76daa1</anchor>
      <arglist>(luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachFile</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a312f361918a18044584ac52a79320593</anchor>
      <arglist>(FCStrings *pFileStrings, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachFileSaved</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aa1f1c852beb1303c94483c9de9c39f34</anchor>
      <arglist>(FCStrings *pFileStrings, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachInteger</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aaa1ccf3db9f329b1027150e796fe0f3c</anchor>
      <arglist>(int integer1, int integer2, luabridge::LuaRef lua_callback_function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseProgressBar</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a40515785054b738b0b95f084f611a588</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetProgressUpdateFrequency</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a05b7f040cb0b47930a04ac2c84b59ed2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAbortableProgressBar</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a6536f6b3f227dd27ad5c93396f74327c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetProgressBarUserAborted</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>abe14d7826de54e2b263a87dc91ca273c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLoadLayerMode</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ac952dcefd5c37b352391f7e9c75dd44c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetProcessScorePart</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>adee8d5d3c335dd367673f0a7ff0421c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetProcessCurrentPart</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a519f4e75eba97d56f1beb79d2eb87e2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetProcessCurrentDocument</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a7b906397dd89de82534d55b8aea4255d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNullRegionEqualsAll</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aa35eac632cbeaeb9a450d03e3c455044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetForwardProcessing</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>afffef23b570335b2280d4fbce7bb6272</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDownwardProcessing</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a26d64db246a3378c92b242cfcea818f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPartialMeasureSelections</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a6b1e83a42d8ea8be80e4ff3b2e3fc144</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseProgressBar</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a8dced2d42abe0e3a1897aac585914035</anchor>
      <arglist>(bool use)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetProgressUpdateFrequency</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a22ecff3ec6d6a6d1340ef2deb1a377c1</anchor>
      <arglist>(int freq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAbortableProgressBar</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a3141b0489631644dde3638c9fe777531</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLoadLayerMode</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a64419073250d4f15e8e1436c3b4eb182</anchor>
      <arglist>(int loadlayermode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetProcessScorePart</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>affe33c21918a68e1b9c5fc40897ddf72</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetProcessCurrentPart</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a312b888ababf4f227be77ed8434cae4a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetProcessCurrentDocument</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aa4882c742492ff7c338932a7ffe38754</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNullRegionEqualsAll</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aef96d0bbbd069d8fc7a62f2122dcb376</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetForwardProcessing</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a69a66aa03cc2d952bfa4d7036d50446f</anchor>
      <arglist>(bool forward)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDownwardProcessing</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a4696dbd0644f6f289c6170e3a3ae490a</anchor>
      <arglist>(bool downward)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPartialMeasureSelections</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a5692ece58b2480ffa324d2970dc45f46</anchor>
      <arglist>(bool partialselections)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddEntryFilter</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aac0db0cb8d18fa9f5ad5157581ba63a5</anchor>
      <arglist>(int filter, int logicmode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveEntryFilter</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a97c8dc615643f2ffb916b303d59c8a75</anchor>
      <arglist>(int filter, int logicmode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearAllEntryFilters</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a54bf6aa6125eaf570550d6c3c228e7c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEntryFilterAdded</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a68fc5fa1d0e29bc74513956ff7d6eae2</anchor>
      <arglist>(int filter, int logicmode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddNoteFilter</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ab1d5fafecc0a7fd2c6e0272f43b26515</anchor>
      <arglist>(int filter, int logicmode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveNoteFilter</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a630c0a1fed97c4de86de0bc75a3ef082</anchor>
      <arglist>(int filter, int logicmode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearAllNoteFilters</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a66f740dfcaf4260378a95e0e2ba3e260</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNoteFilterAdded</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>aa6e062c0b288fa94502350bd8767a816</anchor>
      <arglist>(int filter, int logicmode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddAltNotationFilter</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ad61b92ce1c82e8aff0a8e0375cbeed50</anchor>
      <arglist>(int filter, int logicmode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveAltNotationFilter</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a793e755a0dfd2fd30f00c1c5316510a6</anchor>
      <arglist>(int filter, int logicmode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearAllAltNotationFilters</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a0bab7e332a63e3f49482221ecb4a9d4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAltNotationFilterAdded</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a39ef30a61bd73f87180ab264f410839c</anchor>
      <arglist>(int filter, int logicmode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddNotationStyleFilter</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ab9bb39bcc3f99a2b09f3d6f53773bcb1</anchor>
      <arglist>(int filter, int logicmode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveNotationStyleFilter</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a135f882e3de58d74eeecfca6359ea6e9</anchor>
      <arglist>(int filter, int logicmode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearAllNotationStyleFilters</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>ab1e1857ef971a810328498aaaf0bdd44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNotationStyleFilterAdded</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a4c0ea30104c4cf5d72ae8621c885bc24</anchor>
      <arglist>(int filter, int logicmode)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>CalcLastDuration</name>
      <anchorfile>class_f_c_lua_iterator.html</anchorfile>
      <anchor>a926ccbb9b32603f79311af8a512f86ae</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCLyricsPrefs</name>
    <filename>class_f_c_lyrics_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="enumeration">
      <type></type>
      <name>LYRICS_ALIGNMENTS</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a8407c1f07042acb7347a5086ab0c2cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LYRICS_ALIGN_CENTER</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a8407c1f07042acb7347a5086ab0c2cc7a62f29d363a86d880d14008f187202980</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LYRICS_ALIGN_LEFT</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a8407c1f07042acb7347a5086ab0c2cc7a54873143acb2712b25e5adf0b1913bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LYRICS_ALIGN_RIGHT</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a8407c1f07042acb7347a5086ab0c2cc7a1e9e06c25c81170a22ab1494a6d96fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LYRICS_JUSTIFICATIONS</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a42c47f09e022d3d973d00174324e7014</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LYRICS_JUSTI_CENTER</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a42c47f09e022d3d973d00174324e7014ab451fafede09a22b4b255eb8f8487ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LYRICS_JUSTI_LEFT</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a42c47f09e022d3d973d00174324e7014a234f20c53d7485cf06e7015370c7d5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LYRICS_JUSTI_RIGHT</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a42c47f09e022d3d973d00174324e7014a2e8c91aff067be3f394a4c27ede0ae6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SMARTHYPHEN_SYSTEMSTART</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>ad2551b0c217f84d74af51bed59928c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTHYPHEN_SYSSTART_ALWAYS</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>ad2551b0c217f84d74af51bed59928c36a0ad3e724405f160dcae6207931e87b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTHYPHEN_SYSSTART_ONLYLATERSYLLABLE</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>ad2551b0c217f84d74af51bed59928c36a0f71bf271d0f3f2f3ed9546ff1c3733c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTHYPHEN_SYSSTART_NEVER</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>ad2551b0c217f84d74af51bed59928c36a385bcf14561e6f8d5ad8c2eba737849d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LYRICS_ALIGN_CENTER</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a8407c1f07042acb7347a5086ab0c2cc7a62f29d363a86d880d14008f187202980</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LYRICS_ALIGN_LEFT</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a8407c1f07042acb7347a5086ab0c2cc7a54873143acb2712b25e5adf0b1913bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LYRICS_ALIGN_RIGHT</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a8407c1f07042acb7347a5086ab0c2cc7a1e9e06c25c81170a22ab1494a6d96fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LYRICS_JUSTI_CENTER</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a42c47f09e022d3d973d00174324e7014ab451fafede09a22b4b255eb8f8487ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LYRICS_JUSTI_LEFT</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a42c47f09e022d3d973d00174324e7014a234f20c53d7485cf06e7015370c7d5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LYRICS_JUSTI_RIGHT</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a42c47f09e022d3d973d00174324e7014a2e8c91aff067be3f394a4c27ede0ae6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTHYPHEN_SYSSTART_ALWAYS</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>ad2551b0c217f84d74af51bed59928c36a0ad3e724405f160dcae6207931e87b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTHYPHEN_SYSSTART_ONLYLATERSYLLABLE</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>ad2551b0c217f84d74af51bed59928c36a0f71bf271d0f3f2f3ed9546ff1c3733c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTHYPHEN_SYSSTART_NEVER</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>ad2551b0c217f84d74af51bed59928c36a385bcf14561e6f8d5ad8c2eba737849d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCLyricsPrefs</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a1d6b43c8cb8b9b6fd639f6020ddd7d4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseSmartHyphens</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a227ff4cde094762cc39eb3ce49d593b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHyphenSystemStart</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>adf04b410965c7d102ff95819dd9c12dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetMaxSpaceBetweenHyphens</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a05cfd2be6b205f969035089b2081c5c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetWordExtLineThickness</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>afcbf4155d2ed4b34e95e864667c069f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseWordExtSyllable</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a1c69028b3ac50c6a6f00a57fe6896189</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetWordExtSyllableAlignment</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a15d018d70c627c0dee3efb93a2bac4a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetWordExtSyllableJustification</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a96551ae258e4ef8eacd15a0634c3b0e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseFirstSyllable</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a775db376d754874c5506d141a8628e6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFirstSyllableAlignment</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>aaa283e1daa7146e3b6a2a2e3a6603761</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFirstSyllableJustification</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>ace389157462b146f63f32d2b1f0bf14d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseStartSystemSyllable</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>abbc65e2624e929389be93a20564c58da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartSystemSyllableAlignment</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>abf244f0fd4e6437f2028fa46f8d27481</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartSystemSyllableJustification</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a7437bae3d6d1c71eb05b1dc52f3ba4c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetOtherSyllableAlignment</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a251952ca2bcdd1cb98720cb90d36d998</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetOtherSyllableJustification</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a2bb58bfb71fdb5b04be93bebcd98dc38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseSmartHyphens</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a32791263b01f74765182b30a02067ef4</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHyphenSystemStart</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a0d465be5286ea3661c2df00e4ba99955</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxSpaceBetweenHyphens</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>aecc7b3e41b9f38f1908fa0ebd3c2f0ac</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWordExtLineThickness</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a902492e533871aaf2e598e75421b018c</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseWordExtSyllable</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a885df2a8163caf4a78c3a45e56655de5</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWordExtSyllableAlignment</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a93431109d661afe9d804316131604ffb</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWordExtSyllableJustification</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>ac5b13001789c3aa75da2b7c17e8a1d0b</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseFirstSyllable</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a8e1cff507de8c6a879b91956bafa595f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFirstSyllableAlignment</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>ae48819392ffc6c271d6b398c87ed76d3</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFirstSyllableJustification</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>ada60043dd7a81a8171773e350ebb5d1c</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseStartSystemSyllable</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>ae97cc8a2cc0a2fd55ec3e3dc62a7cef2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartSystemSyllableAlignment</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a68b80adc8368d5890825c13ce5478ae4</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartSystemSyllableJustification</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>abfb9f8d4fad833fa9e4125f69fc81917</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOtherSyllableAlignment</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>a18ed9c3846d83a75b055448a531d6320</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOtherSyllableJustification</name>
      <anchorfile>class_f_c_lyrics_prefs.html</anchorfile>
      <anchor>afda7d8f44308ae3b49603cef75d7b2af</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMeasure</name>
    <filename>class_f_c_measure.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>BARLINE_STYLES</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_NONE</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143ab847bc20a53fc50b53a313701d2f2c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_NORMAL</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143a3856c3f4dc3b6d72f2b2498124bb5822</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_DOUBLE</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143aa93090ec29074cbf651289b8377123b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_DASHED</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143a696dc164d245a40ac3439aca9386affa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_THICK</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143a14fb3857f4c74eb38566194e8e715a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_FINAL</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143a3c527ef100d0ac82260ac76d70491129</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_TICK</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143ab1039dd1d1492e27bd8a719ce6f9bd85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_SHAPE</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143a282eef6b06ac7e23ffafd1720cd14d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_DEFAULT</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143aac37a7535c877c1092b14ac0cd3237d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>POSITIONING_MODES</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a92607eb53c04e928c2b6a683b009c652</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POSITIONING_TIMESIG</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a92607eb53c04e928c2b6a683b009c652adf3e71fb3b840208e2916322b2677878</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POSITIONING_MANUALLY</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a92607eb53c04e928c2b6a683b009c652a37b972cda5bced09727258494ec7085f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POSITIONING_BEATCHART</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a92607eb53c04e928c2b6a683b009c652a3d10f4a0d32f0d788a7cea2bc01607f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SHOW_STATES</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>afe5cb60fc2ab63449f2a0e08936c54bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOWSTATE_IFNEEDED</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>afe5cb60fc2ab63449f2a0e08936c54bfa1d3c5f3f29b809a81aae2f670defbe22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOWSTATE_SHOW</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>afe5cb60fc2ab63449f2a0e08936c54bfabb6a8e1ac753009ec075e6b4c4bb12ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOWSTATE_HIDE</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>afe5cb60fc2ab63449f2a0e08936c54bfa529ba17551c9ca0f84eebeb961b2b122</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_NONE</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143ab847bc20a53fc50b53a313701d2f2c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_NORMAL</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143a3856c3f4dc3b6d72f2b2498124bb5822</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_DOUBLE</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143aa93090ec29074cbf651289b8377123b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_DASHED</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143a696dc164d245a40ac3439aca9386affa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_THICK</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143a14fb3857f4c74eb38566194e8e715a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_FINAL</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143a3c527ef100d0ac82260ac76d70491129</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_TICK</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143ab1039dd1d1492e27bd8a719ce6f9bd85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_SHAPE</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143a282eef6b06ac7e23ffafd1720cd14d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BARLINE_DEFAULT</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a412e99a3a171951a8463f9d356f09143aac37a7535c877c1092b14ac0cd3237d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POSITIONING_TIMESIG</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a92607eb53c04e928c2b6a683b009c652adf3e71fb3b840208e2916322b2677878</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POSITIONING_MANUALLY</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a92607eb53c04e928c2b6a683b009c652a37b972cda5bced09727258494ec7085f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POSITIONING_BEATCHART</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a92607eb53c04e928c2b6a683b009c652a3d10f4a0d32f0d788a7cea2bc01607f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOWSTATE_IFNEEDED</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>afe5cb60fc2ab63449f2a0e08936c54bfa1d3c5f3f29b809a81aae2f670defbe22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOWSTATE_SHOW</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>afe5cb60fc2ab63449f2a0e08936c54bfabb6a8e1ac753009ec075e6b4c4bb12ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOWSTATE_HIDE</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>afe5cb60fc2ab63449f2a0e08936c54bfa529ba17551c9ca0f84eebeb961b2b122</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>ae29f39ae0622dc424eca07d256c9ba7c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a2754ecc21e3885b95a0571928909b60d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCMeasure</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a0c9c418e3aa117588b3475b60c0fad2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCMeasure</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a9e3bfa1babf0e5288706c22787370970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a12e015afc3f95faa53c2490f68b498ae</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>ad940dd9c48a03366eabfc5907b5cd1da</anchor>
      <arglist>(CMPER itemno) override</arglist>
    </member>
    <member kind="function">
      <type>FCBeatChartElements *</type>
      <name>CreateBeatChartElements</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a0c7b8b976fb44fad00579a8bf4994503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCExpressions *</type>
      <name>CreateExpressions</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a3cd4bd37cfa36dfbc7fa10238f11a2c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCTempoElements *</type>
      <name>CreateTempoElements</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>ae9c9a249a176d7aa991241b18a2e5aaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeyless</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>ad50bf60d91581d402ff66c7e49a9bca6</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHideKeySigShowAccis</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a17d40e85b745640494ac4c28173519b0</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPageBreak</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a9118e8ee2941a662f3fc0ec10c94cac1</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakMMRest</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>ac4f417eeeaf6b653e3cad7e504d21156</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetForwardRepeat</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a05d6da1df093ea53f54e9cea687d9218</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExpressionFlag</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a2ecb36f25a56d542da57e5a0ff2a95de</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTextFlag</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a0f51d979aa6e2a0843cc572f59a6b707</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBackwardRepeat</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>aded792f9e8f2d028cdc7478981466f8e</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRepeatBracketFlag</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a20fa815c0591d96db5a83ebed38c2d8a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTextRepeatFlag</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>aeccbad3d10ca589b5dd7c4051dba934f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSystemBreak</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>aecb89fd596533a9e815e77066e240122</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHideCautionary</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a325bd3f98ce378a55bd8420f57d901b8</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>afbb2e0397e5c66ba316294058fa01e66</anchor>
      <arglist>(Evpu16 width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpaceBefore</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a14dfc968681a9c93ea0da672773ce63e</anchor>
      <arglist>(Evpu16 space)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpaceAfter</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a78bb2799652a19739196083226ca353c</anchor>
      <arglist>(Evpu16 space)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllowHorizontalSplit</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a7464ed415f562cf798d254831187818c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowKeySignature</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a7109222104f5835f019da115d76440a2</anchor>
      <arglist>(SHOW_STATES state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowTimeSignature</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>aa187a61c5ff3e80547881dc5473e7a30</anchor>
      <arglist>(SHOW_STATES state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowFullNames</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a8d96828b0566428ed679cd7d3617ef87</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetContainsManualMeasureNumbers</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a65f412a7772ef876baa6c4ef4b26c217</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakWordExtension</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a472aa56b8096d9bb4a25bdf205c7d43f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIncludeInNumbering</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a43b9419d34a0d7bfa709cc768abc35d6</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOverrideGroupBarlines</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a4b86abf27d45da4ff0e0434292eebda7</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPositioningNotesMode</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a353628209508819e570525991e7efb81</anchor>
      <arglist>(POSITIONING_MODES mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPositionEvenly</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>ac2adab1a5c3da06f8f0eee16d3809b56</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBarline</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a8345a452d7faa346c8c525b445f4f40c</anchor>
      <arglist>(FCMeasure::BARLINE_STYLES style)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBarlineShapeID</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a85f1ebc2f9579f1cd759b808c71cd88c</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftBarlineShapeID</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>ab1c0392d80554b5351879fcfb4529042</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftBarline</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a29434b807df250bb4ba6761dad578a08</anchor>
      <arglist>(BARLINE_STYLES style)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSmartShapeFlag</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>acf77836a0f9f8928ac1697a9c1bf254d</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordFlag</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a081b5ace74ec38aff53dab15e6588dfa</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetDuration</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a2ec858441badd2eeb1c2f367fa6132e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetKeyless</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a25e86cdc143360f40ea698bb250b4933</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHideKeySigShowAccis</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>ae4b75b014ba3a2a64eec96c53c8cad0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPageBreak</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>adce86e6d00ed3d12a513d4eb77beca3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakMMRest</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a09f54dd2673765b7895c6270450ac8a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSystemBreak</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a0053b9169ce5f574410ffd349a16a834</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetForwardRepeat</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>af460cc32b41fd0c1a14ca30b7360739d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetExpressionFlag</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a36853ed8b1d717b0eda1cd7994e3330a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTextFlag</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>aceb73a516df45fa6445e238fc8ab383e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBackwardRepeat</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a6e096bc0292bf211482bab60c4d50ae0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRepeatBracketFlag</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>aece2d745da458af7615dbac12d385288</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTextRepeatFlag</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a6bdd594169bbab08bdcfcc15a85cded8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHideCautionary</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>aa4e94ebe182efb0913e9841cf30882ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetWidth</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a872a53e371aad3210d04c5e13530d750</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSpaceBefore</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a41fd7e8e12872a8e4285d46dcb6898a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSpaceAfter</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a43f6e1226a091ed90f159452cd244433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAllowHorizontalSplit</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a91f4f6d2147695b140e9ce66571561aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SHOW_STATES</type>
      <name>GetShowKeySignature</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>aa1d480b07cbef41b297cad1dfc9af600</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SHOW_STATES</type>
      <name>GetShowTimeSignature</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a29339d3a761087904d724deaa5881e58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseTimeSigForDisplay</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a98bcfb5ae7a9588fe2a7d4893e20db64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowFullNames</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a4dd2c6c2b4b6fc65beefe7258dcc6154</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetContainsManualMeasureNumbers</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>abe9bc785952e41ea129d3fb82b3a1cd6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakWordExtension</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a69220b93ce789d6d12b2159f9527a475</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIncludeInNumbering</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a08d495d3247e5d22b93bb3f721bfc0a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetOverrideGroupBarlines</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>af0f5ed8472f8c18e1d63b1c5e72b99f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>POSITIONING_MODES</type>
      <name>GetPositioningNotesMode</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>aaa0e013f9f9504141eb30b5bff03b0b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPositionEvenly</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a08587bfbfe11c90fa19985382f69a599</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCMeasure::BARLINE_STYLES</type>
      <name>GetBarline</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>aabd43287015bbc16ff1103d00ea6c995</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BARLINE_STYLES</type>
      <name>GetLeftBarline</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a2ccde26ccebb148a18b059a3f2d50b62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetBarlineShapeID</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a802f0525d60a1575184b91c7f1967afe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetLeftBarlineShapeID</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>ace222dc87265588a331da1e5a8edb60f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCKeySignature *</type>
      <name>GetKeySignature</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a562c736156bb9bdf33aff6da77ca60db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSmartShapeFlag</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a8a391afae5d12341a2c93ef507f6b150</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetChordFlag</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a993f57a1c552acbbcd592496113d44aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCTimeSignature *</type>
      <name>GetTimeSignature</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>aade598f6c640d7c86597d4abacf884f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCTimeSignature *</type>
      <name>GetTimeSignatureForDisplay</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>a1f3e9f7b53e8450592882136a393cfcf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseTimeSigForDisplay</name>
      <anchorfile>class_f_c_measure.html</anchorfile>
      <anchor>ad1e00914516f0c6e3d8689be72e320ed</anchor>
      <arglist>(bool value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMeasureNumberRegion</name>
    <filename>class_f_c_measure_number_region.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>NUMBERINGSTYLE</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_DIGITS</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41a51512238a585d0a95bf1c5ed3f54de41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_UPPERCASEDOUBLE</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41a20308c63d99f044eb1b08cc16c127da9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_LOWERCASE</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41ad27401592889f208d0be873e1903b7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_UPPERCASE</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41aefc9d3e4ef34171da16f3d105402411f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_TIME_SECONDS</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41aafb3f5108419ac4a79a1908bf5f5f7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_TIME_10</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41a8a58851c04cb98c03a81c4ce4cf7675e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_TIME_100</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41aae0b5843209a9d43f47f5a31ee93b29b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_TIME_1000</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41a12d8f8051dfd06c136f29998ff8006d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_FRAMES</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41a01fe08ab5488b561d0c69967b23ae985</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_CUSTOM</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41a3a0e7e706acbbe0f8eb669975c1f7c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NUMBERVIEWS</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ac05e39a92a34c044193c2d07c0666163</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MNALIGNMENTS</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a1dbef48ed090d3d73f0efd8b5f46f46f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MNALIGN_LEFT</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a1dbef48ed090d3d73f0efd8b5f46f46fabc670fc26130c8ec29c6b3b370b359f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MNALIGN_CENTER</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a1dbef48ed090d3d73f0efd8b5f46f46fa3b52219abae33eb42c08c6604e1f01ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MNALIGN_RIGHT</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a1dbef48ed090d3d73f0efd8b5f46f46faac41cd2f285950f8b91d633ac0a16627</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MNJUSTIFICATIONS</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a934c898f4ebbf7cbca683e424c641462</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MNJUSTIFY_LEFT</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a934c898f4ebbf7cbca683e424c641462a71affc601f5b3660a0ba020183e4d27d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MNJUSTIFY_CENTER</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a934c898f4ebbf7cbca683e424c641462af8b97221400be33a43dec846a7aa8ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MNJUSTIFY_RIGHT</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a934c898f4ebbf7cbca683e424c641462a765c1cec9cba7d91eeecb6f37bb2f642</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_DIGITS</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41a51512238a585d0a95bf1c5ed3f54de41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_UPPERCASEDOUBLE</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41a20308c63d99f044eb1b08cc16c127da9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_LOWERCASE</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41ad27401592889f208d0be873e1903b7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_UPPERCASE</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41aefc9d3e4ef34171da16f3d105402411f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_TIME_SECONDS</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41aafb3f5108419ac4a79a1908bf5f5f7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_TIME_10</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41a8a58851c04cb98c03a81c4ce4cf7675e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_TIME_100</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41aae0b5843209a9d43f47f5a31ee93b29b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_TIME_1000</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41a12d8f8051dfd06c136f29998ff8006d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_FRAMES</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41a01fe08ab5488b561d0c69967b23ae985</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBERING_CUSTOM</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae5f1d6b85d51e6c82ba8beccf67b1b41a3a0e7e706acbbe0f8eb669975c1f7c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MNALIGN_LEFT</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a1dbef48ed090d3d73f0efd8b5f46f46fabc670fc26130c8ec29c6b3b370b359f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MNALIGN_CENTER</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a1dbef48ed090d3d73f0efd8b5f46f46fa3b52219abae33eb42c08c6604e1f01ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MNALIGN_RIGHT</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a1dbef48ed090d3d73f0efd8b5f46f46faac41cd2f285950f8b91d633ac0a16627</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MNJUSTIFY_LEFT</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a934c898f4ebbf7cbca683e424c641462a71affc601f5b3660a0ba020183e4d27d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MNJUSTIFY_CENTER</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a934c898f4ebbf7cbca683e424c641462af8b97221400be33a43dec846a7aa8ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MNJUSTIFY_RIGHT</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a934c898f4ebbf7cbca683e424c641462a765c1cec9cba7d91eeecb6f37bb2f642</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a2359661268764d9fb6a715cabe2af2a5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aa74281f862b88d215d424a0fc419d71a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCMeasureNumberRegion</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ac773d380dd43535a337560a93238f5d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartMeasure</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a0cd3be9e09b758773877186e68204435</anchor>
      <arglist>(twobyte measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndMeasure</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ad0267b2f80b136eefb1d98b63251c8ea</anchor>
      <arglist>(twobyte measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartNumber</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a4eadea0cf44c10416788555da4b2c406</anchor>
      <arglist>(twobyte offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrefix</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a514f77a78c15bc870cb1e4892fa92bd9</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSuffix</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aeb8558b3d2252304188adff65eb5e1b7</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseScoreInfoForParts</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a0e65399ed72f03cbce03a3c947a28bd1</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetID</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a11a877ec839da2917423ac60b136f1bd</anchor>
      <arglist>(twobyte newid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartFontInfo</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a81d8e48277a11f151c1e7068ac269581</anchor>
      <arglist>(FCFontInfo *pFontInfo, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultipleFontInfo</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a621911fdeeeba823b69acb7cf716dbd6</anchor>
      <arglist>(FCFontInfo *pFontInfo, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultiMeasureFontInfo</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>afeae84f5f7c5978c25fa44dbfdf4e193</anchor>
      <arglist>(FCFontInfo *pFontInfo, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseEnclosureStart</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a3118565a9b713be2834dc6ffe773ed49</anchor>
      <arglist>(bool use, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExcludeOtherStaves</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a5458434f3f28409c17b630f4879fef2c</anchor>
      <arglist>(bool exclude, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseEnclosureMultiple</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a03545ba0d953570c1859fb83cee42171</anchor>
      <arglist>(bool use, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowOnTopStaff</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a05634bda28d3bc664a57cd5de8e322dc</anchor>
      <arglist>(bool showontop, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowOnSystemStart</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a686ba24611eba53baa909e84ee8e0f8a</anchor>
      <arglist>(bool showonstart, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowOnBottomStaff</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>afbc4bab3aabed69b6712acbf92897df1</anchor>
      <arglist>(bool showonbottom, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowMultiples</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a29b9d7265d76a0297a70717c9a498a45</anchor>
      <arglist>(bool showmultiples, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHideFirstNumber</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a03a8dc8fd1912706110bb193264bbd1b</anchor>
      <arglist>(bool hide, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowMultiMeasureRange</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>af9ea831876b142be0d5bb638d505c30e</anchor>
      <arglist>(bool show, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowOnMultiMeasureRests</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a69f7094f9cbc44b59f0eb585eeb2a8c7</anchor>
      <arglist>(bool show, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultipleValue</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aa5a538028fae578a9334c2f35700bfea</anchor>
      <arglist>(twobyte value, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultipleStartMeasure</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>af4c5b02f605f22ebcde676d2b47a1cf3</anchor>
      <arglist>(twobyte measure, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultiMeasureBracketLeft</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a81f6cb532b95b263a6866c7ebd18a6b5</anchor>
      <arglist>(eUniChar32 character, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultiMeasureBracketRight</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aca4de17441ad669175141946d52c0ead</anchor>
      <arglist>(eUniChar32 character, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakMultiMeasureRests</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aac2d38198ede74dfbc05417560a63a81</anchor>
      <arglist>(bool breakstate, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartAlignment</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a802578c7644bd09fd53f718c16f937c8</anchor>
      <arglist>(MNALIGNMENTS alignment, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartJustification</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a8b9bd7def3c98093dbc2425fdf735acd</anchor>
      <arglist>(MNJUSTIFICATIONS justification, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultipleAlignment</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a9aacbcb0ed840a9d7ef152ecfda3c967</anchor>
      <arglist>(MNALIGNMENTS alignment, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultipleJustification</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ac3d435da6536d207bc9aa8ed4e49add4</anchor>
      <arglist>(MNJUSTIFICATIONS justification, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultiMeasureAlignment</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aa08873588b84f452fdc2e0adea3be8bd</anchor>
      <arglist>(MNALIGNMENTS alignment, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultiMeasureJustification</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aa581643c9dc170d21230aa3caf017ba7</anchor>
      <arglist>(MNJUSTIFICATIONS justification, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartHorizontalPosition</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>af74edd514699b0b07c49ee41f9505d4f</anchor>
      <arglist>(twobyte distance, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartVerticalPosition</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a900b2fafe0ec7071fc038876fcfacf8c</anchor>
      <arglist>(twobyte distance, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultipleHorizontalPosition</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a2f6272d72fe1ed90f098e5bc9ad287bf</anchor>
      <arglist>(twobyte distance, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultipleVerticalPosition</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ab4060078da785c22b764e29ebef02056</anchor>
      <arglist>(twobyte distance, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultiMeasureHorizontalPosition</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aa2809a3335ae38e98987858493303522</anchor>
      <arglist>(twobyte distance, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultiMeasureVerticalPosition</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ac01bda44df69b2e6a93c2fc6f44b18d2</anchor>
      <arglist>(twobyte distance, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetView</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a6c07fd41721e6240aac954f7a93e283d</anchor>
      <arglist>(NUMBERVIEWS view)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberingStyle</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a7ce92431e326898a53de76420c633ad3</anchor>
      <arglist>(NUMBERINGSTYLE style)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBase</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a1fc68b49b8add4df6dff8fba4342362e</anchor>
      <arglist>(twobyte base)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartCharacter</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>acb814695c70255d6281604785a1973d9</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTime</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a56086af580412c9661ff8dac114b33e3</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeFrames</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a2f09b063ded0f5be6456c4d1eccf99f5</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseHours</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a36adf6c36591c1a44b04708cee966bb4</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimePrecision</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a56752ee7678140f4269d759746aa91e8</anchor>
      <arglist>(twobyte precision)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCountFromOne</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a98684c1dff463bf27407490d72216498</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoZero</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aeb4c4b4ccfc92a6f2d6f5daa2cd996ff</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDoubleUp</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a037bfb5c3a0adb16ee99bfbe14f36c9f</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartMeasure</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a7f79a1ce51ad2f3c32e1dc0362b73410</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndMeasure</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>af166d1d3380bb6af8f36fb11d96c9300</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartNumber</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a821cd427681ad057bdebd1c63f613ac7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTime</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aaaceccb95d8dd4d5cf2e7d6f32af0800</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTimeFrames</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ab9d2810d61c5f31b88d6ed95a1927c4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseHours</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>add388111389ed90770196c8154e52dd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTimePrecision</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ad3932a8f57e008c39aef69f2abc118cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNoZero</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a2cf680d99200229475a0419f3a6418db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDoubleUp</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a733e9461caf17b32f371b1391d55a6a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCountFromOne</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aca6b28e1ca5eca40358d066a83320c0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetStartCharacter</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aa90622d1ee11bcc4088a69acb70105d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBase</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>abb2be958379b6ccddbcc8bf68cd39316</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseScoreInfoForParts</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>af384ea8696ec1a59e4cc55f565cc0038</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetID</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aae0e6b7597ccaa8d823441dac476692a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDisplayedNumber</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a85b24c09daa956cb4d907f23567fe8e1</anchor>
      <arglist>(eMeas number, FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDisplayedNumberWithID</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>af48439dbfab71ce4692d341df51defaf</anchor>
      <arglist>(eMeas number, FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetPrefix</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a5a75f761d0946da5a8c72b56fdb8c2a1</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetSuffix</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>acf896907bfff564e3e3768a3b6e96f63</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>FCEnclosure *</type>
      <name>GetEnclosureStart</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>afd40d5ec18e915a109c26f7401b0a849</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>FCEnclosure *</type>
      <name>GetEnclosureMultiple</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a1b884900fb35319c86f182362d96c55c</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseEnclosureStart</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a03c9314c193385effc2bdd1c3cf4f6e3</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetExcludeOtherStaves</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ac9156d023a99fd6366645108e338b2be</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseEnclosureMultiple</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a33e6c6387832d8703c4d9ecb68fe4231</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowOnTopStaff</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a1ed02b5f62f632e1dcf532ea3cb24c9e</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowOnSystemStart</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aca580f6268855fce0ca8a43c0db71fb0</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowOnBottomStaff</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a84996f17e0c9ab509b4ab10cbc2fd401</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowMultiples</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a3d87d85333c4800ab288f327f5e87024</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHideFirstNumber</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a5f5ee2e1ceff8c7a175639b512ae5819</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowMultiMeasureRange</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a367a65125d062343b9bd902c2b214d12</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowOnMultiMeasureRests</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>afd43b627f3bbe9e78af23a3d94818837</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMultipleValue</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a8def45510aa4df9bd9c5d629a88ece91</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMultipleStartMeasure</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a9638f3190effe6204201d96450ecbd3e</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetMultiMeasureBracketLeft</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a59d75f501d781d582b293f8ed790fe8e</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetMultiMeasureBracketRight</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ad27b12fee78b3c14fee6ed2c1274a5ee</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakMultiMeasureRests</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a59dee590baebca4d7e09f303adc0f9a6</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>MNALIGNMENTS</type>
      <name>GetStartAlignment</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a6cdc4961f0be42011a207f75278d7bec</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>MNJUSTIFICATIONS</type>
      <name>GetStartJustification</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>afbae259b9f9a031518e04f4bb2173c4a</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>MNALIGNMENTS</type>
      <name>GetMultipleAlignment</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a178992af3574406e70f89bd09735edff</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>MNJUSTIFICATIONS</type>
      <name>GetMultipleJustification</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a1dc263bc320cda72eb670bcdace09143</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>MNALIGNMENTS</type>
      <name>GetMultiMeasureAlignment</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>abfc55c3ad809c985c598470d5bf63621</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>MNJUSTIFICATIONS</type>
      <name>GetMultiMeasureJustification</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a8d73c5d630c4bcb016c852889c323b07</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartHorizontalPosition</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ac0823a128aa2cf90d108a82053691517</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartVerticalPosition</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ac5ada2069e20c06cd036264093bc7179</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMultipleHorizontalPosition</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae91c42a9a8b162c51f25dc2b1349cbd5</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMultipleVerticalPosition</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a0ee18673fdc85dd9c3bb2ba557f8dfa0</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMultiMeasureHorizontalPosition</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a914003daf9f879ee67800c8eae0038df</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMultiMeasureVerticalPosition</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a603f8fbb70205e932d3c25739b3f445c</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>NUMBERVIEWS</type>
      <name>GetView</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a413eaf760dd8d1860527894a8fc8fdb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NUMBERINGSTYLE</type>
      <name>GetNumberingStyle</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ad86feb9b8ac6c45b033b72ecd850e805</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetStartFontInfo</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a365b877459d11bc74324d7afba0f1c9f</anchor>
      <arglist>(FCFontInfo *pFontInfo, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>FCFontInfo *</type>
      <name>CreateStartFontInfo</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>acc977be241e696065d32bbd3e9258ed7</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetMultipleFontInfo</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a8466be785c1a0dbda5fc7a1e78c86975</anchor>
      <arglist>(FCFontInfo *pFontInfo, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>FCFontInfo *</type>
      <name>CreateMultipleFontInfo</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>ae34dab6df8108b1e21b322811ce8becb</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetMultiMeasureFontInfo</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a7e1384f993065336420d96c21edabb1d</anchor>
      <arglist>(FCFontInfo *pFontInfo, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>FCFontInfo *</type>
      <name>CreateMultiMeasureFontInfo</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a7164a8c1d93b3f0a6044d12b9bac3998</anchor>
      <arglist>(bool parts)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateDisplayedString</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a209198a92e6acfec652479fe36cf8e0d</anchor>
      <arglist>(twobyte measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CloneFormattingFrom</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a148da441e2c211c4b2cb5285610c3423</anchor>
      <arglist>(FCMeasureNumberRegion *pRegionFrom, bool score, bool parts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMeasureIncluded</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a722b15339452f7235c2b1e45c6da18cd</anchor>
      <arglist>(twobyte measureno)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignAllNonNumberedMeasures</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a7029c536b02c0eb11039a1a17e85d186</anchor>
      <arglist>(FCNumbers *pAllNonNumberedMeasures)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetTempNonIncludedMeasures</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a63b0ccbb878e2089d385de50856a0f9b</anchor>
      <arglist>(FCNumbers *pNonNumberedMeasuresToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_RestoreTempNonIncludedMeasures</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>aac580b7783da509179e695a99cd3445b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_measure_number_region.html</anchorfile>
      <anchor>a649bc7def6cf8d757bc477be65c66cc0</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMeasureNumberRegions</name>
    <filename>class_f_c_measure_number_regions.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCMeasureNumberRegions</name>
      <anchorfile>class_f_c_measure_number_regions.html</anchorfile>
      <anchor>a346d25567b1ebed33c5cc1e5cfb8d541</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_measure_number_regions.html</anchorfile>
      <anchor>a04940bb5afc80586d93777d9d59e10e0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCMeasureNumberRegion *</type>
      <name>FindMeasure</name>
      <anchorfile>class_f_c_measure_number_regions.html</anchorfile>
      <anchor>a4a4afdfb54c054d7d05b304a07ed5b4c</anchor>
      <arglist>(int measure)</arglist>
    </member>
    <member kind="function">
      <type>FCMeasureNumberRegion *</type>
      <name>FindByID</name>
      <anchorfile>class_f_c_measure_number_regions.html</anchorfile>
      <anchor>ae663b5715f4d8fc9fb6957287e0b8d95</anchor>
      <arglist>(int theID)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcStringFromNumber</name>
      <anchorfile>class_f_c_measure_number_regions.html</anchorfile>
      <anchor>a9e379fc52ffeaad1af6f28c8c549019d</anchor>
      <arglist>(int measure, FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcNumberFromString</name>
      <anchorfile>class_f_c_measure_number_regions.html</anchorfile>
      <anchor>a323693c67dbf36bf1208a16b65ea09d4</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMeasureIncluded</name>
      <anchorfile>class_f_c_measure_number_regions.html</anchorfile>
      <anchor>a9c452a427bf3851d1c47e8da74a1375f</anchor>
      <arglist>(int measure)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStringUnique</name>
      <anchorfile>class_f_c_measure_number_regions.html</anchorfile>
      <anchor>a555392353ca457abbb4bc362d74f918f</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountRegionsForMeasure</name>
      <anchorfile>class_f_c_measure_number_regions.html</anchorfile>
      <anchor>a70a5d4367f7a49d53b8a71749f1cf157</anchor>
      <arglist>(int measure)</arglist>
    </member>
    <member kind="function">
      <type>FCMeasureNumberRegion *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_measure_number_regions.html</anchorfile>
      <anchor>a07bec2dc5b6ce47b3f0fdea99f6fa255</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMeasures</name>
    <filename>class_f_c_measures.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCMeasures</name>
      <anchorfile>class_f_c_measures.html</anchorfile>
      <anchor>a6124eab977b334312e6d7879ed5537e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_measures.html</anchorfile>
      <anchor>a6f44dfad39600b1efef3df46f780a35b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCMeasure *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_measures.html</anchorfile>
      <anchor>a9311b460afa7fb9650675f37b26f7efb</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadRegion</name>
      <anchorfile>class_f_c_measures.html</anchorfile>
      <anchor>a31c1e7985a73aa3df200f1659f66114d</anchor>
      <arglist>(FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Delete</name>
      <anchorfile>class_f_c_measures.html</anchorfile>
      <anchor>a78649b570abbb6da90bb399095475eda</anchor>
      <arglist>(int measureno, int count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Append</name>
      <anchorfile>class_f_c_measures.html</anchorfile>
      <anchor>a65e92e9a7ea178375247d7bb93139f33</anchor>
      <arglist>(int count, bool updatelayout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Insert</name>
      <anchorfile>class_f_c_measures.html</anchorfile>
      <anchor>a00134d8e2cefb3e1dbc68e0360b0588b</anchor>
      <arglist>(int measureno, int count, bool updatelayout)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMetatoolAssignment</name>
    <filename>class_f_c_metatool_assignment.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>METATOOL_MODES</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MTOOLMODE_EXPRESSION</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355afdaea1bba27ffb31aa52f8132222720e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MTOOLMODE_ARTICULATION</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355ae7835e68d5c68a82751f99afb983ed4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MTOOLMODE_REPEAT</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355abccc7d0053c0c238b767d3e5e5a948c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MTOOLMODE_CLEF</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355af9a366f83a2dc5c305d5b98a5b77a510</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MTOOLMODE_TUPLET</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355ac9d7cf3ff7e6835d5b5a7b52c07091c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MTOOLMODE_STAFFSTYLE</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355a8d0252cc276a0062ad9b07a4d5fbdc5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MTOOLMODE_EXPRESSION</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355afdaea1bba27ffb31aa52f8132222720e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MTOOLMODE_ARTICULATION</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355ae7835e68d5c68a82751f99afb983ed4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MTOOLMODE_REPEAT</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355abccc7d0053c0c238b767d3e5e5a948c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MTOOLMODE_CLEF</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355af9a366f83a2dc5c305d5b98a5b77a510</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MTOOLMODE_TUPLET</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355ac9d7cf3ff7e6835d5b5a7b52c07091c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MTOOLMODE_STAFFSTYLE</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a066f55661ffa8c0866fb0a839e131355a8d0252cc276a0062ad9b07a4d5fbdc5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>acda6ce6c66d9c6a255da1ef44100ab3b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>aaf213879ec8f8ed15bde0ab7fef6be8f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCMetatoolAssignment</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>ac8f84749a0220f3977b6e68e3d107a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMode</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a26c039d36e44a8363ee2a10cc9aa13dd</anchor>
      <arglist>(METATOOL_MODES mode)</arglist>
    </member>
    <member kind="function">
      <type>METATOOL_MODES</type>
      <name>GetMode</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>ac34ae7c92d3a1a9bdfcc52ba11c58f14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetDefID</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>ade7213ceb4471be7c880f0f9646150a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetKeystroke</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>abb8891b470b57899b991d4bf7784833f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsShapeExpressionDef</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>acf19894452b93b62c4a83fe9ca4bb91f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignArticulationDef</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a2190d23052f5a213f5e614cf431e0031</anchor>
      <arglist>(FCArticulationDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignTextExpressionDef</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>ab9c22e27b1d9d30357d5a8d63b775acb</anchor>
      <arglist>(FCTextExpressionDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignShapeExpressionDef</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a49a66d5ab1dc771803c0296412b81dab</anchor>
      <arglist>(FCShapeExpressionDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignRepeatDef</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>aa47cbe50838cf65ffb574715722fcf2b</anchor>
      <arglist>(FCTextRepeatDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignClefDef</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a4a1a67abbf1ce45776886c5178943777</anchor>
      <arglist>(FCClefDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignTuplet</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>ac65cfb33a609aafc40faec3df0027cc8</anchor>
      <arglist>(FCTuplet *pTuplet)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignStaffStyle</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a496325df851f40ed3be60a2633602cf0</anchor>
      <arglist>(FCStaffStyleDef *pStaffStyle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAsKeystroke</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a0633d0603c8e83177fc8808f70aff8cc</anchor>
      <arglist>(twobyte keystrokeslot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNew</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a3a9f5ae68508de81a5522a8e77742e03</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SaveAs</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a5d57bf47161eadc5d868ea092db9e2df</anchor>
      <arglist>(CMPER cmper) override</arglist>
    </member>
    <member kind="function">
      <type>__FCBaseData *</type>
      <name>CreateLinkedObject</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>a8b65665f6ad48d14d0c75e91a0c5d569</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_metatool_assignment.html</anchorfile>
      <anchor>aad2656f852c3af7da09391b2631a08ae</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMetatoolAssignments</name>
    <filename>class_f_c_metatool_assignments.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCMetatoolAssignments</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>a19643c859b6c9b2bbec438d83142917b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>ab63da24f0e0f4e8ad33d7aea4f8c0f8b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCMetatoolAssignment *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>a3d7d21020d4ad8c91feb163cb5807875</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMode</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>a91f3b99492809a4124bf339fc8087274</anchor>
      <arglist>(FCMetatoolAssignment::METATOOL_MODES mode)</arglist>
    </member>
    <member kind="function">
      <type>FCMetatoolAssignment::METATOOL_MODES</type>
      <name>GetMode</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>a933b19f086098c2ff6b25c8fb1efc5e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAll</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>a74ea5cdd27fc8c6b76a09ace4a151b67</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAllForMode</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>a7f8edbfb4d23623c8e65955dbe1c2178</anchor>
      <arglist>(FCMetatoolAssignment::METATOOL_MODES mode)</arglist>
    </member>
    <member kind="function">
      <type>FCMetatoolAssignment *</type>
      <name>FindKeystroke</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>a8c7d5b7e0e78701b9dff8d142dcd380d</anchor>
      <arglist>(twobyte keystrokeslot)</arglist>
    </member>
    <member kind="function">
      <type>FCMetatoolAssignment *</type>
      <name>FindDefID</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>ad8219fd367462659e261e123ca97b30c</anchor>
      <arglist>(CMPER defID)</arglist>
    </member>
    <member kind="function">
      <type>FCMetatoolAssignment *</type>
      <name>FindShapeExpressionDef</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>a1aaa269973e2c55a9f70181741a29aec</anchor>
      <arglist>(FCShapeExpressionDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>FCMetatoolAssignment *</type>
      <name>FindTextExpressionDef</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>a0fef05b1bf1f4f17b06db73523627d89</anchor>
      <arglist>(FCTextExpressionDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>FCMetatoolAssignment *</type>
      <name>FindArticulationDef</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>a542c9cfa4d0a39ea0e301cede612e93a</anchor>
      <arglist>(FCArticulationDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>FCMetatoolAssignment *</type>
      <name>FindRepeatDef</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>aafa3505449b8b310749f2f162cae1e2a</anchor>
      <arglist>(FCTextRepeatDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>FCMetatoolAssignment *</type>
      <name>FindClefDef</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>aa116b7aabf319f3011fa149caffe2d29</anchor>
      <arglist>(FCClefDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>FCMetatoolAssignment *</type>
      <name>FindTuplet</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>a1f791511248679179cb551fb6e92c694</anchor>
      <arglist>(FCTuplet *pTuplet)</arglist>
    </member>
    <member kind="function">
      <type>FCMetatoolAssignment *</type>
      <name>FindStaffStyleDef</name>
      <anchorfile>class_f_c_metatool_assignments.html</anchorfile>
      <anchor>adb026d566f3d83df5299ad1f131bdf6c</anchor>
      <arglist>(FCStaffStyleDef *pDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMidiExpression</name>
    <filename>class_f_c_midi_expression.html</filename>
    <base>__FCCellDetail</base>
    <member kind="enumeration">
      <type></type>
      <name>MIDI_CONTROLLER_NUMBERS</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>ade26225388de9c30f43d0861ec6dd931</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a26c821d48b24cccca255063473fc675e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a291ec0d736fcd94be021b299721258ff</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCMidiExpression</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a70733604b1c830888f23caf7977a5186</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>ac0dffd62ec8ada4ac8d35632a195fc45</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsController</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a6ce4061ad0942620f925428899114855</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetControllerNumber</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>ab76b9a36f610ada9677a672002e2e92f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetControllerValue</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a37f42a574c21f7299e2afa373768f2e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseController</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>adfed5a72b521afc975e14788272084b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControllerNumber</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>ad940f120b9c8706f0ded3a87a2883213</anchor>
      <arglist>(twobyte number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControllerValue</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a2bf07dfb24c8f31db7346e8b6ce4f408</anchor>
      <arglist>(twobyte number)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPressure</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>ab0dc4feb76bf4e4c43e4d0d8dee01e33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPressureValue</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a8a26c1efde3d263f0ed6c19b76e37ed0</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPressureValue</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a6c455ba3a621156f49db516baa84af27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUsePressure</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>af5191c0ad2a40bcf3c7961a81607758b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPitchWheel</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a92c96650450647dd29b9eb0b36a9b6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPitchWheelValue</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>ae0204b5b4971a9db6f74be8b3c2b268b</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPitchWheelValue</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a3a4587a44e2376aa3dd27a1c2dd52008</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUsePitchWheel</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a7589322a370a03b15f1e375ddbab1f7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPatchChange</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>abd79aabbc19f3688a4be58aa6f31cd4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUsePatchChange</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>aa9958494dab7be2cc4979d0d46c3db0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPatchChangeMode</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a2fe0cdf34cd90fdfa7aece56aa76e058</anchor>
      <arglist>(twobyte mode)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPatchChangeMode</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a6e3feb17f2684b44d73846b34195d520</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPatchChangeNumber</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a3cc768679282bc5d4ad4af73e974a3be</anchor>
      <arglist>(twobyte number)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPatchChangeNumber</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>ad051b5e5ef30414e406265c699f927fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPatchChangeBankData1</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a97e7b8d2f89a90c2e3de77a11389f1ec</anchor>
      <arglist>(twobyte mode)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPatchChangeBankData1</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a71b5c870d1cf2bb41a45ec6ec647fe1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPatchChangeBankData2</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a22c0b63b028d21a8fec5f02f870e637a</anchor>
      <arglist>(twobyte number)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPatchChangeBankData2</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>ae5b29ba25feca4dd0840e1d16b8d9309</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurePos</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>ae1e736cb0aeba6d23963dbff534578d5</anchor>
      <arglist>(TimeEdu32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_midi_expression.html</anchorfile>
      <anchor>a698d9322ce5c464aae150b4b6844e731</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMidiExpressions</name>
    <filename>class_f_c_midi_expressions.html</filename>
    <base>__FCCollectionCellDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_midi_expressions.html</anchorfile>
      <anchor>a7187551b778257d3ec1d6f5cf9eed9a5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCMidiExpression *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_midi_expressions.html</anchorfile>
      <anchor>a4446eddf95e3490288c99d78c7ac0749</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMiscDocPrefs</name>
    <filename>class_f_c_misc_doc_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="enumeration">
      <type></type>
      <name>DATEFORMATS</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a7f102b68aedaf3a59993da07dfc1a8c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATEFORMAT_SHORT</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a7f102b68aedaf3a59993da07dfc1a8c5a6680976773e15fb4f0841c2069404c93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATEFORMAT_LONG</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a7f102b68aedaf3a59993da07dfc1a8c5a909b6c965096a66849d891341b9f8271</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATEFORMAT_MACLONG</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a7f102b68aedaf3a59993da07dfc1a8c5a7ef597aae0dda218ff5a1ba8adae919b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BEAMSLOPESTYLES</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a32e6e3db5345b60d9c9e050ca5b292e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BEAMSLOPE_ENDNOTESONLY</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a32e6e3db5345b60d9c9e050ca5b292e3a5d7496b3898409b1e7f89f29136372a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BEAMSLOPE_FLATTENALL</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a32e6e3db5345b60d9c9e050ca5b292e3afd2a6ece6b8d96b17295ec41bd0f8c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BEAMSLOPE_FLATTENSTANDARD</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a32e6e3db5345b60d9c9e050ca5b292e3a22be12df6dda34e0dcabf03804278d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BEAMSLOPE_FLATTENEXTREME</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a32e6e3db5345b60d9c9e050ca5b292e3a9b585161ae5a190e770c7ca36a7f32ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PAGEMARGINSCOPES</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9af244843508ed920b0cb1bd45bea143</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGEMARGINSCOPE_CURRENT</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9af244843508ed920b0cb1bd45bea143a60676ef1606dda6a0cafb38040a8ccf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGEMARGINSCOPE_ALL</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9af244843508ed920b0cb1bd45bea143a798b14b696ed16e6483e31acd3d77a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGEMARGINSCOPE_LEFTORRIGHT</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9af244843508ed920b0cb1bd45bea143a09c57491e9db38859b42bf2d6eacd239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGEMARGINSCOPE_RANGE</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9af244843508ed920b0cb1bd45bea143ae99d9bdd435dd3e3c21eac6f36618611</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATEFORMAT_SHORT</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a7f102b68aedaf3a59993da07dfc1a8c5a6680976773e15fb4f0841c2069404c93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATEFORMAT_LONG</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a7f102b68aedaf3a59993da07dfc1a8c5a909b6c965096a66849d891341b9f8271</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATEFORMAT_MACLONG</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a7f102b68aedaf3a59993da07dfc1a8c5a7ef597aae0dda218ff5a1ba8adae919b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BEAMSLOPE_ENDNOTESONLY</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a32e6e3db5345b60d9c9e050ca5b292e3a5d7496b3898409b1e7f89f29136372a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BEAMSLOPE_FLATTENALL</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a32e6e3db5345b60d9c9e050ca5b292e3afd2a6ece6b8d96b17295ec41bd0f8c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BEAMSLOPE_FLATTENSTANDARD</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a32e6e3db5345b60d9c9e050ca5b292e3a22be12df6dda34e0dcabf03804278d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BEAMSLOPE_FLATTENEXTREME</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a32e6e3db5345b60d9c9e050ca5b292e3a9b585161ae5a190e770c7ca36a7f32ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGEMARGINSCOPE_CURRENT</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9af244843508ed920b0cb1bd45bea143a60676ef1606dda6a0cafb38040a8ccf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGEMARGINSCOPE_ALL</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9af244843508ed920b0cb1bd45bea143a798b14b696ed16e6483e31acd3d77a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGEMARGINSCOPE_LEFTORRIGHT</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9af244843508ed920b0cb1bd45bea143a09c57491e9db38859b42bf2d6eacd239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGEMARGINSCOPE_RANGE</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9af244843508ed920b0cb1bd45bea143ae99d9bdd435dd3e3c21eac6f36618611</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ae506596161e48917343ef89f602173d8</anchor>
      <arglist>(twobyte prefsNumber=0) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>acb005010e6da7885a7698ed171db0d55</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCMiscDocPrefs</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a811557a5df9bd0a28d811c25f41a93ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a468b8bb3f3b0b144466e16c46c737bb8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a920c74f11336d23441186fb934b72f88</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetExtendSecondaryBeamsOverRests</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aee4dce111709f0c58b9bf22981e908e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPrimaryBeamWithinSpace</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9d76c43b94ecb1b5d3d62ccd1c692e4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHalfStemsForBeamedRests</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a1bebd762a002024531cd43f2a5d2ecf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAllowFloatingRests</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a633541064b33fa314db8ec6878a0ed26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBeamThreeEights</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a5bd73b0307a887056e9913bbaa063456</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BEAMSLOPESTYLES</type>
      <name>GetBeamSlopeStyle</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aed64e3725e359711efd3c3dc4ab83bf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetExtendBeamsOverRests</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ad5e283120413e809b34252839792214b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBeamedCommonTimeEights</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>acb154447a5db9174c399ffb330ec169f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDisplayReverseStemming</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ac132eb6f9f90b6e59ec92ed8915d112e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIncludeRestsInFour</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a41299e5d0936219ab5ee944641855110</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDoubleBarlineAtKeyChange</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>add9cd168916e5c544d91960d823068a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDisplayAllBarlines</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ad28455b8d6d19354a32a005e52482e7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCloseBarlineAtSystem</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a2befa6db832285f43066ca6095a692ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCloseBarlineAtEnd</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a85f2c75b091e5f017262ff3f682ef5bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFinalBarlineAtEnd</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a053e1de307a907ad8581b79acbf64091</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLeftBarlineDisplaySingle</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aad3d02cef0c5566ea21f214c54f64130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLeftBarlineDisplayMultipe</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a0f642edb62a31537aeb576d101d80e36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNormalDefaultBarline</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a0bc0bda025207d6eeeccb1fb22d1c9c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAlwaysSlashGraceNote</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>af220edaf167c36c0eae3f0ea09f57442</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseStemConnections</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a22bb0e1aa7b70842de746eef2d82b248</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetClefResize</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aa2875c23c6cc9190ca5fc6c90d07023a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowActiveLayerOnly</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a22b0e8c83e8487d086f3be14a0626c6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetConsolidateRestsAcrossLayers</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a588c517e572f26656f2bfb72319d4012</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetItalicizeCapoChords</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9748cdd8ca9c5c5210b90c7cece6ea79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowFretboards</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aace3c815281bc53a08efb6f71600bbb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetMaxBeamSlope</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aa225b36d80963485d667f2d99d0b1384</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetOnlyFirstSystemClef</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>af5373f4cd73918df46aa99ad78e0944f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eClef</type>
      <name>GetDefaultClefIndex</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a133626167e45b5c36c9233daf6685610</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetCurveResolution</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a2d9f11563b67a8e7b4b9ea6b61ac5600</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAdjustDotForMultiVoices</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aa7eac79ab2d9d090f06642fae7cfb28f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetGraceNotePlaybackDuration</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aa3ef2667ec32014433654140da57ad1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetKeySigOnlyFirstSystem</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a10d7cd716f8b19f4d1c4ea6fe457ff9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetKeySigNaturalsInC</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a12b7a04453655cfae2005f61215027d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetKeySigModeChange</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>afb267ee7e0212352e270deab10250e1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetKeySigCancelOutgoing</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a2ae6e0229f23433869d290fa13e25b8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetKeySigCancelSwitchingSharpsFlats</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a6fab07e2cc75075492ca58d14e4953f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetKeySigPreserveOctave</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a26f993bcf80ba178ba59aaa38e7536cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTimeSigCompositeDecimals</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ae85ca2e4413f4521b54dd004ab9f1c6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAbbreviateCommonTimeSig</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aa4a0f311a52b4f7de795c03e10e9dcca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAbbreviateCutTimeSig</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a41ada7e1bb24c6d1506355798d0392d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCourtesyClefAtSystemEnd</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aa271e3471adb9498ff21042a743ffa4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCourtesyTimeSigAtSystemEnd</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ae4b4128c3d12dab16b64b92f556aa539</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCourtesyKeySigAtSystemEnd</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a851d0e7ae5146dac07518c8c1a015676</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSecondsInTimeStamp</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9b4a4cb19b68996f35b84f5a526883f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DATEFORMATS</type>
      <name>GetDateFormat</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a4b18bd15e6ad317ccb3f0867667f2730</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetTextTabCharacters</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aaecd1ace05efb1c24d160cdaec79d5b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetScaleManualNotePositioning</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a57fbf50004c11c2efa811f5e123bfdee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCrossStaffNotesInOriginal</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a209af0bffa90b497b78738743d5be843</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseNoteShapes</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a17ce755369c55368e7cb8e255bb64654</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu16</type>
      <name>GetPickupDuration</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a4c1d6e407853594d72fe370d4f118a0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetSpecialExtractionID</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a726defa1275c499bd15d01364186d450</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDisplayPartExpressions</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a4fa65dc3723eb0928d97afb827f65403</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetUnderlineDepth</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a28f9d9f7ca5c5e3c2538a7a67a2b3be9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetUnderlineThickness</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a67d15daf6bd90ee724cf4913617a4e31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetFretboardsResizeFraction</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aa77e6aff73cd6b64455e2b359664bad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetChordPlayback</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>af9249a82922107bb3bbfd2e7f72f29b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidSystemMarginCollisions</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aa4747b5fa8f49a460131d1d5fbc6b342</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PAGEMARGINSCOPES</type>
      <name>GetPageMarginScope</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aa80bb8699fdcbdf88fac12f26bea462a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetKeepOctaveTransposition</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a974861236071b5b56ec17e80ff7dbb0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlwaysSlashGraceNote</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ac45ca14c784b976516c0dfd4dba5ac23</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExtendSecondaryBeamsOverRests</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a24f977eb1d6da4ca301c03ee923184c0</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrimaryBeamWithinSpace</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aa9d428d5ef008282b9226156feff506d</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHalfStemsForBeamedRests</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a4502d11b13498d07308aea0560446986</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllowFloatingRests</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a8a4ecb469785a9c6a9ea6a6eb842beee</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBeamThreeEights</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a923de76b2d26f255de553f412250e31b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDisplayReverseStemming</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a92fa0eff326cf4e0a76afcb877f4b404</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIncludeRestsInFour</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ae338d4ecfb0eb1a4f4b57008494d9f5d</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBeamSlopeStyle</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a6b50b34adc05b05e4d676e02563b5c43</anchor>
      <arglist>(BEAMSLOPESTYLES mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExtendBeamsOverRests</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9359a4201a23d1761117ef1bb476f9de</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseStemConnections</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a1b6bf19fd0deb3ed9afd29a09f80fc78</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowActiveLayerOnly</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ac6aaa22572aeabdca14d7ffbd9c10bc2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetConsolidateRestsAcrossLayers</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a4de6813cb8fe117b9846dc016db9843f</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefResize</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a2c9e6462f57b37c546ddab0709c4dcae</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBeamedCommonTimeEights</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a5c003b5a5dd12e84658154a23e5a273b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDoubleBarlineAtKeyChange</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a76103d35cfc92cfa4a13a01e4a6d05a5</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDisplayAllBarlines</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a4716ee534af3d51c041520cb0e012c2f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCloseBarlineAtSystem</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ac5a16c24488ed76307f23aa1a43fbc5c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCloseBarlineAtEnd</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ae905808fa7779e825fdc938e66ec8ac1</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFinalBarlineAtEnd</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>abd1e9586620509105217107e3d180a89</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftBarlineDisplaySingle</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ac999ab1b72e08f10eee2d1e5d49c2b19</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftBarlineDisplayMultipe</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ac9ab70fb28b27d13eefa8f812009078d</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNormalDefaultBarline</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a5c9cd180a39e8f8fa4717fb033ea0a6a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetItalicizeCapoChords</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ae48d2df800e812d374c2989eaf2a6e9c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowFretboards</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ae967da40257d4adcccdf3271e14bc4a7</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxBeamSlope</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a3399ba3e1e0fbc1eb8c7c7eb6a3e14b6</anchor>
      <arglist>(Evpu16 slope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOnlyFirstSystemClef</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ad49664e386e022c1413b6d25b7695f61</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDefaultClefIndex</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a6f356b2b7f2740a1f9831a9ce66e0470</anchor>
      <arglist>(eClef clef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCurveResolution</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>acfd31f082f79ba8db1ce622dfc388491</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAdjustDotForMultiVoices</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a739113b2679de9b6c3517ba93a902874</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGraceNotePlaybackDuration</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a47d1e4ad9c6864037c701b31f1fc4db1</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySigOnlyFirstSystem</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a33416d11e61bc7fe04c171d00d2cd6f7</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySigNaturalsInC</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a4742acc66212f5e6ec688c2ff8e83b88</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySigModeChange</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a19863bf524bb33e4b0f29fa5a1eb5b7b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySigCancelOutgoing</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ae29a6c764762ae69d9a8e2af98e6f0a9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySigCancelSwitchingSharpsFlats</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a2e850ce8811de2cd3bbf9aada4dc6f35</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySigPreserveOctave</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a76ac458ca7715d8318dc5e365c281187</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigCompositeDecimals</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9e3fee17546d059a54f0aac9a41601e2</anchor>
      <arglist>(twobyte count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAbbreviateCommonTimeSig</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a02ca1f935ecbd5149fceb79c484df0c9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAbbreviateCutTimeSig</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>af2b97efa19964b52cc44fb3f536541cd</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCourtesyClefAtSystemEnd</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ae176f05c895b0a41598705db48e1fb32</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCourtesyTimeSigAtSystemEnd</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a89b201fcf79b45f368ba66b0b8eb0a2f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCourtesyKeySigAtSystemEnd</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a7cb9b87df0deee8315a7d1904cc13b7b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSecondsInTimeStamp</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ada0748c4c49998b382bb5fd27dfaebc6</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDateFormat</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a8f33917a46e0eec189f92e2ccec14315</anchor>
      <arglist>(DATEFORMATS dateformat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTextTabCharacters</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a56f08867e7e178d27142bcb7fdb108c6</anchor>
      <arglist>(int tabcount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScaleManualNotePositioning</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>ab8aedf5df3c31122319a8c0819264e20</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCrossStaffNotesInOriginal</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a844aacdd61a5550ec2a665b1634328c1</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseNoteShapes</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a6a203ba7dcf57d59bccd1f0911cd8eeb</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPickupDuration</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a55de4a71f3cd5c595ab7973e014219b4</anchor>
      <arglist>(TimeEdu16 duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpecialExtractionID</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a77b651469e43a9d29fdc5db5a05d5e6c</anchor>
      <arglist>(CMPER cmper)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDisplayPartExpressions</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a9d12c17855bfa58289abf94faae0c756</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUnderlineDepth</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a5ce859cc0ba6907620f0996575f7af6a</anchor>
      <arglist>(fourbyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUnderlineThickness</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a8c4aeb159c580bd1944a6541be6760db</anchor>
      <arglist>(fourbyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFretboardsResizeFraction</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a6fb2f193d4e2b9e491177cac01209942</anchor>
      <arglist>(fourbyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordPlayback</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a178ef43e6425d253f05aeb3c4623f64c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidSystemMarginCollisions</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a58205974ecbc23049f10e6ac4e8b9947</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPageMarginScope</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>a18cbfa013637cb11d7f83613ff5ae92b</anchor>
      <arglist>(PAGEMARGINSCOPES mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeepOctaveTransposition</name>
      <anchorfile>class_f_c_misc_doc_prefs.html</anchorfile>
      <anchor>aaeed98d1f8184b409cfa7a1913b5a23a</anchor>
      <arglist>(bool state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMultiMeasureRest</name>
    <filename>class_f_c_multi_measure_rest.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a73bdd330ca16b39d98e1c397a3b1e364</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a8eb0e4d2b2605ad2609c6f94e0f668cd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCMultiMeasureRest</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a31f4eecba1630e75e5b2934367222d38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartMeasure</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>aed5ed163670bd88f30007e7f92efdbab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndMeasure</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a7307e0fbbca5b8d532ce4cd208fe9289</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetWidth</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>aac2d84b7c07dd8f8e08b13557d0de0b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetShapeID</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a70e6ad48566e2d6c123a47d54c6a7a7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseSymbols</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>aa4b00700c636eaef5460199cfd725afa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetUseSymbolsLessThan</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a1622c3eeea5dc09839345b92e1a6cb7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetStretchHorizontally</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a5e26791e1c3819606526786aaa86a1d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetShapeEndAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a73107d3650c804e00e9a71575174ffa8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetShapeStartAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a11f6b2f4b0c68f9301893c11987879a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSymbolSpace</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a8cf80ec8e5a7a7dc490d8a13e9cd032e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartNumberingAt</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a6d1198a22611f1902f38d5f16e81dd9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetNumberHorizontalAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>ab9031601d086ed02f64364214016de8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetNumberVerticalAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a8964ef421db7cfe2280ece6169b03c06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcMeasureSpan</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>ad91371d2b0d96cb6209919d383cb4daf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>ad4ba73b440fd7efb4ef266a7816674ea</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartMeasure</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>aef109050dc8a6e9acd4dc97e104a42ac</anchor>
      <arglist>(twobyte measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndMeasure</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a2a831e3faa89538f25cf569d0c71cd9d</anchor>
      <arglist>(twobyte measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeEndAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a2f3b56ae2e692e8262775a1521bce384</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeStartAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a6ef84d68cd0ecf562773ccdbd531da80</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeID</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>aa3926fa53a9dacb8e9f0bc6017b30678</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseSymbols</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a673024a992ab79dece1addb6322d98e4</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseSymbolsLessThan</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>aad8cd15a76134d7a8baebee18dacae09</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStretchHorizontally</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a5aa04bc8f18ce4fb65b3af8d820bf536</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolSpace</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a9073addc904155def24f52545404d700</anchor>
      <arglist>(twobyte space)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartNumberingAt</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>abb089b364b9c0e7f7d8ea421d49f8e4e</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberHorizontalAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a0bde2d042220290a0aafdd187fc55f42</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberVerticalAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a834157dce52d36f17abd97b8661149bf</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMeasureIncluded</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a26474e5d23dd50a53b726f8e0bd5d29b</anchor>
      <arglist>(int measure)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsShape</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>ab7638c876369480899064be65938849d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrefsReset</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>a2952db0f30aa9a24b13f8c518f9d3fe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_multi_measure_rest.html</anchorfile>
      <anchor>ae0a57ec452f1b37cee564bfc9b78139c</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMultiMeasureRestPrefs</name>
    <filename>class_f_c_multi_measure_rest_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a0368ea68cd9cf92fa4a5e656a4faca83</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a771a9f41d49083ca7a7d60668fe2d733</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCMultiMeasureRestPrefs</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>adb38178ab3484c1431bcf60e5a2c2b1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetWidth</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>ac428983499cf41dcecc42157c2b50428</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetShapeID</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>ae48789d6ad2d96d7366bf66a3973b465</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetShapeEndAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>abd7a6e460fd8b15d535f9c532d88d7bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetShapeStartAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a4dec8f721ce248fb621ed6526f0f5809</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAutoUpdate</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>ac783b2abff1963da23bc58cfea908084</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSymbolSpace</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a5a5664466829099e6fe5c192f9f5287e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseSymbols</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>abae2f01f3ae051a0fe382a98145b285d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetUseSymbolsLessThan</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a7e3fac7666cf378ad11c9cdab39601a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetStretchHorizontally</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a62da394c6f4da54e7f291ef2ea5102c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartNumberingAt</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a78c44d9cda546523404178f4a45b0a37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetNumberHorizontalAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a8664fa27b64de1a4417f743dfdc9ff0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetNumberVerticalAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a066831fe0cf82c096d553c249979f121</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeID</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a295dfee311f547b6b33aa4f0ff984b31</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAutoUpdate</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a4b7217067e0a45b0ac9ba34aa341efa3</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolSpace</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a0f5202d7c4400632c9bb26a2d57c75cd</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseSymbols</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a9f5e957d16ead45f591adce18d4ec520</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseSymbolsLessThan</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>abc1efff5c1d4897ea10a44d8db12b189</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStretchHorizontally</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>aa004dbb7b617a2c62cca3aeef86eebee</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartNumberingAt</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a4c78182b2c2bbf61365d425f5d12a370</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberHorizontalAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a6bd3b563bb159283fee90333af817e59</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberVerticalAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a181539096e4834c3235be879a24b5867</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a3455d390db7ea05acab7e418af084e5d</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeEndAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a12a0f0e156e810890f163ad019e9d93d</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeStartAdjust</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a3bb3c89e25043d82ae03fde6bf592439</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChangeRest</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a7286c493835924737f20b575c852155b</anchor>
      <arglist>(FCMultiMeasureRest *pRest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CopyFromRest</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>ac1e9a97a61d1fe5062389f0b8c0a8fd6</anchor>
      <arglist>(FCMultiMeasureRest *pRest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_multi_measure_rest_prefs.html</anchorfile>
      <anchor>a0dd19578f01c8a9079c78731c896cc7a</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMultiMeasureRests</name>
    <filename>class_f_c_multi_measure_rests.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCMultiMeasureRests</name>
      <anchorfile>class_f_c_multi_measure_rests.html</anchorfile>
      <anchor>a2b52043925d73459342229f986fe7fad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_multi_measure_rests.html</anchorfile>
      <anchor>ae30af301483a84e61799ec65644f8970</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCMultiMeasureRest *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_multi_measure_rests.html</anchorfile>
      <anchor>aa38c676eeb964c125808ac0134a71523</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMultiStaffInstrument</name>
    <filename>class_f_c_multi_staff_instrument.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>af861f393ac5627e5122fbb845bf8ac03</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>a6d19681911e7df1fcaa90996b6fe75e6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCMultiStaffInstrument</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>af8d4b93df942196ee48510d28ae679de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsStaff</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>ab6ac4eab1bed6ec8854737a222cb9245</anchor>
      <arglist>(CMPER staffno)</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetFirstStaff</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>ad4d8f460ba160622ebf243db03b2cff7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetSecondStaff</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>a36101e1d93d56af34d2fddcb5cae6e0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetThirdStaff</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>aa60ef8dc152158b12ab7343feb344393</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eStaffGroup</type>
      <name>GetGroupID</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>ad1ecf273b413e14e8a1b07f8940a75df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFirstStaff</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>a2f5f382b059bb1b6bf33544b33e0c1a4</anchor>
      <arglist>(CMPER value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSecondStaff</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>a4706bce476608c86bf2fce90e9fc1325</anchor>
      <arglist>(CMPER value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetThirdStaff</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>aa3a8b89d4461dc821eba4b6176bfd52f</anchor>
      <arglist>(CMPER value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGroupID</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>aed306f46e5bc899fc715cbfe8c238986</anchor>
      <arglist>(eStaffGroup value)</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>CalcTopStaff</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>a1c1221f018e86c5545c5389d24dfd2a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>CalcBottomStaff</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>a29df43cca6cc40d1edaaee66cd830fa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_multi_staff_instrument.html</anchorfile>
      <anchor>a39ba68058a6ed3c0ea8d9c8ea06982dd</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMultiStaffInstruments</name>
    <filename>class_f_c_multi_staff_instruments.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCMultiStaffInstruments</name>
      <anchorfile>class_f_c_multi_staff_instruments.html</anchorfile>
      <anchor>aeb7f65e6465e9276e54c478abda04e74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_multi_staff_instruments.html</anchorfile>
      <anchor>ae70fe1f67fefbf00666c9e6fa6e52ebb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_multi_staff_instruments.html</anchorfile>
      <anchor>a821ea2ff7a33fa7317322086370a83e2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>FCMultiStaffInstrument *</type>
      <name>FindStaff</name>
      <anchorfile>class_f_c_multi_staff_instruments.html</anchorfile>
      <anchor>aba2ac81f062f4f1f59e6383ac413383e</anchor>
      <arglist>(CMPER staffno)</arglist>
    </member>
    <member kind="function">
      <type>FCMultiStaffInstrument *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_multi_staff_instruments.html</anchorfile>
      <anchor>a14104836c8ef51812338782697bd807f</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMusicCharacterPrefs</name>
    <filename>class_f_c_music_character_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a77b20cdb82c74652929d99fd120520ef</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a58a598cdd3c76b500c21f7b801ae538c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCMusicCharacterPrefs</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a76879ff2660414f4fcb436be1bd7b016</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ae28c4131fdbda9b4cf2c8f128642513a</anchor>
      <arglist>(twobyte prefsnumber=1) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a4e64d03aa1509d8d1692e3ff7eeba656</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolQuarterNotehead</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ac1438d1c54e86ba91724ee9665ec4edd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolHalfNotehead</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a76c3149dff7c6911bf0d8628e2d775fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolWholeNotehead</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2542b3209cdee186ccd1224e9596e244</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolBrevisNotehead</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ac5f14b9e9f7ea77138e76ddba13f535e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbol128thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2c969b3fbf37c0d6d9fc5133d9b4e038</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbol64thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a99b2dd485c7a91a747e5ee4c59f18485</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbol32ndRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>abb94483af48f30b29b299139d8937a67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbol16thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a214e47d1fafe67c613e92b63c8749958</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbol8thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a105fd8cb0fbad689176f954d9b1c255c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolQuarterRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aaa58cc13b1a63d95aa62bec8ba7c233f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolHalfRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a574da96483f8f5b92b42f504006fe7a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolWholeRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a9b9363691ed097a211e4cfe6a630ccf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolBrevisRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ade83f2967a4385d16c79147d49749054</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolLongaRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>afd033335a85e99134c6d19ca6af78bc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolDefaultMeasureRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a650b12fb2a7a50e480f37f5ea39dd5fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolFirstFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aecefa687255f203af25d9d773d84e4a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolFirstFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ac99c8cea29a9a26757db7f694fe45a9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolSecondFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>af66f9b0facc9fc0ba80d8914058ba6d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolSecondFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>afc4d980d4dbbdb6356f2d67ed985a4e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbol16thFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a0a7e2c6f707cdd8fb9bbcb9bb75bd21d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbol16thFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ad0a810000d59e3ba0391b1c27ad3c399</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolStraightFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a252e2c1c451dd6138f8528b1cc288ed1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolStraightFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ac56ecb8d92077e4d2b0205b1f331cb75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolNatural</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a6bbdeee4f12407d7121b1f908fb23f1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a378b023eee0ccf9dfbfd86039433318c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2d495eae9b59e62eca366d454c3ddefe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolDoubleFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ad4793ce4c409bdcbcf3a3e5ba3830cc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolDoubleSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a130857cdf942c89a167a26d1c882c766</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolParNatural</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2c4c0f36677523c9bba6d70d49dc0abd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolParFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>afb20d50c074db84e6a85d1b7bbd4adb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolParSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ae96c3e3a94b738348290d0dfe5aa93fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolParDoubleFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a159cef6a7f2692e80151e08b91f785ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolParDoubleSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a8f172daaed6df5c4beeb43e492c30243</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolChordNatural</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a78feea2112b1238ad9ca0b74b119b609</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolChordFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ab1272ebe86f9c34ad21c3097fdf54089</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolChordSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a651cb3454ab363987258ac26646d1eb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolChordDoubleFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a1c237c30b8f4b08a8ed5785fbd0e31eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolChordDoubleSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a0560c5c55b49a7a136cd7d94fc99740d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolKeyNatural</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a1f94f157eed0f36e5a4691f7894d11e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolKeyFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a6009471e94847cd67029b3d9eedb4612</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolKeySharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a3b785cd3d710c95fd79264115afcdec2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolKeyDoubleFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ae914be8f76bdf53f2f81e07e6296bde4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolKeyDoubleSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>af18542dfb043fc1a46cb4d3170038193</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolLargeSlash</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a1f82a54385d62a3a0d3ca89d6d0a9d9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolSmallSlash</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a1f81b14a36d64f92e0e1514dae1fb650</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolHalfSlashDiamond</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2bfdb4f5d936fea0139de3321c42d143</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolWholeSlashDiamond</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ad5e428a018cc1d1c6523dd5b36cdbc86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolBrevisSlashDiamond</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a127107bf85b8e01c9fc9e28d575fe03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolOneBarRepeat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a1a44a9f8077dd613965df491a44d837d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolTwoBarRepeat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a9adf0850e751b58e26426dbfdc3efcbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolAugmentationDot</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ade23c34e58c5c1bcaea7f13f6d127023</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolForwardRepeatDot</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a4e398b44ec1daff3a05585b3a76f689d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolTimeSigPlusScore</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a8e0906bc374b8eb1a0f4b628ecb54622</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolCommonTimeSigScore</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>abc90ebb008c9f44f8732dc7d02861a82</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolCutTimeSigScore</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a55727ad03ba72abff13b6cb16a9ad94d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolTimeSigPlusParts</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aef23d54ccdf8e1dab3a5cb29f7ac13bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolCommonTimeSigParts</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a3b65310105957322fd16823ea335fe58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolCutTimeSigParts</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a8ce66e6f502f982f55fc1347f5bd3f15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolBackwardRepeatDot</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a50ec03aa3b079cc55682dd8f751afa1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolTrill</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a766c047f35d3a9a64b75c93d4779b2b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolWiggle</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>af950e9e23c0aec9320b4b2641fc2bb5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolOctave</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>af5a0ca4c6e7fa406a36a8b4ce790c40b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolOctaveBass</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a7c4ba387403c8f289602cad159a11786</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolTwoOctaves</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a75a9f71fbfd14c7c6bb48a968e3ea6ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetSymbolTwoOctavesBass</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aee6e7332f6598df10b19c1a612c25e1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetDefaultStemLift</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ac957984f873c5a8c8073a1d1f009c48e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseStraightFlags</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2599678db7c1c8084d4b8076c81e6775</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalFirstFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ab1684be2308e49dbadd45dc490663468</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalSecondFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a8f9019a6860806f6d3c5caa5e249df15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontal16thFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aecfe1f79cc2c32916cf03f81c628e963</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalStraightFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>af1ef79f70e5bf935d008bd6b6d506886</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalFirstFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ab0398ae5ae6c3b9c424ba622b24390c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalSecondFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a14b21c8cf9ade54129770b900e6c5600</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontal16thFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a5cf957d44d2a9133af3cd2e3460b4f95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalStraightFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a0ab490981a5118acca1fd9be5c85b84f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalFirstFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ae6f9d3118df33f9e3279b35f57b54235</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalSecondFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aa994b280fce7069e2487088ca44e7f94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVertical16thFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a68e294874624011c672a2ff0fa75062f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalStraightFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a35b0618168b39cbe3a3b44681f995703</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalFirstFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ae7c8995b38969b119028756398e299a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalSecondFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a58f0313ae22c7e91540d4259e29e5455</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVertical16thFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aa3c63c3501fc4e694f1f797004edc67d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalStraightFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a415ecb377fc01c82fb6467c9febfb619</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVertical8thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a7131bf617bdb28ed5f8006533db46934</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVertical16thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>acbb36b249b286703a3816e6dbe96efae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVertical32ndRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a9c6aa2aebbe46d63b470dedf25142fd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVertical64thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a9dee028ca2f1696731f7b4474a9eac40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVertical128thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aa642ae59ee7b635117816821cc3eeff5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalFlagSpacing</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a53f9798e268ce94f94743a926bfe3cec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalSecondaryGroupAdjust</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>acbc8a7c9d290c7ff72e28682a0cef71b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalQuarterSlashBaseline</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aa2a73d7835c14012f6318840ef5fc8ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalQuarterSlashStemLift</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2ad4fc68a386fbee94ad90ac98b4ccd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalHalfSlashBaseline</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a6157da6cbd7dd9fd9021a322ff44cb52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalHalfSlashStemLift</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a1e89224f71bdbbc827ea18e67fdbfd13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalWholeSlashBaseline</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a82c509ab70accf9bce16edb20368b0cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalBrevisSlashBaseline</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a5e664ed11b7ac9b907a692934b7fc00c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalTwoMeasureRepeatOffset</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a61eae8da3ae73b3b9469606b13c6d2a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolQuarterNotehead</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>acd9ae84d12f1369243068bbd6180d809</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolHalfNotehead</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ab26d141e4bfba7a47bfb8f264dab4ba7</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolWholeNotehead</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a70a76e3d95409ab1eea8419d5c3e38ac</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolBrevisNotehead</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a96af1587698afdb3523e497696704b97</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbol128thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a1061a3affc05e14ace768a3ad7c75cf2</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbol64thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a4495e7e0d0e031de60122a34233e3d14</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbol32ndRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ac9aa64910fbc0809722b97f834c54790</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbol16thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a47910b362f58dbbb37c5f67378ee8e20</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbol8thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ad482473af588619527c69a61e3f91bd7</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolQuarterRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>addb1d493725646f20f71cd634509beaa</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolHalfRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a1be2fa3818877d389c2e1b5255c7977f</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolWholeRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ad6008ae5b05437a0ce21897ca3ab3c50</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolBrevisRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a5116b313a96bc76306b67139b76610fe</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolDefaultMeasureRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>add2864382493a12e02e86052f14d5780</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolFirstFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a79706746084452b308e28947529b9cd2</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolFirstFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a476d7aa9f6302b2fcc2fed4c1756cc85</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolSecondFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ab2be282198b21775bf67821196246dc6</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolSecondFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2d1c62714decf40b2a0696ec13199828</anchor>
      <arglist>(eUniChar32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbol16thFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a593525f019e5f7619e9ecf1925851323</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbol16thFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a3c173cbcedfbbafe7750b229081efbe7</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolStraightFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a4a5fd4d6b1072ac63159d3d48f1a0512</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolStraightFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ae786b823532b6d9559a990bb8e931528</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolNatural</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ab042732d5bb936ce6a67b8581cbe191e</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>acaaa3ee75dd66ddaf82dfbce11d2b32f</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>adbb1feeab628e082f36d10f0703c24d0</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolDoubleFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2915936842868641b03d27c8d33d96e7</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolDoubleSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a0d0e15bb8671cc053bfa5b1b5f55c0d6</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolParNatural</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a9901bcd2541f09199d731d5f10238165</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolParFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a774b3bd607c755296f4de68e24e2d7b0</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolParSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a3c9e6cf8545027bff10067e3e9fd8b18</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolParDoubleFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ac72e3b0836f00fe448bb066bc144b123</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolParDoubleSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>afa11156fa636d49d8ab676ddd76fbf7f</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolChordNatural</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a53ccf11fdba7af58540c765724d1d754</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolChordFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aff82d1eac6246ee62353abeaf7d2a29a</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolChordSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a96b35cb681871d16c91d403f57de7d26</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolChordDoubleFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a7de9399d6f12e6a104024684e9a2635f</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolChordDoubleSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ae6d3ada34902e167bc28676549c29121</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolKeyNatural</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a9523e90a4ea4b8460ccb974b036ca68c</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolKeyFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a3ac52406b3cf46e75093b35abfe1e06f</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolKeySharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aed969a3127ed39a6d88a800f31cfe7fb</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolKeyDoubleFlat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>abb29caf32a6ce939338e016db6c67ee1</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolKeyDoubleSharp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a71aaa2c8a87e0ce8b14e100dfc915219</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolLargeSlash</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a9acf6fb3c046bbeb5d3a20fae361a5b4</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolSmallSlash</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2b8e518c3090564cadd2a0d346530ef0</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolHalfSlashDiamond</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a07625fb1d8af47919db887bd93aa7665</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolWholeSlashDiamond</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a1ff62a247b9038cb5037d8d5dd59c95f</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolBrevisSlashDiamond</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>af24c9e85cb48e2ecae88670d8b5b6300</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolOneBarRepeat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a1dd7a0b55c15a15e1bae362113cca7b4</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolTwoBarRepeat</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>affbc048c0fccb07b76c7f4754d213651</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolAugmentationDot</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2bd3c38de58396df30baf3a736f60fd3</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolForwardRepeatDot</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a4de904563ae18b575472eea369cc080f</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolTimeSigPlusScore</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a61c6ba357b84e1ea3c6c295927133328</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolCommonTimeSigScore</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a817430c5385bca95045bd1ff60ef63b7</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolCutTimeSigScore</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aaa9bc8211f0211446bb2cc6558ba3e72</anchor>
      <arglist>(eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolTimeSigPlusParts</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a12a705eb4b45d3b277055980036bac51</anchor>
      <arglist>(eUniChar32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolCommonTimeSigParts</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ae1f684a5058cb30450a0fdb8cebd731e</anchor>
      <arglist>(eUniChar32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolCutTimeSigParts</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>af9e375039571f35adf244d5344c3e988</anchor>
      <arglist>(eUniChar32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolBackwardRepeatDot</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ae7e88efe5c0e2aafc3af33b943123bf3</anchor>
      <arglist>(eUniChar32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolLongaRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2098eb7ffce29d0256a9d6aa95554b43</anchor>
      <arglist>(eUniChar32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolTrill</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aa3f0fe894b397f2ba8e3df886cf56e7b</anchor>
      <arglist>(eUniChar32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolWiggle</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a9badf2c1c0b7d1b94e1db95827c66d5e</anchor>
      <arglist>(eUniChar32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolOctave</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a8e014f4cabc87dac0ce2e59daa282425</anchor>
      <arglist>(eUniChar32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolOctaveBass</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>af0e87b65b0f9a71fd65842a4e6c34c02</anchor>
      <arglist>(eUniChar32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolTwoOctaves</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a3941c1239a0999a0b8facfb30c6f8928</anchor>
      <arglist>(eUniChar32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolTwoOctavesBass</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ac82d4bbbde783fe18c15c4b443dab718</anchor>
      <arglist>(eUniChar32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDefaultStemLift</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a48725b993d4bfe79c0b797237aabded1</anchor>
      <arglist>(fourbyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseStraightFlags</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a3eebacb8f71d4b8e987d3204d6cf6a0a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalFirstFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ae867d6a86fd7c13a7cfc30e8dec5d05c</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalSecondFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a9cdb884f59c7ab7613390bd2821dfdda</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontal16thFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aec54a8d41f4debed4d500443f4208568</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalStraightFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2a52a6e5033fb70568d7f9df662e3086</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalFirstFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ada98c52e597634d4822e5eaac1155295</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalSecondFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aa3cc46dffff1c35aa959f6d6efbd899b</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontal16thFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a44875b1cfdd1df7236c5103a917b3c91</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalStraightFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a96ca05a88c53e728177a88f3d181595e</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalFirstFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a6821135360709f33b44899721781dd74</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalSecondFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a3f92637daa44ecf366909f4fd9ce7ba5</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVertical16thFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a63dd2ba00f11cfe79ab41ad43fba79cb</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalStraightFlagUp</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>adb4f894fa2d15decbd439a227972a307</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalFirstFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>acb96cc0ac872665319d0a66f0da5c6bc</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalSecondFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a4e9f517de408a6b9d7dc5e130ccd8673</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVertical16thFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a1fa32f08794ea992fc56e7d5825f8ee2</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalStraightFlagDown</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2d25483e7aed448903ec1c301acdc9f1</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVertical8thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>ad36d6f9849af3a4f216d94be922b62cf</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVertical16thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a0aa685741246a5a2f174dfa684bb0059</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVertical32ndRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a66772e6226ca051c8a0f7ab6dc311619</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVertical64thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a62413bd693e77bfb84ce7679a5515814</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVertical128thRest</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>adebea8ec6572076f020145b8fd350e5f</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalFlagSpacing</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a5b0b3e5ca0f3effada3ec8817f3b5187</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalSecondaryGroupAdjust</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a2998caa0b7f5035ee7f7ee42f3ec58bd</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalQuarterSlashBaseline</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aac39d6de4d5e51f1601efc510244e1d2</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalQuarterSlashStemLift</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>af3511ba1516a827c915ee5c66bd3dd2c</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalHalfSlashBaseline</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>aaa8cef1f4c9da975872d76fccbcd84b2</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalHalfSlashStemLift</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a0c7845e1e30a808c71428529740ee93f</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalWholeSlashBaseline</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a90911c36bbd12fcf840dbf0e56201d92</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalBrevisSlashBaseline</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>abdfc227e8e6da165b206a392f2c142cc</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalTwoMeasureRepeatOffset</name>
      <anchorfile>class_f_c_music_character_prefs.html</anchorfile>
      <anchor>a12a7d55c524013f4ab90a10bd5f24403</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMusicRegion</name>
    <filename>class_f_c_music_region.html</filename>
    <base>__FCBase</base>
    <member kind="enumeration">
      <type></type>
      <name>REBARSTOPS</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_NONE</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632ad1fc3416ec0a3ede3cf863b2b10e4cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_KEY</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632a6c723349f495e71989e48a29c0bdf6d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_TIME</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632a17d7393756d08d301d60ddaf82189a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_REGIONEND</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632a7510ebef218235af41e19f08863ee983</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_SPECIALBARLINE</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632a2f4226915b7bc7c3b66795cdfb3413bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_EMPTYFRAME</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632a146cba2e5f7fbd82525e38a57cd104e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_EMPTYFRAMEAFTERREGION</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632ace647f175460ee35ffe099b49a41a3bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_NONE</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632ad1fc3416ec0a3ede3cf863b2b10e4cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_KEY</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632a6c723349f495e71989e48a29c0bdf6d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_TIME</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632a17d7393756d08d301d60ddaf82189a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_REGIONEND</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632a7510ebef218235af41e19f08863ee983</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_SPECIALBARLINE</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632a2f4226915b7bc7c3b66795cdfb3413bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_EMPTYFRAME</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632a146cba2e5f7fbd82525e38a57cd104e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REBARSTOP_EMPTYFRAMEAFTERREGION</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a392f07494b7401eb8b9bcfa75fe65632ace647f175460ee35ffe099b49a41a3bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>aaa33a0f0491a302fbdb701d4d16ab6c9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCMusicRegion</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>af9e3cefe0e517aab9561c7caaa16d092</anchor>
      <arglist>(EREGION *pRegion=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCMusicRegion</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a504e4168fb59b50762ea1a2a920d18de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssureSortedStaves</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>ae096593215dc884ecd89c4f2ef4156e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a6c4bc6ee5784367b5bea67b66143fe92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>ad7a65452b16157425d8117968f432490</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSinglePos</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a4f3405c2cedd989016d1d18c2d614c53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMeasureIncluded</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a8d8aa6dab37a9688a158f4efac24d76e</anchor>
      <arglist>(twobyte measureno)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAbsoluteEndMeasurePos</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>abfa0755c84807c3cdd948444001ab128</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFullMeasureIncluded</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>aa3609d063fdbbd219fe65e8ebc160d8b</anchor>
      <arglist>(twobyte measureno)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStaffIncluded</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a250558241c1bc28ca09e7af2e261e193</anchor>
      <arglist>(twobyte staffnumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSlotIncluded</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a6cf72ed5d6b0e20b49714a8abce72426</anchor>
      <arglist>(twobyte slotnumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMeasurePosWithin</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a8f7848a024954786352420e421f74256</anchor>
      <arglist>(int measure, TimeEdu32 pos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStartPos</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a5a7af0b69c3d69a782400aa551bb6f6c</anchor>
      <arglist>(const int measure, const TimeEdu32 pos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCellPosWithin</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a1d0549d2fa30ac696dd9b4696f684083</anchor>
      <arglist>(const FCCell *pCell, const TimeEdu32 pos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdentical</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a94e8982807fe5884b5287072733ec7d1</anchor>
      <arglist>(__FCBase *pCompareObject) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEntryPosWithin</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>af6f475d97e28a68fe366c1a23d6f0512</anchor>
      <arglist>(const FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPartial</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a574a901095bd0a3597f917d6fc1507a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMeasurePartial</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a5062e381f27582baa7dd42a55eb087bf</anchor>
      <arglist>(eMeas measure)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOverlapping</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a05e2989d734beec0f8314a760e4539bf</anchor>
      <arglist>(FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFullDocumentSpan</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a5aea330fc9ff46858e70a3a9509f73d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLastEndMeasure</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a155a009fb00cdfbff5c3cb72b9a44ef6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetFullDocument</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a1e848a79eeaa913baa5ebe0d4d514eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetCurrentSelection</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a2790b7e0bd1ce7f98195542309dcdf49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEnigmaRegion</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a28dc6911d9a87f528c697f67bbcd8435</anchor>
      <arglist>(EREGION *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRegion</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>ae53f857bd8c2079c6263b168dd02d81b</anchor>
      <arglist>(FCMusicRegion *pSourceRegion)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetEnigmaRegion</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a9547efad29c4da1d0a24e6f46fad64f0</anchor>
      <arglist>(EREGION *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartMeasure</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>af2c9ae2aa14e4980c78f74f339b952fb</anchor>
      <arglist>(twobyte measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartMeasurePos</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>ae15bf5db1dacc2d5006c0d32d4cdd7fd</anchor>
      <arglist>(TimeEdu32 pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartMeasurePosLeft</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a76298e35bb20516b5b5fa3bd1c5cb0d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndMeasure</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a7340b896edadecb807de3da044aa3697</anchor>
      <arglist>(twobyte measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndMeasurePos</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a9a71de589ccc8078e0e540ee03a03221</anchor>
      <arglist>(TimeEdu32 pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndMeasurePosRight</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a1afb2757d239fd46346935a0c7b51027</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetFullMeasureStack</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a747b17fe73de96cadf09a4ed584242ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInstrumentList</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a772ba17d9678ea5e556234d821e14131</anchor>
      <arglist>(twobyte list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartStaff</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a8404d639c954716e69c55cab5df01f02</anchor>
      <arglist>(twobyte staff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartSlot</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a2f11faeac7b4547be5502a707eabad37</anchor>
      <arglist>(twobyte slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndStaff</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>ade43b829b9769190f32ceb3b59de56de</anchor>
      <arglist>(twobyte staff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndSlot</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a7eeb1ade07ea0c3d182f44ce8582d227</anchor>
      <arglist>(twobyte slot)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartMeasure</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a1d6a10cace59a02aa1f608b7a7233852</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndMeasure</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>ab87654217635dcd81508f40ed1441591</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetInstrumentList</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>acfee4dd2ff17cbe1214205d02ca132fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartSlot</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a284228b0ff83cb3675f8f24b44b7b555</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndSlot</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>acf5396bb33e3aa047b4303198dad04ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartStaff</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a6a6af121e06efe6d5ee42dd551cfdf00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndStaff</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a25a227604ff1e622b724c430b21a5e5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetStartMeasurePos</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a3662e9efccacf8c36241b7337e83d768</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetEndMeasurePos</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>ac3a5400c3fdce9dddb950791fccf12b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcMeasureSpan</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a9455de88428b9a88ec3ccad2a68a820f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcStaffSpan</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a733f81973f1ebd29a1d3155bdf88f6ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcStaffNumber</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>abcf768812ffb0e878d7a04b285621ce2</anchor>
      <arglist>(twobyte slot)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcSlotNumber</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>aab63b44742eb4db7bb98c93510bca67d</anchor>
      <arglist>(twobyte staff)</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>CalcDuration</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>ae23331ae483d34cbe7c2b247deb65c65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetDurationOffsetLeft</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a8116dc90722dd6d77304449138a71dd1</anchor>
      <arglist>(TimeEdu32 durationoffset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetDurationOffsetRight</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>ad6cdf331d895326c7c53ca4baea0e96b</anchor>
      <arglist>(TimeEdu32 durationoffset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCurrentDocument</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a1863a432132e9357d5b8ef063da7d0b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInDocument</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a7a26545423a024346dd28fd39c9d5f20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertToGlobalInstrumentList</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>aa3ada7ec8ba6b097c3bbe25936d3c264</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachStaff</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>aa97fdd8c8d79c754346c8aced7345485</anchor>
      <arglist>(FCIteratorHandler *pHandler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CopyMusic</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>af179f0b3a52979edf69a0e66d5aa9f34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CutMusic</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a07a28341defab97bbb4e0fd0f15f1818</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CutDeleteMusic</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a4daca5b0cccd1d9f559ecead1f47b3fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PasteMusic</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a1185d41a05c315cec1a3e623cb3233ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReleaseMusic</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>aaca9337c24c1e66cb3dc6c91f948a67b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Redraw</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a0ae5e2ef221809122948d3ef92fb8b36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RebeamMusic</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a22e306aec956937a7d79f5d6555de9ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RebarMusic</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>ab3c66470d4999b9dc6cf5b6ff70e1615</anchor>
      <arglist>(int stopflags, bool rebeam, bool padwithrests)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MusicMassMoverFrom</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>aba3db4c327b1ec01261a759453d57c3d</anchor>
      <arglist>(FCMusicRegion *pSourceRegion)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddMeasureOffset</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a493a2f8b45895b10209f2bde8393a54d</anchor>
      <arglist>(int offset)</arglist>
    </member>
    <member kind="function">
      <type>FCCells *</type>
      <name>CreateCells</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>ac60e2e8a33221b9da272c4e4949c65aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_music_region.html</anchorfile>
      <anchor>a97557f5700ad859d17e9ba021ea8e8ca</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCMusicSpacingPrefs</name>
    <filename>class_f_c_music_spacing_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="enumeration">
      <type></type>
      <name>GRACENOTE_SPACINGMODE</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a4caf2d43ba2036a94f6a7ac352add600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MANUAL_POSITIONING</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>abb47d9cae04de44a929fb830fe040199</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UNISONS_MODE</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a5211b17aaca4cbd75bbda824bf78b79e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a96d9d86f167efca313078315b00074f0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a753278a784f0c4b7913215fbb041ebc9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCMusicSpacingPrefs</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>adc9e6c4f83b080106314b8da8702559f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetScalingValue</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>ad1b94b8ec83fce61f1a00a0617b98e57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetScalingFactor</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a4dd86b18feefe65708078200fe8c6668</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetMinimumItemDistance</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>af7bdd0f6d67c114da07e0a0c7136e9a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMinimumDistanceWithTies</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a2fc9455b85b1d6c1a2491fc887195c02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMaxMeasureWidth</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a11d85144df2a3034866941810b5af801</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMinMeasureWidth</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>aa043504446ee6e88bc62d141973f3e15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidArticulations</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a02eb1b8631c07bb16aab5608ba3602a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidChords</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a65ee57654f555a9685f85087f834bdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidClefs</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a5b83cc72c642c339e5d21774933a1137</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidHiddenNotes</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>af707b9c03d7e2ecd3a856d2a35e4aff0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidLedgerLines</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>aca7921910ca0aff4ca3760d559b1201f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidLyrics</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a0c10fd04feb2c78ba2b351c621cac7cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidNoteAndAccidentals</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a69548d5f027fb903df4db18e58b1fd70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidSeconds</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>aeb3345bee41c0f600d068ffbe6c2419d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetInterpolateAllotments</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a435d9acf8b6071183522f1b1ca43c5fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GRACENOTE_SPACINGMODE</type>
      <name>GetGraceNoteSpacingMode</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a9300773752536b47963e217d38147e51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetGraceNoteMinDistance</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a7e269614c0237f5f18b055023b626af9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MANUAL_POSITIONING</type>
      <name>GetManualPositioning</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a5e3bee706198ae859b13fcb9f46cb40b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UNISONS_MODE</type>
      <name>GetUnisonsMode</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>ab3723d294bfbbe0a01e8ae71ccab34a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetAccidentalsGutter</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a5cd93bb42ddef43e24f036537bcc3055</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTiesGutter</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>af28c6a6f096f47639087f2a8142fc5c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUsePrinterMetrics</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>ab6cf3e6b93b07cf741a896f15b2c3bce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseAllotmentMode</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>ad38ab046e44685aab7b146111da6948e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetScalingReferenceDuration</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a7661f98776c536f6e2c5955d2d24fea0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetScalingReferenceWidth</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a65923ec28faa2b440c59455727b272b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScalingValue</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a0ba0b610685ae91362f7d059a892cd3d</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScalingFactor</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>af0fba0061b610a8d92a8303935514f91</anchor>
      <arglist>(double ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMinimumItemDistance</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>afe74deb6b60bd1b1984f259964e3e6ff</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMinimumDistanceWithTies</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a17517918c6dee1739d926436d55af1dc</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxMeasureWidth</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a6e021de64d61a7ca188fa340e7876546</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMinMeasureWidth</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a9d4fee157961d5b05dbaa782e01d633d</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidArticulations</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>aaad24bf8e5b53af51f5a83a4a4c5a572</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidChords</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a18def6d09dc785df0201afee45c2db4c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidClefs</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a7d436acb24dfd8eadfe178098f034d2b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidHiddenNotes</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a8d0e68839b07ad23ba90fe9f539fe22a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidLedgerLines</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>aeed99a37db30c68f187c4604c6a120b0</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidLyrics</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a79fdc6c3ba819c79b8aa97a556927f61</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidNoteAndAccidentals</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a3cfecc4d3de0680db8e34ea943dc02f0</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidSeconds</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a5acb1c81e4b77534aa4ca6f34d374535</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInterpolateAllotments</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>acef1340a52ce2c8df90921e4e2f591a9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGraceNoteSpacingMode</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>aae184a0b632dfc4f5976efc0e4d4039f</anchor>
      <arglist>(GRACENOTE_SPACINGMODE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGraceNoteMinDistance</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a8d0e5afca6399a25d214cff57911ea55</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetManualPositioning</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a192fd9484ce289530fc78736055029b3</anchor>
      <arglist>(MANUAL_POSITIONING value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUnisonsMode</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a54c194741416b883653c43d146f26ecf</anchor>
      <arglist>(UNISONS_MODE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAccidentalsGutter</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>afd4c604ac44b0953ebc7cd30252f7e01</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTiesGutter</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a0a63525b43212bdd06fbbf94bf710a70</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUsePrinterMetrics</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>afebe3d6c6f51f00c978a09704668d723</anchor>
      <arglist>(bool WINCODE(state))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseAllotmentMode</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a9df621343361a1b7d08880cc4da91d13</anchor>
      <arglist>(bool allotmenttable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScalingReferenceDuration</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a3b27557014b02efd4fd81702a182c84e</anchor>
      <arglist>(fourbyte duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScalingReferenceWidth</name>
      <anchorfile>class_f_c_music_spacing_prefs.html</anchorfile>
      <anchor>a81d6c3f754df99e4c173086b3e950730</anchor>
      <arglist>(fourbyte width)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNote</name>
    <filename>class_f_c_note.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>ab34953584997ea457e81e360e1f6cd95</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCNote</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a6b17fd274077aee7c4aed09d6137c9eb</anchor>
      <arglist>(int index, EXNOTE *pexnote, FCNoteEntry *pParent)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>GetEntry</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a93baff3e7c5594f4888e0f051ba0444e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAccidental</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a9a40faf8a65d5f6a26c0ad78c1d82a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAccidentalFreeze</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a9e1343ce513606e24e7abc9165426cfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAccidentalParentheses</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a5066d572d0ff334c24cf37712f7e720c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetDisplacement</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a6d0dce4676c9a878141df3c4adcf6f9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLegality</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a59f4551d30c32eb17b194575d853da56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRaiseLower</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a3196a201b7df6f0cddc9466e5392e490</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSpacing</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a739bc77f2af1f4750caed4b0e024de9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPlayback</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>af6a873c03568ed610f1caa6177d51897</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTie</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a5f58beeebeed31e4c8567006a1b18583</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTieBackwards</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>ac35fab5638585d1b26e4c0e66bb957ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCrossStaff</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a969447b0f2f1e18ab08852f4fcf868b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDownstem2nd</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a85ebf01338ff3fc35b7403b7133c9745</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUpstem2nd</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a25a3ea7420fe6be8b2ef65bd239a16e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUpstemSplit</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a8b5b8e4f84e8bd849fbb871f689b0a1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eNoteID</type>
      <name>GetNoteID</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a34d4f3eaa41054f60bdcbaab4aa2171c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNoteIndex</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a57a6e93496bc87684dd239cda4dae4ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetString</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a7466b4cda0c3a8da68bd1b09a15c6f38</anchor>
      <arglist>(FCString *pString, FCKeySignature *pKey, bool simplifydoublesharp=false, bool writtenpitch=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcAccidental</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>ad03a5d0ae8c3af5ece0b068d4ad6820c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcOctave</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a84461156051f9c9e2c2935bbbe94644d</anchor>
      <arglist>(FCKeySignature *pKey, int transposeinterval=0)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcWrittenOctave</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>ae0061fa3c15477907aab68d243cc7159</anchor>
      <arglist>(FCKeySignature *pKey, int transposevalue, bool simplifytranspose, bool chromatictranspose)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetString</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>adad2add118f7e8656fdbf295293bef69</anchor>
      <arglist>(FCString *pString, FCKeySignature *pKey, bool writtenpitch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAccidental</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>aad59a2cedc99bb5b30b3d3a0b0807035</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAccidentalFreeze</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a7adb6db19f3d75a7a9b507076e9b5d1c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAccidentalParentheses</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a95e79a7b444841a2dc364ed204d9a614</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpacing</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a3034e448daf83d7b34ff0b108128807c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlayback</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a0dc3da029c4005982caa1db709abbc7d</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLegality</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a718b2f936b2d818365f0b61dcdab6bb6</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDisplacement</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>ad61031dd5eb056e5d13af4745a669cd1</anchor>
      <arglist>(twobyte disp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRaiseLower</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a659febdf56a67974aaa4fe6672bbac8d</anchor>
      <arglist>(twobyte amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteID</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a4f851f5b80bcf5b994f50525868e72a5</anchor>
      <arglist>(eNoteID noteid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTie</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>ac608fd6967220267ee53af0261a5e76d</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTieBackwards</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a5019aab394a57e39c1a849ac9dfa05d5</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCrossStaff</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a22cf7a17c4e01d74c85ceb394a3d6f68</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpstemSplit</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a836c55b377a55de5a801f090d03a342d</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcOnLedgerLine</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>aa12f2adc55da3ca2b5ed7ca77fce176e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcCrossStaffNumber</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a007bedff08aee89bced3a7fcdb0ef810</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcRightsidePlacement</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>ad49e5f4d4b8ce0963a11fd30551ae88e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcNoteheadWidth</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a882c66a5c41f953324b5a1715ce45b04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcStaffPosition</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a836b23c10e825d3f6d3303fa096a9f31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>CalcPitchChar</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>afccfc6f41753b81e40313d6105d7fda0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>CalcWrittenPitchChar</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a5dc2452b4f6aa5157327178d7f3edd83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcPitchRaiseLower</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a829a294a3d5ee69cef237801f667c4be</anchor>
      <arglist>(bool writtenpitch)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcMIDIKey</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a12bf542cc0f6c13c9d4cdc1c11c74765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMIDIKey</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>ad3c36b2996229558f0d438c9975ac62b</anchor>
      <arglist>(twobyte midikey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdenticalPitch</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a5385df766c0ec844b419df59c2e93271</anchor>
      <arglist>(FCNote *pPitchNote)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsHigherPitchThan</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a2f80041742a6d9a9c53f43c31217de36</anchor>
      <arglist>(FCNote *pPitchCompareNote)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLowerPitchThan</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a8472b220284325800e99a396ae438b23</anchor>
      <arglist>(FCNote *pPitchCompareNote)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUpper2nd</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a23c063012ce1a35bc8380bff610004a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLower2nd</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>af139858c39343ca7cf1be61ab1cb1cd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNonAligned2nd</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a9ee9a1fabb723a12f4a4a4167799883a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkForErase</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a82a5cad2cc5fb5e4077aefa7b5374435</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_note.html</anchorfile>
      <anchor>a674cc13f107fc3f68b9ae318c2ab87a3</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNoteEntries</name>
    <filename>class_f_c_note_entries.html</filename>
    <base>__FCNoteEntryCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_note_entries.html</anchorfile>
      <anchor>ac65a06886d3a79842357943dc744dfa8</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNoteEntry</name>
    <filename>class_f_c_note_entry.html</filename>
    <base>__FCCollection</base>
    <member kind="enumeration">
      <type></type>
      <name>ENTRY_DURATIONS</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ab926ef2d75889d1cfcb3cca6a426d04d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>FCNote *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a03127dfcfcca9cded90c30a1f05b44be</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a6d47f5f6ae7fe3d7ebb0ebd484077b2a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCNoteEntry</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>abcd7547353c90124b15ef959b60c7ee4</anchor>
      <arglist>(EXENTRY *pEntry, EXTGF2005a *pFrame, FCNoteEntry *pPrevious)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCNoteEntry</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a665a132b88790e1d7216dcc58f39b70f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNote *</type>
      <name>FindNoteID</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a0009ef66208fbe9d6efdc739994bfc52</anchor>
      <arglist>(twobyte noteID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRestDisplacement</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a9bd74edce588b2b92d27f3350c51b227</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRestDisplacement</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ae66164900f793d929c3b59ea8ff04d47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>Previous</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>af09160ac47e9299c9d4db6ed2f37692a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>PreviousInFrame</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ad33f08873dee4157819f17edf42a9bf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCArticulations *</type>
      <name>CreateArticulations</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a719f94e00f7d3d1a4325be0a2bdbd66c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNoteheadMods *</type>
      <name>CreateNoteheadMods</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a35427b8cafc4591b1aff09c43ef861a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCPerformanceMods *</type>
      <name>CreatePerformanceMods</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aff1a2500470417a339cb3235fc4a5373</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCTuplets *</type>
      <name>CreateTuplets</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a6778d507ecbe356ed132451388e95fb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ENTNUM</type>
      <name>GetEntryNumber</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a27cade2dde905f35ba6793dce5d32336</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a04bd2281662471abe6bcf2f319bcc7e2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlayback</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>af2acb06135847638d31031a38aca3c8b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCombineRests</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a55f18d97c5f32a269e25655b0732fd2f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlipTie</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aa3447b5a284f2a0c2572c9b97292da4d</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpacing</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ac8453a5fd84f0689ac8a9d100b67db11</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVisible</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>af9f5d2bcb5d418f2184c1ecbc24631ee</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGraceNote</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a8ad5a700bf7ab5b0957175e6c20f5f27</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSplitRest</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a6b4593287f6be1c705219eed6dfefa4a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVoice2</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a83c02f3cdcd0a7ec08a5d403ea2a75b5</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVoice2Launch</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a44c4ea447c2d0cbc4bcca80c055d728b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGraceNoteSlash</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a32fbffe555e7d97862f52ebab3290f0b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCrossStaff</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a2177040da9b130322e14e268db088f80</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBeamBeat</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a9e99d7ab1cf2e2c6a558e683b57ab4d3</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFreezeBeam</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a6ae289596cc7fdff4f45e61f6ce37f4f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlatBeam</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a4a9912d0b5115c6238a8f5ae6c456cab</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLedgerLines</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ac79d5a899f692e111e2de96f531c3e85</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFreezeStem</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ae522ec9104e7bb89c500766cab984fb2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSplitStem</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>abff95dd1f175be8da21ef3d1ad550765</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCheckAccidentals</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aabb4a963da2e33a387d44a0b9ca2cc49</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLegality</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a362359903048b14f6c54a84e265ab7a4</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetManualPosition</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a9be54a65e2242d1002d3f771b9fd6092</anchor>
      <arglist>(Evpu16 pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClefIndex</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a6b0d78d4f101b591474d0859f61acf6b</anchor>
      <arglist>(eClef clef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStemUp</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>afff53916923d4523ceb64be9e5a6d0fa</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDuration</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a48d0c26ff43c51905403d4f85a4cc20d</anchor>
      <arglist>(TimeEdu32 duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFloatingRest</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a4563e0697c3715b01d0f41ca1e41520a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteDetailFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aeeda46025cef133622e4e30737d73d4c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPerformanceDataFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a26341b789b1dab8f55fbd89918c5bef8</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpecialAltsFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a27c070a5e67cbc17b1a3ee82b29615d6</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetArticulationFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ac655bcaa04850194350793578c0da18c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSmartShapeFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a168ebbc959dabd2991721fc851fc3ddd</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTupletStartFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a362b38850360cac0d3f0049a465e497d</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLyricFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>acb4490d6bde7cff8fdab8d9f5e3c4995</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStemDetailFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a16f5b8161cc161c75e092ad099ee29ba</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSecondaryBeamFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aa7647e5e8c627348333da538cb1e84f1</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActualDuration</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a8db844a7606d04425ce144bad6347b93</anchor>
      <arglist>(TimeEdu32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurePos</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a3b5c3f4c4a10a1fc4a6bff614f38bac0</anchor>
      <arglist>(TimeEdu32 value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBeamBeat</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>acb261cb0e7725acef36dd1e2fc12e2f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCheckAccidentals</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ac4fc0d7bf38143487e3fd6aa31f54f36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLedgerLines</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a20bc765f9b765aa3c9831837f7d945dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFreezeStem</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aa2d2754f61f2b6a6f809eb611749b3cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSplitStem</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a0e08bb1888e0b28b24de231630654f5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLegality</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a5a87190ebe2fe57e680a596c139ebea2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFreezeBeam</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ac41823d1b2b7ed9d132608033118f1b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFlatBeam</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a6ba7d669a92a81287fc02f79c7ffeceb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPlayback</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a573e6ccc6cd4f310cbad489e4b40f4f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCombineRests</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aba64ac5c1d4b4447b0f80be7f4c321f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFlipTie</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>acf3821563011228b10211567aed785e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSpacing</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aa4eea62ddf42874bc54bc845aa15abbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVisible</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a8114b0795cc8e4cbc12c82b87fadafcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGraceNote</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a7310a5b757143509a3a866f4599dc2e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSplitRest</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ae6a9d635a6b52000c0794dcaad9e3d08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGraceNoteSlash</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a041152c9e009a27b265e99d09b62f7f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVoice2</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a461248047f7f0fb74d70555a3dbfe071</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVoice2Launch</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a42a4c481f1a01c1eaa1d22374a6e203d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetStemUp</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a10c0733d6007aaf82b9bd0d23fbf2549</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCrossStaff</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a61f067fdb9543c1ddf44194bb02661e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetDuration</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a01b62da2b426f2acaa784819c0155bdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFloatingRest</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ac92563c019579510c4a6cc5a37ae080f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetActualDuration</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a89c1ab714eb88613cd9ccd2cd9df09a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>CalcNondottedDuration</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aaf67ada1ccfa4e5c8865f6436119727c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcDots</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a9d9685304ca971df36ccef09d8ee080d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcUniquePitchString</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a3fbb8963fbc92b63ea0aefc381472a0d</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLayerNumber</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>adb7cbc9d640c2b1a9a52dd444e0f22a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetManualPosition</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a078057c4366e31b1a403aa8a2022d4b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eClef</type>
      <name>GetClefIndex</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>af769334c73166931324523f8506dd90c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcGraceNoteIndex</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a2ff3786e0ea4a16658efc742ed914aa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcHighestStaffPosition</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a2457712562aa8b7997b76cad767d1a9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcLowestStaffPosition</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a7dc5df1c45e1ffc3d1f1696af47c9a12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcHighestDisplacement</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a6a2661d748ba110899a46280fcf293e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcLowestDisplacement</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a4a83fd073ecebbc51ffabdab5583de63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcDisplacementRange</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aef42fd8eac0458248b011bf1b9e3b57c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcBeamCount</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a3e5dca3acee1aea9231ea5810c8902f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcMultiLayeredCell</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a38d161634535e452215ccccbd680789f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcDisplacementMatchCount</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>abc2d4307d0a9d5723f5351b8cc1ccfd6</anchor>
      <arglist>(FCNoteEntry *pCompareEntry)</arglist>
    </member>
    <member kind="function">
      <type>FCNote *</type>
      <name>CalcHighestNote</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ac654048120e19b20eb5430b5bddb439b</anchor>
      <arglist>(FCNote *pCeiling=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCNote *</type>
      <name>CalcLowestNote</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a658bfcc9173fe99af28bc703070897f2</anchor>
      <arglist>(FCNote *pFloor=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcHiddenThroughAltNotation</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a3ba339d8a79292da701edf0c7d979f7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNote *</type>
      <name>CalcHighestPercussionNote</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a6e982358d719dbe5c1d852f4cc18f356</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNote *</type>
      <name>CalcLowestPercussionNote</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a7ff68a44a2f86eba3a8e91b36348b1f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasSameNotes</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a085121656d37ee63fbd1f443f03fe0f2</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>FCNote *</type>
      <name>FindDisplacement</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a9e5df53e9ef2c6d70e40d6dc9c1d9cb3</anchor>
      <arglist>(twobyte displacement)</arglist>
    </member>
    <member kind="function">
      <type>FCNote *</type>
      <name>FindPitch</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ae7ee42926d20d0c1128b850c01c1e38e</anchor>
      <arglist>(FCNote *pPitchNote)</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>afa5043fee071bdd3c947ceb2449eb138</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNoteDetailFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a15118ab7653bdf199139497ee6652769</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPerformanceDataFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ae5704c2aa4100c3615a5f712e4207ce9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSpecialAltsFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aee2b1c10c8c7953ad545e8bcef9bbe33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTupletStartFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a77e883cd6257242f2e224e804895dec7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLyricFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a9e7706bb0fe517ef74b0385f4b67f19d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetStemDetailFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ac801082b1c042a9381053be9c459663e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSecondaryBeamFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a1688340d1d0f93d56f47ba9aa949112d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetArticulationFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a4bd17adc39f69c61266fff9636d309e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSmartShapeFlag</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aabc62522ee300b78bb54d122ffffd681</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMeasure</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aeee9d4d0eb2aa0a26055f8960351b3b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>afd173506e7f17c60e75a811bdb3e5c86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>Next</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a49be0517e805e40d4f1e126bd4b9a437</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNote</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a1ee0b69be339e22552dcf4782214577d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRest</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ae01d6307fad474af19b815fba707e63c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDotted</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a35db76cc635dc4a3564e9fd197ac4e5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStartOfTuplet</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>af3cd852cfd583c8a6c403d341191f659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSameMeasurePosAs</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ad68a8baebd2e9e6bb671148f9d3ddf1c</anchor>
      <arglist>(FCNoteEntry *pCompareEntry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStartOfTupletParam</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ac47aa595e637f52c56369213ddc93d61</anchor>
      <arglist>(TupletInfo *pInfoStorage=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPartOfTuplet</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a4b2de09afe9be61bcebbb761ec9f00c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOverlappedEntry</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>af5f4cd0690496d61307cacd82198fc00</anchor>
      <arglist>(FCNoteEntry *pTestEntry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPartOfTupletParam</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a5c05bb59962eaeb57988bbd4f22233cc</anchor>
      <arglist>(TupletInfo *pInfoStorage=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLastInMeasure</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aa9378d4d9123ce40349986f8a5851248</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>CalcLastTupletEntry</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>acd25a2ca7187af92d65674ec55d2a4da</anchor>
      <arglist>(FCTuplet *pTuplet)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcFlippable</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>acac39daf4a4d9b8d545a541dee12b03b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcBeamedGroupEnd</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a2a077997348140b35eb10cad102e0f6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcUnbeamedNote</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a7ddf18509355218f727d8b2db0855da4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>CalcBeamStartEntry</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a96c9daa7b3994a33e9481ca5e46687a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcLargestNoteheadResize</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a87df8a16ec94baa8a9f81395fe2f943e</anchor>
      <arglist>(FCNumber *pLargestFontSize, FCNumber *pLargestResize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcSmallestNoteheadResize</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a814d200600083eaf19796d57cbc6d1c9</anchor>
      <arglist>(FCNumber *pSmallestFontSize, FCNumber *pSmallestResize)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcWidestNoteheadWidth</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>abad605d1929e9981e01926939dae0689</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcStemUp</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ac4c7f4babe448dbf6d29bbaf922725d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcResize</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a194f0630fcb1ba350f985401dc9dd650</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcStemLength</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a3264ae0bb81c38936eab9de2dd4d6fa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsTied</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a41109f718941fbcea52c0904d85cb9b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsTiedBackwards</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a6fc908a2dfc4740fc8f50171f2371cac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsTiedToPrevious</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>abfc09148fd9a6ac61ad4c99eea33c0c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAllTied</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a373a187239f2d7cf4332bd82b9e1979f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAllTiedBackwards</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a7f6e09febb4555832c094efa17116621</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearPitches</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>af243aacc78d8ab6ee3bfe9aac07b6376</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNote *</type>
      <name>AddNewNote</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a15f7e5cc6b84a6ba9be2cca988688ede</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AddPitches</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>afcb5e3e1794ebe5042dba4136b382cb7</anchor>
      <arglist>(FCNoteEntry *pSourceEntry, bool unique, bool settie=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AddPitches</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aab5802417285903d56614808692d37db</anchor>
      <arglist>(FCNotePitches *pPitches, bool unique)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AddPitch</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a2a388529f9cc5eb7a53345f90f19683e</anchor>
      <arglist>(FCNote *pNote)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AddArticulations</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a6f218fbc8ff11512e94361375c305a66</anchor>
      <arglist>(FCNoteEntry *pSourceEntry, bool bNoDuplicates=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TieAll</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>afa1b26b09f7f554544fd245d9411ffe6</anchor>
      <arglist>(bool bTie)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAccidentals</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ac8414ae60ccc38a0c9ff8e48464e9358</anchor>
      <arglist>(bool bAccidental)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyNotes</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a7724ad9fcf2e1d575eaaf4d7b2a5232e</anchor>
      <arglist>(FCNoteEntry *pFrom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyNote</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>af129a6e81c3ed36d5fc21050ecc9ad6d</anchor>
      <arglist>(FCNote *pFrom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyEntry</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a3df1ed919e00b38eac5e6a686ab45157</anchor>
      <arglist>(FCNoteEntry *pFromEntry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyEntryDetails</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>afdc81830b2ea094bca6c59c6465edd76</anchor>
      <arglist>(FCNoteEntry *pFromEntry, bool copytuplets)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyEntryPercussionDetails</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ab8c3265705b88594682c1cff0c3a6ff1</anchor>
      <arglist>(FCNoteEntry *pFromEntry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteNote</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ae1c1a49476618441ece24db72d030f20</anchor>
      <arglist>(FCNote *pNote)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CacheArticulations</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>afe47d900e0f16d281a16a290593d642e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRestMovable</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a8ea8f197a0aa5cb92982a27f5a5e0db8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeRest</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>af9644cef5b805f88f39779c35c439077</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeMovableRest</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>af2a12c114e1e011f23e947fdb6b28849</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeNote</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a0ffaf4d22f30a993072c5370329d1117</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>CreateShallowClone</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a64f23569fcf158dccd48cbd08c94aa93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNotePitches *</type>
      <name>CreateNotePitches</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>ac892dd6d0a1ec55df5bb69a51b1d7111</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MarkEntryMetricsForUpdate</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>afce30991c44a98750785a9ccbff56dc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeEdu32</type>
      <name>CalcNondottedDurationForDuration</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a79d5d62fafb5052c60a58a55815f2fd7</anchor>
      <arglist>(TimeEdu32 duration)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>CalcDotsForDuration</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a66f4e0b63dd5a59290ba1264a351fe26</anchor>
      <arglist>(TimeEdu32 duration)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsValidDuration</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>a968593f83da82fee26d612a4a8b6fd85</anchor>
      <arglist>(TimeEdu32 duration)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeEdu32</type>
      <name>CalcValidDuration</name>
      <anchorfile>class_f_c_note_entry.html</anchorfile>
      <anchor>aac5da9d3ec338c1151e803f5b6f3ecd8</anchor>
      <arglist>(TimeEdu32 duration)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNoteEntryCell</name>
    <filename>class_f_c_note_entry_cell.html</filename>
    <base>__FCNoteEntryCollection</base>
    <member kind="enumeration">
      <type></type>
      <name>LOADLAYERMODES</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a1e4b446daf8e8a7bda1520254536a8e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LLM_NONE</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a1e4b446daf8e8a7bda1520254536a8e7a8b6618555bfc415b726e248d72319281</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LLM_HIDDENLAYERS</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a1e4b446daf8e8a7bda1520254536a8e7a834f148bb1ac773502d5c5e8b98c7ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LLM_EVERYLAYER</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a1e4b446daf8e8a7bda1520254536a8e7a1fe283f9b886ca2419a2ebda033ba341</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LLM_ALLVISIBILELAYERS</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a1e4b446daf8e8a7bda1520254536a8e7ae660240a7360cbb6b31a618e7653d2a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LLM_NONE</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a1e4b446daf8e8a7bda1520254536a8e7a8b6618555bfc415b726e248d72319281</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LLM_HIDDENLAYERS</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a1e4b446daf8e8a7bda1520254536a8e7a834f148bb1ac773502d5c5e8b98c7ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LLM_EVERYLAYER</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a1e4b446daf8e8a7bda1520254536a8e7a1fe283f9b886ca2419a2ebda033ba341</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LLM_ALLVISIBILELAYERS</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a1e4b446daf8e8a7bda1520254536a8e7ae660240a7360cbb6b31a618e7653d2a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a9c3208a9a78ba2d63a39b692ad61389a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCNoteEntryCell</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a508965132fc76f4f3e62b60052e1f44e</anchor>
      <arglist>(int measure, int staff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCNoteEntryCell</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a4b354ae528f229ffc718d6dc839bcedc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>AppendEntriesInLayer</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a2f29d54b6eb9ce0218ed8a240f23ca68</anchor>
      <arglist>(int layerno, int noofentries)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MoveEntry</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>aa195fc2f6d4fd24553fcb268420fae7a</anchor>
      <arglist>(FCNoteEntry *pEntry, FCNoteEntryCell *pSourceEntryCell)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcAccidental</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a574cab5c6f6dd66cd38e915b1b6db39e</anchor>
      <arglist>(FCNoteEntry *pEntry, FCNote *pNote)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcEntriesInMultiLayers</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a50d6f2ad99ae1d6bc2cfa54ddf3943da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLayerContainingEntries</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>aa11b6032dc3ce74ffd2f95f255dd953c</anchor>
      <arglist>(int layerno)</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>CalcLayerDuration</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a84c23489fb4c9e4e1446fd21d33c1803</anchor>
      <arglist>(int layerno)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearFrame</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>aa9589fa289c6082997d5a212f6e1b61f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>FindEntryStartPosition</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a8a2448e8c68a254495cb825930750821</anchor>
      <arglist>(TimeEdu32 pos, int layerno)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>FindCoveredEntry</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>abde6d9aef11b97f48247f135b3c268f9</anchor>
      <arglist>(TimeEdu32 pos, int layerno)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>FindClosestPos</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a3092775618e348c9b78801c23f9ab37f</anchor>
      <arglist>(TimeEdu32 pos)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>FindNextEntryPos</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>aaae3b0c0b06b75f0be14851c5baded48</anchor>
      <arglist>(TimeEdu32 pos)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>FindPreviousEntryPos</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>ab5332e739e6de3f1b03b3f8eaafd2445</anchor>
      <arglist>(TimeEdu32 pos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteAllNullEntries</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a8e0663ddb2a712a4f1e7a2f7bb0ed5b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteEntry</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a527d3d637e9afc75d40ddb516837e09e</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>aa13f104cf6ffeef7acf1d67ce5797e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a11e7dec834093d1b7ca5509d0c85e545</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>GetRegionItemAt</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a7a6414fdf79f876b4504d4499033bf78</anchor>
      <arglist>(int index, FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLoadLayerMode</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>aa6995d401e32d6e0d72aa8daffcd1397</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLoadMirrors</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a3b4ade825703a9b7ebaa9e5de3cfe391</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFindVisible</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a386dd7cf86befc15545c372fca20e051</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFindHidden</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>af7431f12769ea6144a7b4c5771bef274</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFindNotes</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a700e96101a4aed63842abb3708cc1aca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFindRests</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a358102e6095f6bdfe8d6a740d24b1c4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFindAlternateNotation</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a3e275bb2566011098461af63f5b89202</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFindCutaway</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a00056a1a6680daea1ba00734ebc61c45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFindVoice1</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>afe7a1f4715eeae3eaef43dfecb9adc8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFindVoice2</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a2d69ae4f7e864a6d3c06981515bcb166</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFindVoice2Launch</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a950e347e03e7e76c9cc96245fdbcf8f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMeasure</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a481421162af523383c17ffaed68fcdbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>aec53156e6e16ccdcb08e8f08d2f77e2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLoadLayerMode</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>abe5159d435a7503f99a1351265cde4a5</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLoadMirrors</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a66822d18c21f4aabbc7a02d23be5631f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFindVisible</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>ab1e0a4ad7ab65efc93644a4a533e1ac9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFindHidden</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a643cf69bea5920a20035ccc833ef0cd3</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFindNotes</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a85c3b7ea9a401dbedecdd3877d79f397</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFindRests</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>ab322c4469bb05cd93368e8b3f0e3ce7d</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFindAlternateNotation</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>adee9f4fc8149300b3d78b1bcd9ac2dfb</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFindCutaway</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>afc5da324599e8ddb2fc78eb24e493f6e</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFindVoice1</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a3452cafd391d69f6e1e6c92d24df77d3</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFindVoice2</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a5b5e444d489a15ae3c6f25e11fd38ec2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFindVoice2Launch</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a7f382424433a13249979dbdae9c46923</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_note_entry_cell.html</anchorfile>
      <anchor>a3607c7e148157536805827a0f52458c7</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNoteEntryCellMetrics</name>
    <filename>class_f_c_note_entry_cell_metrics.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_note_entry_cell_metrics.html</anchorfile>
      <anchor>addcb65e2339a90e9918fe400b67c57a3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCNoteEntryCellMetrics</name>
      <anchorfile>class_f_c_note_entry_cell_metrics.html</anchorfile>
      <anchor>a3e0873a5822325380f3455cf02a8c5a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_note_entry_cell_metrics.html</anchorfile>
      <anchor>a3e7db1b81cab12224ed51b82a3a8c4d2</anchor>
      <arglist>(FCNoteEntryCell *pEntryCell)</arglist>
    </member>
    <member kind="function">
      <type>FCEntryMetrics *</type>
      <name>FindMetricsForEntry</name>
      <anchorfile>class_f_c_note_entry_cell_metrics.html</anchorfile>
      <anchor>af2d10124456129c4f3d90cc95a4f3b9a</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>FCEntryMetrics *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_note_entry_cell_metrics.html</anchorfile>
      <anchor>a94cc9988a09c49f28c3b12cbcbb8ba14</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNoteEntryLayer</name>
    <filename>class_f_c_note_entry_layer.html</filename>
    <base>__FCNoteEntryCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a9012adf214e5720fa521259f2e9b9227</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCNoteEntryLayer</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a447a3853f3bdb8d2a6f4458dda114dc7</anchor>
      <arglist>(twobyte layerindex, twobyte staff, twobyte startmeas=1, twobyte endmeas=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCNoteEntryLayer</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>ab3ab4390670d9defa6b9ed4a049a2b28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearFrames</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a9a3ceb595b2a095b3dbfcc1bbe689f4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteAllNullEntries</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a6deef10f1e92a527f157017b5d4889cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteAllRestFrames</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>ac73617a8d763c9cedef0f8630fe2b872</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteAllNonconnectedRestFrames</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a768a3a4aed72c450e3e8e32cfa6b250e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearAllEntries</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>accb5452678c7c9b430eb3277d7d768f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLayerIndex</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a9ec43d9e52209088ccef3fc73f3e383e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a2932def62f2ef09d05a99e9f33a82550</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartMeasure</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a640468576f64d1937a6d140713f078f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndMeasure</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a873888b33cf2cb559b86e5f6997038d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLoadMirrors</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>af81e92b0ac997f90e86c5ad193bc128a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseVisibleLayer</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a63ad1d4171c833c01cfa48a677af93d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseVisibleLayer</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>aa12578c3d7f2577017c0a123bc4c0c19</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLayerIndex</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>ab7b77b06512b548758ba43131182634f</anchor>
      <arglist>(twobyte layerno)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLoadMirrors</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a8b63bd21b8608cc954681fa7b3dc8d87</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a9856bf89b70b51fd082e3c714842f216</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a6f96a8549dab5ab78b21483c38bcc952</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntryLayer *</type>
      <name>CreateCloneEntries</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>ade170d399c8d851f2dd1a3daebc2dba4</anchor>
      <arglist>(twobyte layerindex_redir, twobyte staff_redir, twobyte startmeasure_redir)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntries *</type>
      <name>CreateRegionEntries</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a5b2cdd8c1fe8d9ceb40f1318ff123143</anchor>
      <arglist>(FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>InsertEntriesBefore</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>afe4bda0599b715b57b5902c676c288dd</anchor>
      <arglist>(FCNoteEntry *pPositionEntry, int count)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>InsertEntriesAfter</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a75de141f0db25a35415cc8946a42ef17</anchor>
      <arglist>(FCNoteEntry *pPositionEntry, int count, bool nextmeasure=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CloneTuplets</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>aa70a8370f70e92141310a547ee2d2696</anchor>
      <arglist>(FCNoteEntryLayer *pSource)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInSuccession</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>ad65824de59e506957d94a1738f84edb0</anchor>
      <arglist>(FCNoteEntry *pEntry1, FCNoteEntry *pEntry2)</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>CalcFrameDuration</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>ac792e6929b434bd2dd8c93f39d3f3540</anchor>
      <arglist>(int measurenumber)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcMeasureSpan</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>ad87d855146bc43e5921d410f34f1a126</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcRegionCount</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a59d38dd2111e5c61ba9ad076c272ba46</anchor>
      <arglist>(FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>GetRegionItemAt</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a359942af99aadd679af2bd989e6fe454</anchor>
      <arglist>(int index, FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachInRegion</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>ad243c01e363eeb3dad589a46f6ba9d4c</anchor>
      <arglist>(FCIteratorHandler *pIterator, FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntry *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>a675021e7e4314c67c0da1acca1ab5833</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_note_entry_layer.html</anchorfile>
      <anchor>aafa26b54df7ad756ca905b0bbd283704</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNoteEntryLayers</name>
    <filename>class_f_c_note_entry_layers.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type></type>
      <name>FCNoteEntryLayers</name>
      <anchorfile>class_f_c_note_entry_layers.html</anchorfile>
      <anchor>a259e812385fcdef646e8b4d1b673b4e8</anchor>
      <arglist>(twobyte staff, twobyte startmeas=1, twobyte endmeas=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadAll</name>
      <anchorfile>class_f_c_note_entry_layers.html</anchorfile>
      <anchor>acf495fa2d731676eb127fcf3f831a37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAll</name>
      <anchorfile>class_f_c_note_entry_layers.html</anchorfile>
      <anchor>a5179353aa306a2e7741b69df88e53db9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseVisibleLayersOnly</name>
      <anchorfile>class_f_c_note_entry_layers.html</anchorfile>
      <anchor>af66d159b77ebb9b503aad43737def099</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteEntryLayer *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_note_entry_layers.html</anchorfile>
      <anchor>aeff50b1b464bf3f782cd752111949401</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNoteheadMod</name>
    <filename>class_f_c_notehead_mod.html</filename>
    <base>__FCEntryDetailNoteID</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a1374c8efc0512a516836c5fc80af608f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>af0e01b87d566a0389b677fee5acee657</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCNoteheadMod</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a13bde7ff4737b17c6cb36dc00ec8f6a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalPos</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>ae5bf1ed6482e0242fd3142d5dab96429</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalPosIfPossible</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a4bb1e2d0ed694062fe893d20a23347da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalPos</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>ae4cc661c5b4ad5aa9602d9ac82a129bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCustomVerticalPos</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>aa68135e971c780ea1f1f2a3ebd6e5223</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetCustomChar</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a05520df3a3df4ca103d65fad77ae67e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCustomChar</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a8006ce69de678fd065d7ce0d4a460d42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetResize</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a81172a4af156bb45dc7d685dc08eae38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCustomFont</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a70839389225e0cc74a9eea67d93d160e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetFontName</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>aaa2eafe0b592452e5dbb9a5b6d30d23c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const eUniChar16 *</type>
      <name>GetFontNameUTF16</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a38fd7a7b3868fb1aa4ee968385e10069</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFontSize</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a1055e3c83f34da229fb651f83f2d8724</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFontStyle</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a4717a38b5cde61df61a48deb294b4c2d</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFontInfo</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a1beed3f6eb60c911f19dc73b9272df21</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPos</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a9358ef77ba4652780b1e2aea86f8e013</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPos</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>afa7e1170f52a63d3fb19483993d19e73</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseCustomVerticalPos</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a6570adc0b4c7d610e2c6f5fcaa07f077</anchor>
      <arglist>(bool status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseDefaultVerticalPos</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>ac5845eae847bdc16e9209b5ebe92d989</anchor>
      <arglist>(bool status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetResize</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>affca05dd40c5088e07325701b8596a19</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseCustomFont</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a8f394c1c58465cc8750ad2aecad6c0c2</anchor>
      <arglist>(bool status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseDefaultFont</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>ad5f3e1f51470398eaa778a6910cbb77b</anchor>
      <arglist>(bool status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontName</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>ae36ec4fe0685cd9c0448279dd9bf34ba</anchor>
      <arglist>(const char *pszFont)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontNameUTF16</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>ae7813aedf2210d441f7f5780b2d6b2ea</anchor>
      <arglist>(const eUniChar16 *pszFont)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontSize</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a5b0d4e670279cbdb9fbc4c90083bfd52</anchor>
      <arglist>(twobyte fontsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontStyle</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a64ed6d096d8febe3dd3599cacf8653fb</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontInfo</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>afdebc9dfbf457488ec15957806a286e0</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCustomChar</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>ace7b98effaaa46ea6202e48d47f677a2</anchor>
      <arglist>(eUniChar32 ch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearChar</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a5f88cc6ffd5d83951f626e67c4830baf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteID</name>
      <anchorfile>class_f_c_notehead_mod.html</anchorfile>
      <anchor>a92c51faa19fb48e5a795c321567fc4d1</anchor>
      <arglist>(twobyte id) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNoteheadMods</name>
    <filename>class_f_c_notehead_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_notehead_mods.html</anchorfile>
      <anchor>a52ef643c50b51554a1bb6109de96af48</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCNoteheadMods</name>
      <anchorfile>class_f_c_notehead_mods.html</anchorfile>
      <anchor>a9735dbef2dbe5cd96fd6504feda80454</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCNoteheadMod *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_notehead_mods.html</anchorfile>
      <anchor>a26ec79c5ca38d9479aa323210807c6a9</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNotePitch</name>
    <filename>class_f_c_note_pitch.html</filename>
    <base>FCNote</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_note_pitch.html</anchorfile>
      <anchor>a0efe42d51a47ba03d3f5b69f6e56731e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCNotePitch</name>
      <anchorfile>class_f_c_note_pitch.html</anchorfile>
      <anchor>a4156791c52bd855d85921d0b99d831db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyFrom</name>
      <anchorfile>class_f_c_note_pitch.html</anchorfile>
      <anchor>a6b28731be77d4c4c655d9a108a1b720e</anchor>
      <arglist>(FCNote *pNote)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNotePitches</name>
    <filename>class_f_c_note_pitches.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>FCNotePitch *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>a2def3da48508199d47c40d6623fb0324</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>a6347f73949112d7f2ee4dd231b56be95</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFromEntry</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>acbc461fa2430f584d5acce6ae11a3135</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFromCellEntry</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>afb7a3b661fa9ddf6a2e6276235cb6e02</anchor>
      <arglist>(FCNoteEntry *pEntry, FCNoteEntryCell *pNoteEntryCell)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CloneEntryPositionData</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>ab55307de0bed4b911d3acf83274d9893</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMeasure</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>ad807058014dbe5226027d217a3d13296</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>a2f4cc7a580b293d4f2c216cc8703069b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLayerNumber</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>a37fb0869b0e4e47db47557e6326b58e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGraceNote</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>ac71fca7f5373a3daf76eb60d22b5081b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetGraceNoteIndex</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>ae690c7fb084e81758a107e9f447d8acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>a915d3fcb2ddbc75d1a6f7cef7c301769</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ENTNUM</type>
      <name>GetENTNUM</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>a08e234e1f2bbae63ce55e42210337dfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetDuration</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>a8e254954e2467b62916ccd88d045cb6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetActualDuration</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>a2914f340b50808bf45f8fd0336902de1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetFrameIndex</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>afd56f483fa9b06fc1ea70f6186eadfba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_note_pitches.html</anchorfile>
      <anchor>a2ed6c1449ef66678fe60b37c0e836c61</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNumber</name>
    <filename>class_f_c_number.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_number.html</anchorfile>
      <anchor>aa687ea6ef852397a786307f902bf38fa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_number.html</anchorfile>
      <anchor>ad00f5e1b1db8d77f6ed481a6b215330b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCNumber</name>
      <anchorfile>class_f_c_number.html</anchorfile>
      <anchor>a2d5a673f2f26e3ded582bb7be5d36e80</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInt</name>
      <anchorfile>class_f_c_number.html</anchorfile>
      <anchor>a82c79a6ffbe3b80f18661e737a288f7d</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFloat</name>
      <anchorfile>class_f_c_number.html</anchorfile>
      <anchor>ac6ac8a0d43d67c5a12a011b2f971926e</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetInt</name>
      <anchorfile>class_f_c_number.html</anchorfile>
      <anchor>a328b09d218456b055b0a9797396aeb2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetFloat</name>
      <anchorfile>class_f_c_number.html</anchorfile>
      <anchor>af4cb8d91a2111a35cebdba888fcd2eda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_number.html</anchorfile>
      <anchor>a0768df5c6309c408a3337a7ad6ed6dcb</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNumberCollection</name>
    <filename>class_f_c_number_collection.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_number_collection.html</anchorfile>
      <anchor>acaa2565424e33b69f84c0532308ff5d2</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCNumbers</name>
    <filename>class_f_c_numbers.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_numbers.html</anchorfile>
      <anchor>ab4eac43fa687b096d4c1553719bdd5b6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCNumbers</name>
      <anchorfile>class_f_c_numbers.html</anchorfile>
      <anchor>ab3a62d5cec2eceaba7e041c252e1800d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCNumber *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_numbers.html</anchorfile>
      <anchor>afb1cb235b4006ed2a3165c982f3883d6</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>FCNumber *</type>
      <name>FindInt</name>
      <anchorfile>class_f_c_numbers.html</anchorfile>
      <anchor>a37fca9693b0691e89f4ec8b64e1062a9</anchor>
      <arglist>(int intvalue)</arglist>
    </member>
    <member kind="function">
      <type>FCNumber *</type>
      <name>AddUniqueInt</name>
      <anchorfile>class_f_c_numbers.html</anchorfile>
      <anchor>aab74f23cb3aafd1bf736a947c31efc6d</anchor>
      <arglist>(int intvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddInt</name>
      <anchorfile>class_f_c_numbers.html</anchorfile>
      <anchor>a7b0661fbe5f92d5892fb3f9d1c9f66d0</anchor>
      <arglist>(int intvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearInt</name>
      <anchorfile>class_f_c_numbers.html</anchorfile>
      <anchor>a2bdde8941a32f6ceb4f39e6bd43f8a29</anchor>
      <arglist>(int intvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearInts</name>
      <anchorfile>class_f_c_numbers.html</anchorfile>
      <anchor>ad009e059de9fb3d94d58fec4bbd70ef6</anchor>
      <arglist>(FCNumbers *pNumbers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFloat</name>
      <anchorfile>class_f_c_numbers.html</anchorfile>
      <anchor>a9aaa1f2849136c899ec658e68270e710</anchor>
      <arglist>(float afloat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyFrom</name>
      <anchorfile>class_f_c_numbers.html</anchorfile>
      <anchor>a8c5639c1d7531b67277adf3325c1524c</anchor>
      <arglist>(FCNumbers *pNumbers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SortNumerically</name>
      <anchorfile>class_f_c_numbers.html</anchorfile>
      <anchor>a36e837e64eda162b98d6e18f26d3b80a</anchor>
      <arglist>(bool upwards)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasIntDuplicates</name>
      <anchorfile>class_f_c_numbers.html</anchorfile>
      <anchor>a238f40a946794834d726d4ef87f6ae21</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCOtherInci</name>
    <filename>class_f_c_other_inci.html</filename>
    <base>__FCInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCOtherInci</name>
      <anchorfile>class_f_c_other_inci.html</anchorfile>
      <anchor>aa27f4a351205302a5947b4d6db3b4e84</anchor>
      <arglist>(EXTAG customTag=0)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_other_inci.html</anchorfile>
      <anchor>acb2fe0766d5d78d926ee7b4c81aa4397</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_other_inci.html</anchorfile>
      <anchor>af3b26d96792462361703fffa78491f0f</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCOtherIncis</name>
    <filename>class_f_c_other_incis.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_other_incis.html</anchorfile>
      <anchor>ae854dd7e15b2d2c31f3ad411e1536dc6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCOtherIncis</name>
      <anchorfile>class_f_c_other_incis.html</anchorfile>
      <anchor>a9077379fb4b5ab4066df9fb2111a6f45</anchor>
      <arglist>(EXTAG customTag=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMemoryBlockSize</name>
      <anchorfile>class_f_c_other_incis.html</anchorfile>
      <anchor>abd7bd723298ad64627a57f4d07578a03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte *</type>
      <name>CreateMemoryBlock</name>
      <anchorfile>class_f_c_other_incis.html</anchorfile>
      <anchor>aa2b3a47209dcd13bc32e4841e9e63f95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeMemoryBlockCollection</name>
      <anchorfile>class_f_c_other_incis.html</anchorfile>
      <anchor>a1e68ed204c4de4ebf782183bc2f59198</anchor>
      <arglist>(twobyte *pBuffer, int size, CMPER cmper)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpandToFitRecords</name>
      <anchorfile>class_f_c_other_incis.html</anchorfile>
      <anchor>a1d6cd54a81ae3f82d6065b9be40f6227</anchor>
      <arglist>(int noofrecords, int recordsize, CMPER cmper)</arglist>
    </member>
    <member kind="function">
      <type>FCOtherInci *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_other_incis.html</anchorfile>
      <anchor>a0c0b37a4b938d8cb40687d2987c05dff</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPage</name>
    <filename>class_f_c_page.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>add0c2ec32d680cfe03e3d7afbf3e5e8c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>aef3b576ef66a47a2522ecde7d5745d58</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPage</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a5468bb3955abbcd01d0771a555778aaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>eSsys</type>
      <name>GetFirstSystem</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a6f552e124e82c71d8f5963d439b3cb5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFirstSystem</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a230061b2d919c13d24b23da669929fd4</anchor>
      <arglist>(eSsys firstsysno)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateLayout</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>ac072effdc569f0934001458e3f6f5186</anchor>
      <arglist>(bool bUnfreezeMeasures=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPortrait</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a22386a8d8f850addfae07ebd7b713a7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Evpu32</type>
      <name>GetWidth</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a75972d54a25ffd02afc3dcf55a9c5f8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu32</type>
      <name>GetHeight</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>ae80dd1418a73339cb84a3b67b4aebc21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLeftMargin</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a7a9757b9752b79767f4a0a997f9fa52b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetRightMargin</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a6f0b0eae6ac1ca68ab1b5c1e47e93030</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTopMargin</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>ad8fd0f0306349a5df39744f32abf61fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetBottomMargin</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>aa2d8604d65bf6d62e6179d0f233d475e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPercent</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a8589366096e3f950ea567fcecf058b45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHoldMargins</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a9c30cf9dbf06a955c2d34aebeba4541e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a64d03507d0b60caf6657e8c6aa195064</anchor>
      <arglist>(Evpu32 width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHeight</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>aad42a618bdac11986054611adbf265e4</anchor>
      <arglist>(Evpu32 height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftMargin</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>af02ba167edf346cc172cb83c784339ee</anchor>
      <arglist>(Evpu16 margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightMargin</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>af3bd42cd3381ddd2dca0fc37cc1327ec</anchor>
      <arglist>(Evpu16 margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTopMargin</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a6ebecd47801deb9c7f6a275d8cf8d143</anchor>
      <arglist>(Evpu16 margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBottomMargin</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a354555757fef6afe889fab3371e0ce2f</anchor>
      <arglist>(Evpu16 margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPercent</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>ab3df4871f3eca37e9315cf620d37471b</anchor>
      <arglist>(twobyte percent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHoldMargins</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a5702d745787f8144b1eef98eb752c140</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>eSsys</type>
      <name>CalcLastSystem</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>adc5e60364139d1ef9d36854f3ad059c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>eMeas</type>
      <name>CalcFirstMeasure</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>af345c7612873ac8238f4cd0b5f18383a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>eMeas</type>
      <name>CalcLastMeasure</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a1311fe246bc36a13ef4b5d05288b6561</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcInteriorHeight</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>a3328f0712ea6e76491d9be772d56250b</anchor>
      <arglist>(bool resize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_page.html</anchorfile>
      <anchor>ab99e65411c75b9183fd0ed2cfdcefc8c</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPageFormatPrefs</name>
    <filename>class_f_c_page_format_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a70ab8dce1c042d877b6c5f7ea44c7a4e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a72ead3af0bc9d64d431cbd3d4992931e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPageFormatPrefs</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>afc4cb3fbf238118c8375f97064554853</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>ab8a2aa3777863a32caa999bbacd78e26</anchor>
      <arglist>(twobyte prefsno=1) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a28108c6b5481f31219ad4a795cafd34c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadScore</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a38a7ab31c72eac0a52d5e22c30b34e89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadParts</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a91744eb8fbfa625a39f5cf635c0667db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFirstSystemLeft</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a4d43ce525350758b9144685d157ad8e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFirstSystemTop</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a11d44cbf24cfc17af7b73c9fceb3cccd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSystemLeft</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>aaf1eb603332534173f774a3cd52d51d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSystemRight</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a9c7ab8af5a2f0d8caf396da4d2aad1ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSystemTop</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>aa30e5f3d534eccdb438fda158d025851</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSystemBottom</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a95ad1a088743ba9b96c2a3c2c3bdef63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSystemDistanceBetween</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a5aa7bd91c7483c6341ebde2c66eb8765</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseFirstSystemMargins</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>ac74af3af431cfd9c868f58c6974f6edb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetPageWidth</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>aee28e250e0076010b692a3af61c76d5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetPageHeight</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a056d1933bc63337b2748c80db71a43ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetPageScaling</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>ac59b4e025d576a98a8fc646bd6b8b084</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLeftPageTopMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a63e8809576dd4f95ad41f43d71c01489</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLeftPageBottomMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a6138695ac0d8c329675a5c3817f39aa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLeftPageLeftMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a8821e9b0ea37aedb462ab7fbb0f6ae5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLeftPageRightMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a14913b31e1c88a71344801de35a45759</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseFirstPageTopMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>aadb2776d768748b0a2839bb6ab1bf986</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFirstPageTopMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>afe8ae947f7d3f9823a5f04650ca50950</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseFacingPages</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>af00d575e7dfa047866d9434587c0e406</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRightPageTopMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a9d365d307a91c04b7f698028455681d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRightPageBottomMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>ace3b5e4bb46aab29be13f9328f344eca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRightPageLeftMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>ae9196873008c57f5866e218b9718dcd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRightPageRightMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>ad190fbc7b9de5c8f81151400672fba8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSystemStaffHeight</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a94eda7e2be0b854098365d8814a98946</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSystemScaling</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a2d7e25a56a106f2709d3e7a68f697b40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFirstSystemDistance</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>afa7b14541eea07a427e0ab55be51ae25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFirstSystemLeft</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>aedade9ff12c64544f1cf35e8efeb9d72</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFirstSystemTop</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a5a33917d7245b97ef79c1a56bace16ab</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSystemLeft</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>affc2935d1c890cb21ac51ccdd571ff48</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSystemRight</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a78f493ac8d7f21a9220f16308d4e4a8a</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSystemTop</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a2675ed903006fd1c3123f8e33788d971</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSystemBottom</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>acba0bfd4a4c2d378614b689a1512f818</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseFirstSystemMargins</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a33b0c7e4cbf892fa10ce8758b40a4aef</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPageWidth</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a6bc5d8cf713ff3bc0c243a69eaf823e4</anchor>
      <arglist>(fourbyte width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPageHeight</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a9c4159bc7f1c815a74a2a15a339c4c92</anchor>
      <arglist>(fourbyte height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPageScaling</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>abaf7da65e97de0cc637ba7296ba1bd32</anchor>
      <arglist>(twobyte scaling)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftPageTopMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a4d27a495e0e719af1ce05ab706a96128</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftPageBottomMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a5af2ad5245d648b513424d6ee3823303</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftPageLeftMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a4e88a3e9c4877188e16b056380980b7d</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftPageRightMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>ad98c4f32e16a3a094795b1a9a92eab24</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseFirstPageTopMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>ab740c57f00bca4e60c4a7ef17b5c69ad</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFirstPageTopMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a65c93489c18fc1db3007ef0f5b5e97f8</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseFacingPages</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a291823c3c55443296698138b39b77a87</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightPageTopMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a501d6ffcd20492224a095c3cbf13049a</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightPageBottomMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>ac53e1154d281fd5954e2eab0a963c61f</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightPageLeftMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a5731f64d8d10c4fe43dd930d5de9b5c4</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightPageRightMargin</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a354e6ba1e4d42911feec8f0932a3824c</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSystemStaffHeight</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a350f45c5a11c2aec92d2ee322007f652</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSystemScaling</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>a0e224496756d66e07c16be6206720183</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFirstSystemDistance</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>aaca3b27e179e251f79d86808ec0e544f</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSystemDistanceBetween</name>
      <anchorfile>class_f_c_page_format_prefs.html</anchorfile>
      <anchor>accfa6469be4caa793b654b87aa74d36e</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPageGraphic</name>
    <filename>class_f_c_page_graphic.html</filename>
    <base>__FCInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>GRAPHIC_HORIZONTAL_ALIGN</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>aa90071b2667756806d811a4f29b35432</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHICHORIZALIGN_LEFT</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>aa90071b2667756806d811a4f29b35432aacfff7141230e7851bd30291c0e453cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHICHORIZALIGN_RIGHT</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>aa90071b2667756806d811a4f29b35432ab606f81915d9260bdc2b82ed869e153c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHICHORIZALIGN_CENTER</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>aa90071b2667756806d811a4f29b35432ac110955c4d89046491df2cde711355fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GRAPHIC_VERTICAL_ALIGN</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a92160f341d15f4c4f1433d7b92507ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHICVERTALIGN_TOP</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a92160f341d15f4c4f1433d7b92507ae5a4788c0d30c78ac816f9af0d1d5fddeba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHICVERTALIGN_BOTTOM</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a92160f341d15f4c4f1433d7b92507ae5a59c97295d3f0aec7f9e44174b0c288c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHICVERTALIGN_CENTER</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a92160f341d15f4c4f1433d7b92507ae5a26281bb3e53656cf20fca6b34b6635d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHICHORIZALIGN_LEFT</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>aa90071b2667756806d811a4f29b35432aacfff7141230e7851bd30291c0e453cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHICHORIZALIGN_RIGHT</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>aa90071b2667756806d811a4f29b35432ab606f81915d9260bdc2b82ed869e153c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHICHORIZALIGN_CENTER</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>aa90071b2667756806d811a4f29b35432ac110955c4d89046491df2cde711355fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHICVERTALIGN_TOP</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a92160f341d15f4c4f1433d7b92507ae5a4788c0d30c78ac816f9af0d1d5fddeba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHICVERTALIGN_BOTTOM</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a92160f341d15f4c4f1433d7b92507ae5a59c97295d3f0aec7f9e44174b0c288c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHICVERTALIGN_CENTER</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a92160f341d15f4c4f1433d7b92507ae5a26281bb3e53656cf20fca6b34b6635d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a033992ccc6075019dd77dac851ddc17e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>ad1cc1c3da768883e15f884ebb1818c18</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPageGraphic</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a522b5e6375a7e845d20df13c059d1219</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmbedded</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a1175e52e5eb3bafabe857c8174cf7261</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetFirstPage</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a76dd20c0e7c59e05b57319c8c71cf29e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLastPage</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>ab017388de54bff45789e788a90291dbb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalPos</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a9cf42fc75038f19e1e0d5a797ea42502</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalPos</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>ad7416dbb93aa9c2f90052b9b794c8b83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetWidth</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a2a9873761b7cf13c4f1dc793fa729e3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHeight</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>add5d38e66397a016bade6d5f79c2472b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetOriginalWidth</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>aab89db4f30fef7f7c155503364403454</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetOriginalHeight</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a5e4b3e83943e0e8c6a3f63a36239b4f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVisible</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>aaa149e8f1ebb8e3334952f7b324561e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPageEdgeRef</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a5a99fc3976784b07bc3533f2e86be657</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIndependentRightPage</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>aeb629a312527d212ad670783d66d0915</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalPosRightPage</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a6f54b83d1daa304dbdede8cec5a2ed9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalPosRightPage</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a493058728c7663a318b9df00b19fc504</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFixedPercent</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>ab410ec43678122b6e9c0c4d7f315a1e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GRAPHIC_HORIZONTAL_ALIGN</type>
      <name>GetHorizontalAlignment</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a1cd6e8285c7ab59b7cb7b37b4adcf1a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GRAPHIC_HORIZONTAL_ALIGN</type>
      <name>GetHorizontalAlignmentRightPage</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a3ddc7558ec6e99de37ec06686650c872</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GRAPHIC_VERTICAL_ALIGN</type>
      <name>GetVerticalAlignment</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a1e837585f59e211a9d16402e803b242d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFirstPage</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a8e68f544696e8cc36a994fb03de98786</anchor>
      <arglist>(int pageno)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastPage</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a16ac8375b771467f77e49777c1782403</anchor>
      <arglist>(int pageno)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPos</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a9c3b063de45716a489ecc326ed4792c6</anchor>
      <arglist>(Evpu16 pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPos</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a3c9c0ddd8e2de13b6c79e2837628f2b1</anchor>
      <arglist>(Evpu16 pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>ae291d2677fd7361f0e570401306c1ed2</anchor>
      <arglist>(Evpu16 width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHeight</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>aa08536ac071d2b50b3c2ceac97aa1fbf</anchor>
      <arglist>(Evpu16 height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVisible</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a4a2719d0343076c56cfc7315c5a01efd</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPageEdgeRef</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>ad28bfee3d7d5e7f6d941509ffc87522d</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIndependentRightPage</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a29a71f6334f5f9dd0cec8185e375dc5e</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPosRightPage</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a3e47be2b4578b0ec5f010202b5e48402</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPosRightPage</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a5f83ee719f7086308d4ce3b7e3d3ed76</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFixedPercent</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>aa9602912fc60349b338c485c8a90981a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalAlignment</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>afc62329a007dfd4f3cc960aebd257df5</anchor>
      <arglist>(GRAPHIC_HORIZONTAL_ALIGN alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalAlignmentRightPage</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a47e2ddc9fab536501cb822757cd6d664</anchor>
      <arglist>(GRAPHIC_HORIZONTAL_ALIGN alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalAlignment</name>
      <anchorfile>class_f_c_page_graphic.html</anchorfile>
      <anchor>a110832e1f800c978b8dbb8f20ddd2e4c</anchor>
      <arglist>(GRAPHIC_VERTICAL_ALIGN alignment)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPageGraphics</name>
    <filename>class_f_c_page_graphics.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCPageGraphics</name>
      <anchorfile>class_f_c_page_graphics.html</anchorfile>
      <anchor>a5acb5010645e56fa7e17314f46bf595d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_page_graphics.html</anchorfile>
      <anchor>a3d21b671b0eb585e56cf91919c71853c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCPageGraphic *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_page_graphics.html</anchorfile>
      <anchor>a6232eaf316e2ebbbb751c77099f48447</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPages</name>
    <filename>class_f_c_pages.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCPages</name>
      <anchorfile>class_f_c_pages.html</anchorfile>
      <anchor>a40df587e988cbf874b6d32248932560e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_pages.html</anchorfile>
      <anchor>afd886d15e318ceff9a144dcad8f2977e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCPage *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_pages.html</anchorfile>
      <anchor>abaf831352a3740203228250aa4ebf14e</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AppendBlank</name>
      <anchorfile>class_f_c_pages.html</anchorfile>
      <anchor>abb0e3b24a75ab43f8fa48f39a7d29a37</anchor>
      <arglist>(bool updatelayout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>InsertBlank</name>
      <anchorfile>class_f_c_pages.html</anchorfile>
      <anchor>abe571a22127814225405b569d8d05581</anchor>
      <arglist>(int beforepageno, bool updatelayout)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPageText</name>
    <filename>class_f_c_page_text.html</filename>
    <base>__FCInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>TEXT_HORIZONTAL_ALIGN</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ad1421b2df4abcf26d2d034d6827760bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTHORIZALIGN_LEFT</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ad1421b2df4abcf26d2d034d6827760bbae3838d568d1549ebadd3f3f3e62ff236</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTHORIZALIGN_RIGHT</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ad1421b2df4abcf26d2d034d6827760bba9b14aeed32f0ce5bf0d99a07100e7cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTHORIZALIGN_CENTER</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ad1421b2df4abcf26d2d034d6827760bbaea9ec147d957c81c032b4d49610e623a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TEXT_VERTICAL_ALIGN</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>aad2672cbd757582abe95c7406959b278</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTVERTALIGN_TOP</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>aad2672cbd757582abe95c7406959b278a08deef47658076e2d0e4d7f5864cf905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTVERTALIGN_BOTTOM</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>aad2672cbd757582abe95c7406959b278a466366ec0bff35f81da804d5a7a7a816</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTVERTALIGN_CENTER</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>aad2672cbd757582abe95c7406959b278a910d48047e564ffa97fcd841b210130c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TEXT_ASSIGNMENT</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a9be07c9222cd09c50e977a716fb9a436</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTHORIZALIGN_LEFT</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ad1421b2df4abcf26d2d034d6827760bbae3838d568d1549ebadd3f3f3e62ff236</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTHORIZALIGN_RIGHT</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ad1421b2df4abcf26d2d034d6827760bba9b14aeed32f0ce5bf0d99a07100e7cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTHORIZALIGN_CENTER</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ad1421b2df4abcf26d2d034d6827760bbaea9ec147d957c81c032b4d49610e623a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTVERTALIGN_TOP</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>aad2672cbd757582abe95c7406959b278a08deef47658076e2d0e4d7f5864cf905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTVERTALIGN_BOTTOM</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>aad2672cbd757582abe95c7406959b278a466366ec0bff35f81da804d5a7a7a816</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTVERTALIGN_CENTER</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>aad2672cbd757582abe95c7406959b278a910d48047e564ffa97fcd841b210130c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a14f1497f23cc38459dd9db85461e547f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a90c16a6beb8690bf9472518d401e9df6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPageText</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a29414e6f87fbc18a4cb22ef23575833a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateTextString</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a36b0c6b6df62670a62d8487362ab9aae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCTextBlock *</type>
      <name>CreateTextBlock</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a91c74066426006e3e9bf23ea293f1f4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFirstPage</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>aa60472c669eb13e6800d4c172068f741</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLastPage</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a7fe15c2a09b4b6d3e33bd52e46b65802</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEXT_HORIZONTAL_ALIGN</type>
      <name>GetHorizontalAlignment</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ac57744296164467769af8765779cf0db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEXT_VERTICAL_ALIGN</type>
      <name>GetVerticalAlignment</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ad2b6a7dd6ffb113e60500f5d62ca5506</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEXT_HORIZONTAL_ALIGN</type>
      <name>GetHorizontalAlignmentRightPage</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a81dbae4518737173c59c5c02f4d41b56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEXT_ASSIGNMENT</type>
      <name>GetPageAssignment</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ada3d4cc21033d5557334df709306d3e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPageEdgeRef</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a1ddb6ca90a54cadcb0beea2a7345a030</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFrameEdgeRef</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a3818c5f943e896004a293d1509799858</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalPos</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a413698b3902ee0f93d319f21fc60626f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalPosRightPage</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a01a56f6514132e110c770b167ddaa06e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalPos</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ac52f2ad540cbbb7d97a4230248ff7f21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalPosRightPage</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>aab4df40033c291bb32c7887ee328405a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVisible</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a065af59eb3a85295aea5b9cc35040584</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIndependentRightPage</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ad0d1469d534185140263c8fe710d981c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetTextBlockID</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>aa1e4f9bdbda867418a1dbc4ba490642d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetTextBlockID</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ab4d53545988406a715876170f1c2355b</anchor>
      <arglist>(CMPER textblockid)</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetStringID</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a7d65040595baa116d30546f2055071f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewTextBlock</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a1b5daf06d7cd1b79043e73c832b2c3d1</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveTextString</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a38a8e9f6166631829d83fb0e29700997</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalAlignment</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a16475e444172c967de995366cf0c8718</anchor>
      <arglist>(TEXT_HORIZONTAL_ALIGN alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalAlignmentRightPage</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a684b5b385e15ee7cd5237980f5e5e9c5</anchor>
      <arglist>(TEXT_HORIZONTAL_ALIGN alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalAlignment</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a7b4a60a137681abcb8f1f4a01658f524</anchor>
      <arglist>(TEXT_VERTICAL_ALIGN alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPageAssignment</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>abadd33fdf0ebbb79c368bd1ce07d0efc</anchor>
      <arglist>(TEXT_ASSIGNMENT assign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFirstPage</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ab7a422d92e22f5c22187ad69156a98c1</anchor>
      <arglist>(ePage page)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastPage</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a483a2bc949d65f9d30046f7c7d528fa4</anchor>
      <arglist>(ePage page)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPos</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>af45c6d0c4a102a797eb390ceef6a3b13</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPosRightPage</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>aa9e32dbdcdbcab0ce2c330e7cf849892</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPos</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a33bbfd82fc198739cf0f366fbc41ea51</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPosRightPage</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>af54db4b17f2830fd4f6bdf8714cd4e40</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVisible</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ab1c06f61f7d24f220f97770296d65fef</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIndependentRightPage</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ad2873c5cf1c5c3a801096d264c937cd6</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPageEdgeRef</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ab87f83234bdf4c5ed98d650598ec6a66</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrameEdgeRef</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>a1b13dea72d241db5e0bb02a5c60ac1f8</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeepDeleteData</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>ac446a0b9e2007f31cd938d0246a7e12b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_page_text.html</anchorfile>
      <anchor>aaaae8f950942a0645045bf1b9e93d593</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPageTexts</name>
    <filename>class_f_c_page_texts.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCPageTexts</name>
      <anchorfile>class_f_c_page_texts.html</anchorfile>
      <anchor>a2ca95dc1777b2c6e8210bdc3c1b579c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_page_texts.html</anchorfile>
      <anchor>a2eea572c3acc5b1cc61e264df3753a22</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCPageText *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_page_texts.html</anchorfile>
      <anchor>a871d92c6d14e6e16c17f71dd7113bc32</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPart</name>
    <filename>class_f_c_part.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>PREDEFINED_PARTIDS</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a2dc3448d01aacab340a20bddf6fe3aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTID_SCORE</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a2dc3448d01aacab340a20bddf6fe3aeea630e1bc98d028f02ec453007e4eee64b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTID_CURRENT</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a2dc3448d01aacab340a20bddf6fe3aeeaa3a01921a7598fe61607250ad7b72063</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTID_UNKNOWN</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a2dc3448d01aacab340a20bddf6fe3aeeae1c4e7390f2c491922b4e00328c3eaa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTID_SCORE</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a2dc3448d01aacab340a20bddf6fe3aeea630e1bc98d028f02ec453007e4eee64b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTID_CURRENT</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a2dc3448d01aacab340a20bddf6fe3aeeaa3a01921a7598fe61607250ad7b72063</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTID_UNKNOWN</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a2dc3448d01aacab340a20bddf6fe3aeeae1c4e7390f2c491922b4e00328c3eaa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a94a2e3969f396b6233fc7039dd764039</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a0f2217b521bff74cd7a48d0ea1e3d0f1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPart</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a14d5462e6c44fbe13be9dbf588eb8cfd</anchor>
      <arglist>(EPARTID partid=PARTID_CURRENT)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCPart</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>ad7653565840ab6ac3964a07e600f008b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EPARTID</type>
      <name>GetID</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a7f8c542f65387452dbfa27f306e430fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateCustomTextString</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a7b949bad2a769fa68e9cef2a5e94f6b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteCustomText</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a3c15fce88414e58e82979341dcb878eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveCustomTextString</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>ae3960f7a44b463923614f71082d75696</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>EDOCID</type>
      <name>GetDocumentID</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a3611efc7ddd8d90c75f415eb25e67ac0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetID</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a04b4044523069f8f389fedb3a0850cf1</anchor>
      <arglist>(FCPart *pPart)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SwitchTo</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>aae9689cf15c71265b5711beb84cc5201</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SwitchBack</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a26764360703ff180d3972fbc6a7111a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ViewInDocument</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>aa37d7d917e5680c5708c200f89c33b1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStaffIncluded</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>ac8030da855417dfd89a6e8aebe7de80f</anchor>
      <arglist>(int staffno)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsScore</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>adc616daf764860711ae06712cae214b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPart</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>ab3d94badc1b9700a466016c7ac4875d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCurrent</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a44fe1ac4e3e689ebaead5c581b124df6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCurrentDocument</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>abd923cf5a9ef813d1631315a3b66ddc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasCustomText</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a7f67d5d6e8e3146258dfa2042e1295ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdentical</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>afa15eb79559233fd4a11ddf2b215e682</anchor>
      <arglist>(__FCBase *pCompareObject) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetCurrent</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a78d1e66808a1c2c7d56657f6ec1a3b71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetName</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a95c1baf39ad36878eb9fa93913ca9563</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShouldPrint</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a300e68a7adbe3c01188bedce83cd21c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShouldExtract</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a29d932b64df126e844181042f40ebbb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShouldUpdateLayout</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a863ee3ab95379e48d71c2d2bbf2dde77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShouldUpdateSpacing</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a36c59a5fd69944585edc22fc2ee155fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUnlinkedInstrument</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a70049c25f618e01b54d64b2b6169fa4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>utwobyte</type>
      <name>GetOrderID</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a8ce702172792cdc48ec9ea7dc54f34fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPrintCopies</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a7e8ad0226affbe416f5edfa53b439e71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShouldPrint</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a203d0bf551eec9c443aa11a878a5b0bd</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShouldExtract</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>ae35b17e9638f13e07e8f1f385f2bb63b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShouldUpdateLayout</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a9108bb046c88660383278f271730d84a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShouldUpdateSpacing</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a483240fa3b58dab997289678bf0d153a</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUnlinkedInstrument</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>abb04bb662605fa534627efd7336ebfac</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOrderID</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>ad76d0af21c8b2b383c56eda748bbc0d3</anchor>
      <arglist>(utwobyte idvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrintCopies</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a97e0d5e24769ab4b6b1a390f5ecc1a2c</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Print</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>a53b29ef79528cd6cb72423ed8a5ff81e</anchor>
      <arglist>(FCPrintSettings *pSettings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_part.html</anchorfile>
      <anchor>aea29763e85a11868d35e23c516b68ea9</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPartExtractPrefs</name>
    <filename>class_f_c_part_extract_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="enumeration">
      <type></type>
      <name>EXTRACT_SPACING</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a3ebfdca199476fa3f336f89d6ca12e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTRACT_SPACING_TIMESIG</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a3ebfdca199476fa3f336f89d6ca12e09a236244e9cec6ca5f1a5615527ede6c5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTRACT_SPACING_BEAT</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a3ebfdca199476fa3f336f89d6ca12e09afb45cb38bfdf490788d7dcb1e2c3f692</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTRACT_SPACING_NOTE</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a3ebfdca199476fa3f336f89d6ca12e09aaa53bf246093ab2b01d7e8a7d5a88222</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTRACT_SPACING_PRESERVECURRENT</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a3ebfdca199476fa3f336f89d6ca12e09a3aa3184f9fda1db0f62e0a141c922ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTRACT_SPACING_TIMESIG</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a3ebfdca199476fa3f336f89d6ca12e09a236244e9cec6ca5f1a5615527ede6c5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTRACT_SPACING_BEAT</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a3ebfdca199476fa3f336f89d6ca12e09afb45cb38bfdf490788d7dcb1e2c3f692</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTRACT_SPACING_NOTE</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a3ebfdca199476fa3f336f89d6ca12e09aaa53bf246093ab2b01d7e8a7d5a88222</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTRACT_SPACING_PRESERVECURRENT</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a3ebfdca199476fa3f336f89d6ca12e09a3aa3184f9fda1db0f62e0a141c922ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>ac9616cfb31f3848e841562311b6c9a83</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>ac223c0c29e30cbc086c0531646712220</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPartExtractPrefs</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a7a36331ef680251a8a1cb06f26c65a49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSpacingMethod</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a9409c250a510e591e49d0f3a7d1ab8d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseNewStaffPlacement</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a79478ad4bf43f13a9f0aff441eee7408</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetNewTopStaff</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>aeb4a6ce631b24dcec1494fbe9b921db7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetNewSystemDistanceBetween</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>ac3f00c003e938060f4057efbde170cd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRemovePageOneBlocks</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a59eb685bbd2a837a24442f4e42018512</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRemovePageTwoPlusBlocks</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a0c5575090058ff8fcd289dfcae2f9663</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRemoveMultiPageBlocks</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>ac45f77753599f5a95f7874a7bb9f26dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRemoveStaffGroupNames</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a4780b2d8295f0c441e68f9cc621a1521</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFitMeasuresPerSystem</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>ac3a4a59d15b8db08cac3ae6be1189586</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFitMultimeasureRestAsOne</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a5bc92e995a786939cad012da79398bc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMeasuresPerSystem</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a0631072a9e2f86bc683c4844e0c992a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPromptForEachName</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a25ca482e96a5298b157cfac1c460df8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCreateNameHeader</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a9db3405b2a80c2b570265009c79f95dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetNameHeaderHorizontal</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>ab03932986025387db2d963d38342e9e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetNameHeaderVertical</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a90b85400aa68f618500b82e9257ffd22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetNameHeaderResize</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>aba6b35f2f5e58a13bae0ecbdacfdb58a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetNameHeaderStartPage</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>abe4c1a3031bfc084206d0f0578d3daeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetNameHeaderEndPage</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a648ab1fa0a295294bfaf95c6010995d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNameHeaderUseFontName</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a706e5e3c93bdcb62ce4d7afc38da3499</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNameHeaderFontInfo</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>ae07ecc32012eb56fccf57e03548c80f3</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetOpenExtractedParts</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a8e36b37d5ee6610d146b588203b985dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSpaceSystemsEvenly</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a7eb0b61ef399a557938a075536bab718</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpacingMethod</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a94171a1a0d5373a5aa10c933f8ea518d</anchor>
      <arglist>(int method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseNewStaffPlacement</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>ad24b9fadfd3d6d576a0614790d79d887</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNewTopStaff</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a4f094c1a1b1ee569626b31311acbb754</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNewSystemDistanceBetween</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a0496ab6412b70d8e9842b2a565198597</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemovePageOneBlocks</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>abefd4ae3f17a3fd4dfd22db75f57ebfd</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemovePageTwoPlusBlocks</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a033e115c118bcb109e4425e84b4e538b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoveMultiPageBlocks</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>acb95ae3aa278d1bd63477274804771a8</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoveStaffGroupNames</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a0cb4ea1ca76dba735ec95c14597f2992</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFitMeasuresPerSystem</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a8a031739fe4924b36b30044425ed6e46</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFitMultimeasureRestAsOne</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a5f85d3d744e0beb0fd99f7b9ca8e4945</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasuresPerSystem</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a0d6ff6f4e1a08120fba4554e81917d80</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPromptForEachName</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a29e5da90f0ffc9bd5805b27c427bc3bc</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCreateNameHeader</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a2cc9aec558087b123a9091e8bc47821f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNameHeaderHorizontal</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a185f7ce87bd99e95f4dc0cb76808d3c0</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNameHeaderVertical</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a460d620c9ad54f4e1e25fe5604f6cdaf</anchor>
      <arglist>(Evpu16 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNameHeaderResize</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a72cd6f1d4fdf773518ff23105bae3ef4</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNameHeaderStartPage</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>acf0894a6bd7aaaef4b2eedfd0bd3eceb</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNameHeaderEndPage</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a28500915c1b4f1ed02092cd2e7a458d5</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNameHeaderUseFontName</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a24292ed50741cf36416257535c07aee1</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNameHeaderDefaultFont</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a015647d818766c735ac332bb98052e7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNameHeaderDefaultFontName</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a92e947dfd3a1c21b754f0fb95833aff9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNameHeaderDefaultFontSize</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a6401ee9034b4c23dad73ac2b8f22c63a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNameHeaderFontInfo</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a00713f3b16cf7bf0034716da2bb609c2</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOpenExtractedParts</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a2b0aa098fcfd0135682cd70f3bc02a69</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpaceSystemsEvenly</name>
      <anchorfile>class_f_c_part_extract_prefs.html</anchorfile>
      <anchor>a93be17845378bb086dbf0a30552f8036</anchor>
      <arglist>(bool state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCParts</name>
    <filename>class_f_c_parts.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type></type>
      <name>FCParts</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>aab797bfd8a260e5aaee925ced7b9b040</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>a6308541ffd1da6448f32818a3a1cf9fa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAll</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>a678096df32ed07887f0e6e17f9e71778</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ForEachWithScope</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>a524c99744c2e7a4e63b418d3169b0b2d</anchor>
      <arglist>(FCIteratorHandler *pIterator)</arglist>
    </member>
    <member kind="function">
      <type>FCPart *</type>
      <name>GetCurrent</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>ae610fa8934fee4917f34603ce9105c3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCurrentIndex</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>af480a252b5e37c7e868b061aeb8efd3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCPart *</type>
      <name>GetScore</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>a33df1213f0dd9e3ec292a30e56a36630</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCPart *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>a9867306689e80c93fe58ece0c80fe18d</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SortByOrderID</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>ac7a6fd1363b3ef9456017b776c790eaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCPart *</type>
      <name>FindPart</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>ade8babe84de98bb51609a5e5b8fa7988</anchor>
      <arglist>(FCPart *pPartFind)</arglist>
    </member>
    <member kind="function">
      <type>FCPart *</type>
      <name>FindID</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>ab9e3a2be34c65a1089589b60cc338a45</anchor>
      <arglist>(EPARTID partid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>CountPartsOnly</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>a9e40b170ea979fc60f96472540f586b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GenerateParts</name>
      <anchorfile>class_f_c_parts.html</anchorfile>
      <anchor>a5424737d07ff0f9dc7afb919cb9e7f0c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPartScopePrefs</name>
    <filename>class_f_c_part_scope_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_part_scope_prefs.html</anchorfile>
      <anchor>ae22138c2e8af7777cdffa1d48b986008</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_part_scope_prefs.html</anchorfile>
      <anchor>a4fa09efa8240826e2184f25a2cd05b13</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDisplayInConcertPitch</name>
      <anchorfile>class_f_c_part_scope_prefs.html</anchorfile>
      <anchor>a20ee6d09c78458de2195b805c91b8eaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDisplayInConcertPitch</name>
      <anchorfile>class_f_c_part_scope_prefs.html</anchorfile>
      <anchor>af1fd9ca8037e743620b3fbc192083523</anchor>
      <arglist>(bool state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPartStaffVoicing</name>
    <filename>class_f_c_part_staff_voicing.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>PARTWILLDISPLAY</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a47fcda74c99cd1d05dfb43ceed8fb155</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTDISP_ALLNOTES_IN_SINGLE_LAYER</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a47fcda74c99cd1d05dfb43ceed8fb155a793a5ca05213ffa93164288a45eff159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTDISP_SELECTED_NOTES_MULTIPLE_LAYERS</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a47fcda74c99cd1d05dfb43ceed8fb155a3560665bde769d9e05e3f8fe962654df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VOICINGLAYERRULES</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>af5741a270d4c599052e9213b500cab18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VOICINGLAYERRULE_ALL_NOTES</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>af5741a270d4c599052e9213b500cab18aaa5088e0906fa6b8e941dd0748703721</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VOICINGLAYERRULE_TOP_NOTE</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>af5741a270d4c599052e9213b500cab18a0e535c89e3f3ecfe011b52c77d6e25cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VOICINGLAYERRULE_BOTTOM_NOTE</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>af5741a270d4c599052e9213b500cab18ad86936e9291e9edfda4944afbc2cb9c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VOICINGLAYERRULE_SELECTED_NOTES</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>af5741a270d4c599052e9213b500cab18a81b4ed4f98ff7368f788a0bbe9f5af30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VOICINGCOUNTNOTES</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a63f43a30ca75f54bd273cb4054ab8220</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VCOUNTNOTES_FROM_THE_TOP</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a63f43a30ca75f54bd273cb4054ab8220aae58441cd004b57aed891d8a41babba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VCOUNTNOTES_FROM_THE_BOTTOM</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a63f43a30ca75f54bd273cb4054ab8220a1d32ed588ed1b010fc89dd9ab15edacf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTDISP_ALLNOTES_IN_SINGLE_LAYER</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a47fcda74c99cd1d05dfb43ceed8fb155a793a5ca05213ffa93164288a45eff159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTDISP_SELECTED_NOTES_MULTIPLE_LAYERS</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a47fcda74c99cd1d05dfb43ceed8fb155a3560665bde769d9e05e3f8fe962654df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VOICINGLAYERRULE_ALL_NOTES</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>af5741a270d4c599052e9213b500cab18aaa5088e0906fa6b8e941dd0748703721</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VOICINGLAYERRULE_TOP_NOTE</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>af5741a270d4c599052e9213b500cab18a0e535c89e3f3ecfe011b52c77d6e25cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VOICINGLAYERRULE_BOTTOM_NOTE</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>af5741a270d4c599052e9213b500cab18ad86936e9291e9edfda4944afbc2cb9c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VOICINGLAYERRULE_SELECTED_NOTES</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>af5741a270d4c599052e9213b500cab18a81b4ed4f98ff7368f788a0bbe9f5af30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VCOUNTNOTES_FROM_THE_TOP</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a63f43a30ca75f54bd273cb4054ab8220aae58441cd004b57aed891d8a41babba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VCOUNTNOTES_FROM_THE_BOTTOM</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a63f43a30ca75f54bd273cb4054ab8220a1d32ed588ed1b010fc89dd9ab15edacf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a1cb5d30ea71c9543a2d9eb9db7679fab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>ab16d9ade0dc7ca809d65f7949eaf6575</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPartStaffVoicing</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>acc3d9c8c427ea8a7808de719373e7b5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIsVoicingEnabled</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>ab364aa15f94077778724b5c36c53db60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIsVoicingEnabled</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a13ff866c51d48818d844db0252a31991</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>PARTWILLDISPLAY</type>
      <name>GetWillDisplay</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>af4d63fcdec3572703c991c246b865c0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWillDisplay</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a2860d2fe75743e0a378f7cd16beb6f03</anchor>
      <arglist>(PARTWILLDISPLAY value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSingleLayerNumber</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>aaf681282980b819be2cd9ab0097ea9e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSingleLayerNumber</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a950e5bf69941db4b07dae5a4e7525a3c</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>VOICINGLAYERRULES</type>
      <name>GetSingleLayerDisplayRule</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>ad7955970753cd93a0426f3fb2dbe556a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSingleLayerDisplayRule</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>ad8bc80dab916f3a56e16a43b38aaf0f9</anchor>
      <arglist>(VOICINGLAYERRULES value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMultipleLayerNumber</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>af8f584d37528587ee8f2b9d083c6e723</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultipleLayerNumber</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>adbdce0e70ff0f1d00bdf1b2ff72b9cfc</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSingleLayerSelect1st</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a38351386a066a3de02e7b4bf57196393</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSingleLayerSelect1st</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a704de65fa6e588889e9d89a88185fb72</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSingleLayerSelect2nd</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a106962c177f7ba595c13ae0c312deeb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSingleLayerSelect2nd</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>ad4a28fa9ef32018aa464ed0c90efcb0a</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSingleLayerSelect3rd</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a000290cfb2b4f846b5ba183c4b8c67a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSingleLayerSelect3rd</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a5fa1f6a1141b88cec6f35d1d652cbe94</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSingleLayerSelect4th</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a425b3a74f28338fe4abb6c9ed8660cac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSingleLayerSelect4th</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>aa2f1342bbc8f370b2d222fa8f8bbcc15</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSingleLayerSelect5th</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a42ceea233092e231f38a382d6744fc39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSingleLayerSelect5th</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a88e2bcc6a99eb1192b1fdca12ff1205f</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>VOICINGCOUNTNOTES</type>
      <name>GetCountNotesRule</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a147991ebf7a1074b4bc921f36655615e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCountNotesRule</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>ad1c1c532b10e03983721069c3c498ffe</anchor>
      <arglist>(VOICINGCOUNTNOTES value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIncludeSingleNotePassages</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a9113074ae6d6ee93f6170ed682728948</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIncludeSingleNotePassages</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a3c1bbbc7ebfbf09d529d7a9fed1f77cd</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_part_staff_voicing.html</anchorfile>
      <anchor>a8a7ce540ad647130a1f931684e5ae98e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPDFPage</name>
    <filename>class_f_c_p_d_f_page.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type></type>
      <name>FCPDFPage</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a6e6b4f7e54c90ed8c9a430ec16731672</anchor>
      <arglist>(void *pPageStruct, void *pDocStruct)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>ae28eb425571bd46ef379dc30a6bc3730</anchor>
      <arglist>(float width)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetWidth</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>acbaa173d910a5e2728cdfef9d0e0158d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHeight</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a126a458f270c7c7a9929f4dcc0239dbd</anchor>
      <arglist>(float height)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetHeight</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a6ed5a9664aef8a7901fcd7924934e4a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineWidth</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a17b8e84280d93872663a8a6c3b9a94b0</anchor>
      <arglist>(float linewidth)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetLineWidth</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a9dde35c20201d699aacc7915e55f34e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetGrayStroke</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>ae09d0000b6c6ed9cf2dda3d52bea5e0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGrayStroke</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>ab4c56b12f256c1fd310437ce90ab2474</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGrayFill</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a111466faaa156f2e12ff4799292c732d</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetGrayFill</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a64c5c3a7c4f433767761752ae190c06b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetFontAndSize</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>aeb2c08c122ed66396823f4f1a4c8e271</anchor>
      <arglist>(const char *pszFontName, float size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMargins</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a88e851f7718fa1f329c3ac183b7ced2b</anchor>
      <arglist>(float leftmargin, float rightmargin, float topmargin, float bottommargin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawString</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>ad306db58fe3c358d12bb22c547347383</anchor>
      <arglist>(FCString *pString, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawLine</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a0d5d53f08dc03be0c1f3d8bc884d3a6b</anchor>
      <arglist>(float x1, float y1, float x2, float y2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawBlackLine</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>ac19583e6e175890f2cec016adc96326b</anchor>
      <arglist>(float x1, float y1, float x2, float y2, float linewidth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawBlackBorderRect</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>af600dbe6a1c4f3d79b1d44207194cd52</anchor>
      <arglist>(float x1, float y1, float x2, float y2, float linewidth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawTextRect</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a263cb5d06d823486dee24f2b54d8bc8f</anchor>
      <arglist>(FCString *pString, float left, float top, float right, float bottom)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetLastTextPosX</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a86f49a1566ceae083ec21f5ad26b6886</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetLastTextPosY</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>ad85d62211930470686beb879a425ff71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetInnerLeft</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a5cffcfc47a132bc2f8283d497e4445af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetInnerTop</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>ab98e703eafc2c0f2598618075d10ff2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetInnerRight</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a14bd3e77ffd888d35e63115434964a4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetInnerBottom</name>
      <anchorfile>class_f_c_p_d_f_page.html</anchorfile>
      <anchor>a9f8c5cf9a52aaa482d4e2ce1091af0a5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPDFWriter</name>
    <filename>class_f_c_p_d_f_writer.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type></type>
      <name>FCPDFWriter</name>
      <anchorfile>class_f_c_p_d_f_writer.html</anchorfile>
      <anchor>af2ef38b71fc7718c15d825eca5823fb8</anchor>
      <arglist>(FCString *pFileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_p_d_f_writer.html</anchorfile>
      <anchor>ad0496198e87dcd70168ee97fd5a8e990</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Close</name>
      <anchorfile>class_f_c_p_d_f_writer.html</anchorfile>
      <anchor>a57d32422c1587364ba7798ddf0b5b60e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOpened</name>
      <anchorfile>class_f_c_p_d_f_writer.html</anchorfile>
      <anchor>a3d6a8d7b8eed40840a64b649ec3e09e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCPDFWriter</name>
      <anchorfile>class_f_c_p_d_f_writer.html</anchorfile>
      <anchor>aedf6f0b1f3f767c90e937a73337af29e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCPDFPage *</type>
      <name>AddPage</name>
      <anchorfile>class_f_c_p_d_f_writer.html</anchorfile>
      <anchor>a7951c1e6e117cd080821101b0dcf0379</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFileName</name>
      <anchorfile>class_f_c_p_d_f_writer.html</anchorfile>
      <anchor>a1970b753bbfc02695f1e9d90b64380b9</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetLastError</name>
      <anchorfile>class_f_c_p_d_f_writer.html</anchorfile>
      <anchor>a5a01741162894a7cb8ad92ab8ef112e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetLastErrorDetail</name>
      <anchorfile>class_f_c_p_d_f_writer.html</anchorfile>
      <anchor>aa3d7e045c9298bc41183c627a79240ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetDefaultPageSize</name>
      <anchorfile>class_f_c_p_d_f_writer.html</anchorfile>
      <anchor>a24762c0b5b9b6e98c2f2445da7af27a4</anchor>
      <arglist>(float width, float height)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPercussionLayoutNote</name>
    <filename>class_f_c_percussion_layout_note.html</filename>
    <base>__FCInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a9fcefa908868c00fc6b03286eae4f5b5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a5ed873e51d8db5f36fc8bf03d4b57cf1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPercussionLayoutNote</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a45d8001843fde93f4be6adce8fd4bc36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PERC_NOTE_TYPE</type>
      <name>GetRawNoteType</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>af986bf19fb85ed8256c0b48de8b82894</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PERC_NOTE_TYPE</type>
      <name>GetNoteType</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a1d6a51be233d47f1c4d3dc9e28d11b1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetOrderID</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a58ffcbe05b38f53274968de3081866de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaffPosition</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>aa87388554a235c9ca819611e078eda67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetClosedNotehead</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>aae1fa07e079dc0b42f4f6182df8852e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetHalfNotehead</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a5281707da2fc1c780632dc7991b6c38a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetWholeNotehead</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>aedaa2d5554a2fcc3a90d2d03bf7eaf56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetDoubleWholeNotehead</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>acf2ed10c1e1f80a9cfcb586f783691d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteType</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a8068c7b06b919042a0975759a493ead7</anchor>
      <arglist>(PERC_NOTE_TYPE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOrderID</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>abb5663f0e88030862c21e94f7c4c17f5</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaffPosition</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a50f5de467669806f04b991a4c0bb6294</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClosedNotehead</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>aadf60e2661c3f37b3c1ddee74415d56f</anchor>
      <arglist>(fourbyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHalfNotehead</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a43fe71f2ef20e280f104c63a3efecc92</anchor>
      <arglist>(fourbyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWholeNotehead</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a3200672fefd5db247bb887befb41ff4e</anchor>
      <arglist>(fourbyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDoubleWholeNotehead</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a6e18ca608c950e55201d3f51ad5d1360</anchor>
      <arglist>(fourbyte value)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcMidiRawNote</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a184ee62914ee8b92af703230ff85e9a4</anchor>
      <arglist>(FCPercussionMapNotes *pNotes)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcMidiNote</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>a26cc3646a163bda2ad49cc19d9431fbc</anchor>
      <arglist>(FCPercussionMapNotes *pNotes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_percussion_layout_note.html</anchorfile>
      <anchor>af6ff77ad17743cd2f9308cb28f98d2ff</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPercussionLayoutNotes</name>
    <filename>class_f_c_percussion_layout_notes.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCPercussionLayoutNotes</name>
      <anchorfile>class_f_c_percussion_layout_notes.html</anchorfile>
      <anchor>a1a2223ca5d846d868a3e66b5c6dd0faa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_percussion_layout_notes.html</anchorfile>
      <anchor>ac7e327ed939d843261489c6f7cf70805</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetPercussionLibraryID</name>
      <anchorfile>class_f_c_percussion_layout_notes.html</anchorfile>
      <anchor>aa9456a22bc620d8fff517e1a5fd43bb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAllForItem</name>
      <anchorfile>class_f_c_percussion_layout_notes.html</anchorfile>
      <anchor>add25c0c30cf0d2b446de3dbd0ce2685e</anchor>
      <arglist>(CMPER cmper) override</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateNameString</name>
      <anchorfile>class_f_c_percussion_layout_notes.html</anchorfile>
      <anchor>a05a921cdbd473ed64df61e4b57e011ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionLayoutNote *</type>
      <name>FindRawNoteType</name>
      <anchorfile>class_f_c_percussion_layout_notes.html</anchorfile>
      <anchor>a0c8715d6d5c81decad1b37f38c468a50</anchor>
      <arglist>(PERC_NOTE_TYPE notetype)</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionLayoutNote *</type>
      <name>FindNoteType</name>
      <anchorfile>class_f_c_percussion_layout_notes.html</anchorfile>
      <anchor>af63c5e65e2fb8849ac9afabc71a25dcc</anchor>
      <arglist>(PERC_NOTE_TYPE notetype)</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionLayoutNote *</type>
      <name>FindMidiNote</name>
      <anchorfile>class_f_c_percussion_layout_notes.html</anchorfile>
      <anchor>a2a16633de687d06a426687535d2c1129</anchor>
      <arglist>(twobyte midinote, FCPercussionMapNotes *pMapNotes)</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionLayoutNote *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_percussion_layout_notes.html</anchorfile>
      <anchor>a0ff0101dfb2939fcdab351df90a5c66b</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPercussionLayoutNotesLookup</name>
    <filename>class_f_c_percussion_layout_notes_lookup.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_percussion_layout_notes_lookup.html</anchorfile>
      <anchor>a684a4bb7a801389ff362e1f0d18ae316</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPercussionLayoutNotesLookup</name>
      <anchorfile>class_f_c_percussion_layout_notes_lookup.html</anchorfile>
      <anchor>a6ce11d7629b5697a05c7024a89f70da0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionLayoutNotes *</type>
      <name>GetPercussionLayoutNotes</name>
      <anchorfile>class_f_c_percussion_layout_notes_lookup.html</anchorfile>
      <anchor>a3b8eef27602ca9788cb8911b23902272</anchor>
      <arglist>(FCPercussionStaff *pPercussionStaff)</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionLayoutNote *</type>
      <name>FindPercussionLayoutRawNote</name>
      <anchorfile>class_f_c_percussion_layout_notes_lookup.html</anchorfile>
      <anchor>aeebcb369236297b41277a2f51e90efee</anchor>
      <arglist>(FCPercussionStaff *pPercussionStaff, FLAG_16 percussionnote)</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionLayoutNotes *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_percussion_layout_notes_lookup.html</anchorfile>
      <anchor>a48686d2573ea7ca5f9114845adb4e6cb</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPercussionLayoutNotesText</name>
    <filename>class_f_c_percussion_layout_notes_text.html</filename>
    <base>__FCOtherText</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_percussion_layout_notes_text.html</anchorfile>
      <anchor>a368ddc998a0f2ccfa98361f9ce7d4345</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_percussion_layout_notes_text.html</anchorfile>
      <anchor>a6394b5762bf5e26db23e7949df9b104a</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPercussionMapNote</name>
    <filename>class_f_c_percussion_map_note.html</filename>
    <base>__FCBase</base>
    <member kind="enumeration">
      <type></type>
      <name>PERCUSSION_NOTE_TYPES</name>
      <anchorfile>class_f_c_percussion_map_note.html</anchorfile>
      <anchor>a4443472ba20813efb2f949165284714e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPercussionMapNote</name>
      <anchorfile>class_f_c_percussion_map_note.html</anchorfile>
      <anchor>a25ff081f02fcaaec97a018d35e20f46f</anchor>
      <arglist>(int midikey, int notetype, const char *pszName)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_percussion_map_note.html</anchorfile>
      <anchor>a71bce3be0937f06d967281eb7e994e41</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PERC_NOTE_TYPE</type>
      <name>GetRawNoteType</name>
      <anchorfile>class_f_c_percussion_map_note.html</anchorfile>
      <anchor>ad8f46aecd119019ebfa2ed9fe4abfa3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PERC_NOTE_TYPE</type>
      <name>GetNoteType</name>
      <anchorfile>class_f_c_percussion_map_note.html</anchorfile>
      <anchor>a42a1889ed5fef274255cf34e1b953d2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetOrderID</name>
      <anchorfile>class_f_c_percussion_map_note.html</anchorfile>
      <anchor>a8a201d25cb413ce595d695261b8b50cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMidiNote</name>
      <anchorfile>class_f_c_percussion_map_note.html</anchorfile>
      <anchor>a27ebf036639f135e116f0c9aa5008388</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetName</name>
      <anchorfile>class_f_c_percussion_map_note.html</anchorfile>
      <anchor>a76052e7c4e160dde99fc83b6e3b4389e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPercussionMapNotes</name>
    <filename>class_f_c_percussion_map_notes.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type></type>
      <name>FCPercussionMapNotes</name>
      <anchorfile>class_f_c_percussion_map_notes.html</anchorfile>
      <anchor>a571dbd1e8ba8088e08e7bb234ec746c1</anchor>
      <arglist>(twobyte percussionid)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPercussionID</name>
      <anchorfile>class_f_c_percussion_map_notes.html</anchorfile>
      <anchor>aaae5897ecc22f636e48a17ebe7928d52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_percussion_map_notes.html</anchorfile>
      <anchor>a26233472c0812662925be45dd33dd9ca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionMapNote *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_percussion_map_notes.html</anchorfile>
      <anchor>a9200b6bbdc7526d41febc3860ccdcccf</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionMapNote *</type>
      <name>FindRawNoteType</name>
      <anchorfile>class_f_c_percussion_map_notes.html</anchorfile>
      <anchor>a004999b187a888c9fb4a1efe3cfd7f18</anchor>
      <arglist>(PERC_NOTE_TYPE rawnotetype)</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionMapNote *</type>
      <name>FindMidiNote</name>
      <anchorfile>class_f_c_percussion_map_notes.html</anchorfile>
      <anchor>aa58052220f3932b56eb4a0cbb46cb6cc</anchor>
      <arglist>(twobyte midinote)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPercussionMapNotesLookup</name>
    <filename>class_f_c_percussion_map_notes_lookup.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_percussion_map_notes_lookup.html</anchorfile>
      <anchor>ac6f1634888254cd3485794f7e2c75ea1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPercussionMapNotesLookup</name>
      <anchorfile>class_f_c_percussion_map_notes_lookup.html</anchorfile>
      <anchor>adf45631d29368dcfcebf3408901ca3c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionMapNotes *</type>
      <name>GetPercussionMapNotes</name>
      <anchorfile>class_f_c_percussion_map_notes_lookup.html</anchorfile>
      <anchor>af881ddbf2e3b10bdc3bc06ff3f2140b7</anchor>
      <arglist>(FCInstrumentDef *pInstrumentDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPercussionNoteMod</name>
    <filename>class_f_c_percussion_note_mod.html</filename>
    <base>__FCEntryDetailNoteID</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_percussion_note_mod.html</anchorfile>
      <anchor>a1bfdfc4521e21a9afda6bb0e1aab120c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_percussion_note_mod.html</anchorfile>
      <anchor>a147af8113fb785ae2f1c868d50a90728</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPercussionNoteMod</name>
      <anchorfile>class_f_c_percussion_note_mod.html</anchorfile>
      <anchor>ae9913434c68be3bdfbdd310dab2bc1cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetNoteType</name>
      <anchorfile>class_f_c_percussion_note_mod.html</anchorfile>
      <anchor>aa3f381e64eb92a271234c0d219708280</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteType</name>
      <anchorfile>class_f_c_percussion_note_mod.html</anchorfile>
      <anchor>a4ffd4b2e232151c46a8febc054a2d600</anchor>
      <arglist>(FLAG_16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteID</name>
      <anchorfile>class_f_c_percussion_note_mod.html</anchorfile>
      <anchor>a299bf5ac59824e0531002e6a762a31dd</anchor>
      <arglist>(twobyte id) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPercussionNoteMods</name>
    <filename>class_f_c_percussion_note_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_percussion_note_mods.html</anchorfile>
      <anchor>a5f7f505fa2f02daf522c893791054816</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPercussionNoteMods</name>
      <anchorfile>class_f_c_percussion_note_mods.html</anchorfile>
      <anchor>a88a3408d081bbc0f4577630d9e4bb250</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionNoteMod *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_percussion_note_mods.html</anchorfile>
      <anchor>ac8f20671de13d3fe0ddf3f1eaf772833</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPercussionNoteType</name>
    <filename>class_f_c_percussion_note_type.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>void</type>
      <name>FormatName</name>
      <anchorfile>class_f_c_percussion_note_type.html</anchorfile>
      <anchor>ace096ef6817124e9f11545cd67798d61</anchor>
      <arglist>(FCString *pString, int orderid, int grouporderid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetInstrumentID</name>
      <anchorfile>class_f_c_percussion_note_type.html</anchorfile>
      <anchor>a280516d545858e019f39e62662428c6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetParentInstrumentID</name>
      <anchorfile>class_f_c_percussion_note_type.html</anchorfile>
      <anchor>ac0cbec5f24d95f850ba8ffab28b65623</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetDefaultStaffPos</name>
      <anchorfile>class_f_c_percussion_note_type.html</anchorfile>
      <anchor>a088ba92b1215250b0fb745619d4ddf66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetGeneralMIDI</name>
      <anchorfile>class_f_c_percussion_note_type.html</anchorfile>
      <anchor>a595542e903307c398926aed769f51af1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetGroupID</name>
      <anchorfile>class_f_c_percussion_note_type.html</anchorfile>
      <anchor>a79e6923f346294b43c15c1585583de01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCopies</name>
      <anchorfile>class_f_c_percussion_note_type.html</anchorfile>
      <anchor>a66a70a210d3be50b394d674926444bb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCopyGroup</name>
      <anchorfile>class_f_c_percussion_note_type.html</anchorfile>
      <anchor>af8ba021a5906f9731b172b8be17b0783</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>_IsValid</name>
      <anchorfile>class_f_c_percussion_note_type.html</anchorfile>
      <anchor>a92e5f2934df20574b2f2c5b26e3bf50a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPercussionNoteTypes</name>
    <filename>class_f_c_percussion_note_types.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type></type>
      <name>FCPercussionNoteTypes</name>
      <anchorfile>class_f_c_percussion_note_types.html</anchorfile>
      <anchor>a907fb64d5492d3af860e31737b10273b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>FileIsAvailable</name>
      <anchorfile>class_f_c_percussion_note_types.html</anchorfile>
      <anchor>a09c573ebecbad4969140fdac8330cf5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAll</name>
      <anchorfile>class_f_c_percussion_note_types.html</anchorfile>
      <anchor>ac29f4cab30fedab236c3337a8645d5bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionNoteType *</type>
      <name>FindNoteType</name>
      <anchorfile>class_f_c_percussion_note_types.html</anchorfile>
      <anchor>ae75b2c3f6b76d04480da8e8dce962600</anchor>
      <arglist>(FLAG_16 percnotetype)</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionNoteType *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_percussion_note_types.html</anchorfile>
      <anchor>a1678a360b3b46a45687912f36886df87</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLoaded</name>
      <anchorfile>class_f_c_percussion_note_types.html</anchorfile>
      <anchor>a438e32ee9b12fecc86337f75664a97a5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPercussionStaff</name>
    <filename>class_f_c_percussion_staff.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_percussion_staff.html</anchorfile>
      <anchor>a3bd469afb0ca0bf105cb350958d6588c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_percussion_staff.html</anchorfile>
      <anchor>a564a3acf8c0c9665f5b0ceef6df10f3a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPercussionStaff</name>
      <anchorfile>class_f_c_percussion_staff.html</anchorfile>
      <anchor>a05d7984195eebf4762b1a79356d43e21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetPercussionLibrary</name>
      <anchorfile>class_f_c_percussion_staff.html</anchorfile>
      <anchor>a4a1010b0b5f7da6b5310be7ae6ad5c28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPercussionLibrary</name>
      <anchorfile>class_f_c_percussion_staff.html</anchorfile>
      <anchor>aaf3826b5b033f15b3decf98d67786f0e</anchor>
      <arglist>(CMPER cmper)</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionLayoutNotes *</type>
      <name>CreateLayoutNotes</name>
      <anchorfile>class_f_c_percussion_staff.html</anchorfile>
      <anchor>a7934332d6a8659c9dacff9733a84e2e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_percussion_staff.html</anchorfile>
      <anchor>a1fe8d0ef5fb729d93667e67560656b7d</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPerformanceMod</name>
    <filename>class_f_c_performance_mod.html</filename>
    <base>__FCEntryDetailNoteID</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_performance_mod.html</anchorfile>
      <anchor>aba38e408a5822eedd756c1c9e2c817aa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_performance_mod.html</anchorfile>
      <anchor>ae0ab7a30be1e82d099dada1aa4fc3d76</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPerformanceMod</name>
      <anchorfile>class_f_c_performance_mod.html</anchorfile>
      <anchor>a543fb6e99107c3682208a82779da85bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndOffset</name>
      <anchorfile>class_f_c_performance_mod.html</anchorfile>
      <anchor>a39c04244e78e0f89a657a664a41da266</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartOffset</name>
      <anchorfile>class_f_c_performance_mod.html</anchorfile>
      <anchor>aa410d1aaaa014e684a3656c268c33bac</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVelocityDelta</name>
      <anchorfile>class_f_c_performance_mod.html</anchorfile>
      <anchor>a9fbba16d56507b6e67aa03b7ec349a90</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMidiAlter</name>
      <anchorfile>class_f_c_performance_mod.html</anchorfile>
      <anchor>a968ce444eb4156d787b9b878071a4734</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndOffset</name>
      <anchorfile>class_f_c_performance_mod.html</anchorfile>
      <anchor>a6aa45e2f0574025268a016f172ba2a34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartOffset</name>
      <anchorfile>class_f_c_performance_mod.html</anchorfile>
      <anchor>a544a2f2d2929429a6b962db6e2c09f4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMidiAlter</name>
      <anchorfile>class_f_c_performance_mod.html</anchorfile>
      <anchor>aa46138ce1ccf067bbc4d5fd9b1bc59f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVelocityDelta</name>
      <anchorfile>class_f_c_performance_mod.html</anchorfile>
      <anchor>a086fa1e1eb7eaddcff5d2a4ced7f6635</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteID</name>
      <anchorfile>class_f_c_performance_mod.html</anchorfile>
      <anchor>a5db897e92f1194366a9f77d1619bddd7</anchor>
      <arglist>(twobyte id) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPerformanceMods</name>
    <filename>class_f_c_performance_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_performance_mods.html</anchorfile>
      <anchor>acb55fafc5b42683bbc05b38f2d14aa75</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPerformanceMods</name>
      <anchorfile>class_f_c_performance_mods.html</anchorfile>
      <anchor>aa82f73adba98b5117b8267713ae42124</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCPerformanceMod *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_performance_mods.html</anchorfile>
      <anchor>ae8ceba51a5299cfa7b17c5f04d7aefe9</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPianoBracePrefs</name>
    <filename>class_f_c_piano_brace_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a7a62b4b67729f44df66b5346618d47b0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>aa482f0f3a98af228644c1fa375dbe17c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPianoBracePrefs</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a476452744b691302f1be43d7f1f7e38b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetHorizontalInnerTip</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a281c5492bc41df67ce6fea28a7219afe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetVerticalInnerTip</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a80295b116533be33622ef7ec07be999f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetHorizontalInnerBody</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>af36ccd54296f8c71d01c822917fa9304</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetVerticalInnerBody</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a2846f48d8b41e1221b08cfc8d0738313</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetHorizontalOuterTip</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a1b00fe7382fa764b6d4d1015eaa3a4d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetVerticalOuterTip</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a88c2ff14eaef177fe158bae8b865b7e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetHorizontalOuterBody</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>ab5ef58cbd57755ae78de7cfd1380cd08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetVerticalOuterBody</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>af918697280d90350914348ecc6808bda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetWidth</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>ab5224a4e073e016d112d02e3b06fd77f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetCenterThickness</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a0a862f26187d27736c888fa98be36707</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetTipThickness</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a216fd6eaac09f02e2d13ff3d638fe9bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalInnerTip</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>af16d406548acf2e924eaa8976479b4b1</anchor>
      <arglist>(fourbyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalInnerTip</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>af59fe3b24eed74fd04a008e9804a4974</anchor>
      <arglist>(fourbyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalInnerBody</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a15f1f448582223e2b361d2f7910f536a</anchor>
      <arglist>(fourbyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalInnerBody</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>af214eec41c30aeda03278a20466ab783</anchor>
      <arglist>(fourbyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOuterTip</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a9b34d720f432533ac70882e9346fd59e</anchor>
      <arglist>(fourbyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalOuterTip</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>afba37d9f32f0c5b3c88b7e079a6e5e6c</anchor>
      <arglist>(fourbyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOuterBody</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a9fe25e05e5e188e81651437e8100aa19</anchor>
      <arglist>(fourbyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalOuterBody</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>ab77b5cd4ee0d7f9d397572e7279119ad</anchor>
      <arglist>(fourbyte position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a30d8a160c6e23a9b7dae1949f763c702</anchor>
      <arglist>(fourbyte width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCenterThickness</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>a2ff6b9a9f75edb5cd229831e153876a3</anchor>
      <arglist>(fourbyte thickness)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTipThickness</name>
      <anchorfile>class_f_c_piano_brace_prefs.html</anchorfile>
      <anchor>aee6034a9588986671bdbe7d467790ed0</anchor>
      <arglist>(fourbyte thickness)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPlaybackPrefs</name>
    <filename>class_f_c_playback_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="enumeration">
      <type></type>
      <name>PLAYBACKSTARTMODE</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a791647afa928b19e8652c0785b2233d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAYBACKSTART_MEASURE</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a791647afa928b19e8652c0785b2233d8a6ba1454c5b26bc76d0cf55d34e4adc4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAYBACKSTART_LEFTMOST</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a791647afa928b19e8652c0785b2233d8a4621225c655a05643e7f4a754b089065</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAYBACKSTART_CURRENTCOUNTER</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a791647afa928b19e8652c0785b2233d8a48c2a3cfba41b7fc5c75a808a37c8247</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAYBACKSTART_MEASURE</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a791647afa928b19e8652c0785b2233d8a6ba1454c5b26bc76d0cf55d34e4adc4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAYBACKSTART_LEFTMOST</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a791647afa928b19e8652c0785b2233d8a4621225c655a05643e7f4a754b089065</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAYBACKSTART_CURRENTCOUNTER</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a791647afa928b19e8652c0785b2233d8a48c2a3cfba41b7fc5c75a808a37c8247</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>aa3e9c729d9f97bd0583a822e50557ac7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a48bdce031189056ae32e13635a1899e0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPlaybackPrefs</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a5d06b97f1e4aa2623d538935fe2488ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBaseKeyVelocity</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a2ad496e4033edd43408c9fac0f4bae95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetMetronomeBeat</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>ac33fcd703f2a8e911b22958d8522d6f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMetronomeSpeed</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a9aa104763c8d4b330a2f70e025946bc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSwing</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>aa90e1c71c9ab7b8fda9d4e8d1b357a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eMeas</type>
      <name>GetStartMeasure</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>ab9f1b8cd59a422bdb7313b91a1c9fb6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eMeas</type>
      <name>GetStopMeasure</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>ac7af6b390ac53d517d898ed857f1e27d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PLAYBACKSTARTMODE</type>
      <name>GetStartMode</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a64531f9c9477439fa1b3bfa887a69397</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSendPatchesToMidi</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a9478c57185365d58704ebb9a21e1d4f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBaseKeyVelocity</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>afb8aec2ae954f3937bd61188db431856</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMetronomeBeat</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>ab68e6393b58be15ed4d16205f6823192</anchor>
      <arglist>(TimeEdu32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMetronomeSpeed</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a44f0db9e6d2d64403343e01dae63b141</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSwing</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>af712e08b29b8c0f2042cc899c9a3787f</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartMeasure</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a7be504b28b3e7610b761d61bd5b6ca0b</anchor>
      <arglist>(eMeas measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStopMeasure</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>a367785ce26f17b5ceca8b6fd0c53f424</anchor>
      <arglist>(eMeas measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartMode</name>
      <anchorfile>class_f_c_playback_prefs.html</anchorfile>
      <anchor>ac7a99d4c7f3271302c5798b8a9e7e88f</anchor>
      <arglist>(PLAYBACKSTARTMODE mode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPoint</name>
    <filename>class_f_c_point.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_point.html</anchorfile>
      <anchor>a6e0994ba2b69f697b0f161367a165b9b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPoint</name>
      <anchorfile>class_f_c_point.html</anchorfile>
      <anchor>a1d4148a2d42554857b2a49bae730c621</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetX</name>
      <anchorfile>class_f_c_point.html</anchorfile>
      <anchor>ad7dd9556e23fd3582393c4d9e62973c1</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetY</name>
      <anchorfile>class_f_c_point.html</anchorfile>
      <anchor>addc7c391095ccac4ad46ee5d9b4e3361</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetX</name>
      <anchorfile>class_f_c_point.html</anchorfile>
      <anchor>ae6e51a7ff4da7a6f64794c77028d4caf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetY</name>
      <anchorfile>class_f_c_point.html</anchorfile>
      <anchor>af7edb03f094fe0a990fd08bd2b0ad6b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MoveX</name>
      <anchorfile>class_f_c_point.html</anchorfile>
      <anchor>a81239d69294242ac1d505ee9b8e76b2b</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MoveY</name>
      <anchorfile>class_f_c_point.html</anchorfile>
      <anchor>a603dd2737c154adc2cf5b8a0f746bc65</anchor>
      <arglist>(float value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPrimaryBeamMods</name>
    <filename>class_f_c_primary_beam_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_primary_beam_mods.html</anchorfile>
      <anchor>a64306c5405b96ff8af2f3c22c010faa0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPrimaryBeamMods</name>
      <anchorfile>class_f_c_primary_beam_mods.html</anchorfile>
      <anchor>af7e3a9b9a31c25d124f88ddf87cc2cd5</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCBeamMod *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_primary_beam_mods.html</anchorfile>
      <anchor>ac681bef5477f1668552c8e6ab40c9f8b</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCPrintSettings</name>
    <filename>class_f_c_print_settings.html</filename>
    <base>__FCBase</base>
    <member kind="enumeration">
      <type></type>
      <name>PRINTODDEVENMODES</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a99f64654bd808dd2befd1d94dd390235</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINTODDEVEN_ALL</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a99f64654bd808dd2befd1d94dd390235abe72fdbb7ca84ca0112e0fe0a14c9a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINTODDEVEN_ODD</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a99f64654bd808dd2befd1d94dd390235a5782629efc2afb31c1fcd4c6b01d89d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINTODDEVEN_EVEN</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a99f64654bd808dd2befd1d94dd390235a702e815d8047ee663dca240369f517c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINTODDEVEN_ALL</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a99f64654bd808dd2befd1d94dd390235abe72fdbb7ca84ca0112e0fe0a14c9a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINTODDEVEN_ODD</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a99f64654bd808dd2befd1d94dd390235a5782629efc2afb31c1fcd4c6b01d89d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINTODDEVEN_EVEN</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a99f64654bd808dd2befd1d94dd390235a702e815d8047ee663dca240369f517c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a9fdb1d58f25deb6b27e150945c2bc3cf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCPrintSettings</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>ab9d57b2381e0e7c38b7ab62dfa28456c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetCopyCount</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>adb9faa97c0738646307a1e50eff3842d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetColor</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a05dd0d9e32bfe0ba9a8e86f30f33a970</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartPage</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a19a1019e8f28cad2aa134b82a8d4752a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndPage</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a24a3874b77df125ff8bb20850769a198</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetReverse</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a0699a24f58548ee742ba56abbf6ed819</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDrawCropMarks</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a04cec8ec0069b6503118511c156e9c80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDrawRegistrationMarks</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a89e668deca1f6211da506901a8eb38f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDrawFileName</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a350001a7cbf4e5c1ab7d5b3ed70338fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTile</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a5a481b555e744a838bdf07d8f5b343aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLayoutCount</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>ad428c1dc684bee35c5334eb5cc1231a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu32</type>
      <name>GetTileOverlap</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>afb7ddaa91d69dbc453277e5ae3488b8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFitWithinMargins</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a7d75aedc61107d24041d8def7aaea342</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PRINTODDEVENMODES</type>
      <name>GetOddEvenMode</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a5ed69b391d7574773e8525b1d0421f23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetPageRangeString</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a9741417f780d7b4995162b9baa0861d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCopyCount</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>af192e86118f7f3343cc0d76bb51f441e</anchor>
      <arglist>(twobyte copies)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetColor</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>ad253bffcbe475bea9005124a9e90cc35</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartPage</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a2c3420668b067a7a96c0d39beada65a2</anchor>
      <arglist>(twobyte startpage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndPage</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a822fa263c611218a608042c7157bcc55</anchor>
      <arglist>(twobyte endpage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReverse</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a17407c0f05914cdf4cf27b57cc7b0df2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDrawCropMarks</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>ad5f480902a1d7c1f1efff893b7896d60</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDrawRegistrationMarks</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>aeaaff4d93b2e3f9b5b5f3794e8448cc9</anchor>
      <arglist>(twobyte state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDrawFileName</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a8a9d7b42986acc3ae5a821d011317167</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTile</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>ac1e0ec34337148278ca8476a035387ab</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLayoutCount</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a8b67599c4f9a0b40c78aa3525dac4d45</anchor>
      <arglist>(twobyte count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTileOverlap</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a78b895af4db1552383fab12cdecf4ae9</anchor>
      <arglist>(Evpu32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFitWithinMargins</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a2a4bd3be5275e7172d12de3292f1eb5b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOddEvenMode</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>ac42aa971e72760fa759d65a2b4e0c5db</anchor>
      <arglist>(PRINTODDEVENMODES value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPageRangeString</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a0081761a70dff8cdf89c41614badc679</anchor>
      <arglist>(const char *pszString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PrintCurrent</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a25934a6deb817a88fed3fc4083522b4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PrintDocument</name>
      <anchorfile>class_f_c_print_settings.html</anchorfile>
      <anchor>a0860167416208607b8029377c09927c2</anchor>
      <arglist>(FCDocument *pDocument)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCRawText</name>
    <filename>class_f_c_raw_text.html</filename>
    <base>__FCBaseData</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a5ad6523f9d020cb4f9bfd3cfb471277c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a25e65a374287e173f8848d3b2a658383</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCRawText</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a6d233c47a1852b8c959cc985d8e8cff9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCRawText</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>ac58665231159dae726bbc02e37147990</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a0efa58a74d5ac7386ecf27bce026d8bf</anchor>
      <arglist>(twobyte number)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a46a8fa17af76ff652115f369140629c1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveAs</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a9c3f86efe59521328a2dea01b9d56f6b</anchor>
      <arglist>(twobyte number)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNew</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a14b1958f2c5fb18043cbf3a75f203066</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetText</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a9ce13ece1c61856baabe5cdec68409d2</anchor>
      <arglist>(const FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetText</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a63a79bc64962f4294f7128f335601838</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual twobyte</type>
      <name>GetItemNo</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>ac0ed6fcc27e47fc13ce5e814f0d6e33d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateString</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a05c04d43991ef827047327b5b521cd12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a9f44a2e55daca9c3a0a3414601f4e93c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>SetRawTextNumber</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a1ed52d4543d6c555126f8e3dfc4cd5db</anchor>
      <arglist>(twobyte number)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>DataSizeLoad</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a8c3feeea8514a6b03f93e4c0758cc65e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void *</type>
      <name>Allocate</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a9cf20abcd49f9abdb792139dd7256757</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Deallocate</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>aafe08b50e3a6e5e4ede699b8c24296b0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>IsDynamicSize</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>ad60b6e0de5d2f645c3c086a2ddf8a5c6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>EVERSION</type>
      <name>EnigmaVersion</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a035ab300b5fd3eda5b9ad6eb99cc1692</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>adf46b65ff4851653cdabc00469ea53dc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>__FCBaseData *</type>
      <name>CreateObject</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>acd571595545bce757b215902f150be1d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasUnicodeSupport</name>
      <anchorfile>class_f_c_raw_text.html</anchorfile>
      <anchor>a6795de283f02fcf424bfbf11036dbd84</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCRepeatPrefs</name>
    <filename>class_f_c_repeat_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="enumeration">
      <type></type>
      <name>REPEATBACKTOBACKSTYLES</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aad8221a402e6a92499d45ee4c68a357a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPBACKTOBACK_THIN</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aad8221a402e6a92499d45ee4c68a357aadfb3670f48734870754ef504142e81b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPBACKTOBACK_MIXED</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aad8221a402e6a92499d45ee4c68a357aa9f6d1f1c1871d5712bd33c2312fe9f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPBACKTOBACK_THICK</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aad8221a402e6a92499d45ee4c68a357aa37ab184a1eac7b69f4880c53e7f3b971</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>REPEATWINGSTYLES</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a5a2392c7284d76c7142e533d0808b94f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPWING_NONE</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a5a2392c7284d76c7142e533d0808b94fa926ac86eb6b324f614b5847deadb0124</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPWING_SINGLE</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a5a2392c7284d76c7142e533d0808b94fa99b5cfd5e80092e1dfc8259cf563a940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPWING_DOUBLE</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a5a2392c7284d76c7142e533d0808b94fa7b0c17c829a58908bbc447ea0e73839c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPWING_CURVED</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a5a2392c7284d76c7142e533d0808b94fafaf8fbf56394d5fc5e6f5baa7d258850</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPBACKTOBACK_THIN</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aad8221a402e6a92499d45ee4c68a357aadfb3670f48734870754ef504142e81b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPBACKTOBACK_MIXED</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aad8221a402e6a92499d45ee4c68a357aa9f6d1f1c1871d5712bd33c2312fe9f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPBACKTOBACK_THICK</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aad8221a402e6a92499d45ee4c68a357aa37ab184a1eac7b69f4880c53e7f3b971</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPWING_NONE</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a5a2392c7284d76c7142e533d0808b94fa926ac86eb6b324f614b5847deadb0124</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPWING_SINGLE</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a5a2392c7284d76c7142e533d0808b94fa99b5cfd5e80092e1dfc8259cf563a940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPWING_DOUBLE</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a5a2392c7284d76c7142e533d0808b94fa7b0c17c829a58908bbc447ea0e73839c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPWING_CURVED</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a5a2392c7284d76c7142e533d0808b94fafaf8fbf56394d5fc5e6f5baa7d258850</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a57c740bf95d523c431ac1b7a9ab7dad9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a0aa1feca97c61eed6ba30cf927a3f376</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCRepeatPrefs</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>ac7577b944a573f8d5c2770b2dbb2060a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetHeavyLineThickness</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>ab2e5a68e0932387d0a0d3573216f1c4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetThinLineThickness</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a710c996d483a8ce095443d1ba9eba9fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetSpaceBetweenLines</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a6f13f095e7f79f47c2f03081bdddeaa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>REPEATBACKTOBACKSTYLES</type>
      <name>GetBackToBackStyle</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>ab49da4d20be01bcbbd9ff27a108361c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetForwardSpace</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>ad3cd0d6dd0e5fcccc3c16d3d7059e24c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetBackwardSpace</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a78a0de9a2718600311a76739e0611ec5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalTopDotAdjustment</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>ac5999c3d554f2d787282857cb21a3716</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalBottomDotAdjustment</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aa3822725e6f38aec62e5d03b3906a469</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>REPEATWINGSTYLES</type>
      <name>GetWingStyle</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a81fe2cd2f1b1a945484906b3697a9fc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetAfterClefSpace</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a4d9ca9ca1fe41c33b38ea0ed7a68a42b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetAfterKeySpace</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>ab5df4199938b3882025fe722ff61c190</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetAfterTimeSpace</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a203b0babbc3f46789d10a75302e47318</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetEndingBracketHeight</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a61c9a34a48ec10acb173228747eaa486</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetEndingFrontHookLength</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a59568cf71d0081adc0377138bb36ffc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetEndingBackHookLength</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aac478b0762e57edbc38215c9f5bdadb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetEndingLineThickness</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>ab4070180da82209bd252bc66c9d663b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndingInsetStart</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a28057ba78b01c4749c50e1a49e5b65a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndingInsetEnd</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>af25c28e84f1c142fc50cfd4330d3ec1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetEndingHorizontalText</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a3dc0fe3b0b32b0acf0699f45b10a9fcf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetEndingVerticalText</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a73a3969ae6cb7ba829a68093e18e1252</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDotAfterNumber</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a3380229034d0001e57a260c60f1313eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaxPasses</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a875c2461f4977b2b30658f396262ddb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetThinInnerBracketReference</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aaa73e013eb97caa64f85a5bd8ceea989</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHeavyLineThickness</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>acfcb054c40a53495b6d28216535d2990</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetThinLineThickness</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>af4013a40ba65ff1db09668b2b6ec4085</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpaceBetweenLines</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>add8a45f2aca6d2e41bcd29543d82a543</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBackToBackStyle</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a839497bfd1cab5671dbfff5606dcdb8d</anchor>
      <arglist>(REPEATBACKTOBACKSTYLES style)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetForwardSpace</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>acaf2149584579649cab7c57ebe628308</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBackwardSpace</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>ae2c72613b36155f2488795580ee4047e</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalTopDotAdjustment</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a43c100268ac038fe1c585fd63da07843</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalBottomDotAdjustment</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>ad08213abdbc9bbc46d8451ee1f8a4ad9</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWingStyle</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a362a2fa3673e11394ed8562954936774</anchor>
      <arglist>(REPEATWINGSTYLES style)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAfterClefSpace</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a1296ecc7621cb95298a9145151e6cecd</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAfterKeySpace</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a41c8a4308f1d56f364d6efad27bb0576</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAfterTimeSpace</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>af86a3b00d45b55bbf27b5258ee54eb03</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndingBracketHeight</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a7e20e6f9ba513b8f54e44cae0725817f</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndingFrontHookLength</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aeb64c0e3330b3508adfbb6028c9f2830</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndingBackHookLength</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>ab4f537f5ebfd26a84717684da5a1f94b</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndingLineThickness</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aa64b1768ab6b5e229cd72c4f29e188ce</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndingInsetStart</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a4c4553d8b3ec22ab4a7be803ecf04516</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndingInsetEnd</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a7abb9801fa5157d9a0208942f7e14915</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndingHorizontalText</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a6d1c3a22b36288af4857dd13a5d384a7</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndingVerticalText</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a75c0b3a469dd0c0acffb4e299a1debd6</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDotAfterNumber</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>a7122b41e452f00ade6a4ee1611a18593</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxPasses</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aa307a818a75d14cf21955a812d345481</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetThinInnerBracketReference</name>
      <anchorfile>class_f_c_repeat_prefs.html</anchorfile>
      <anchor>aa7b71ab134ce8776ce46db206705ca72</anchor>
      <arglist>(bool state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCResourceWindow</name>
    <filename>class_f_c_resource_window.html</filename>
    <base>__FCUserWindow</base>
    <member kind="enumeration">
      <type></type>
      <name>EXECMODAL_RETURNS</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>ade11f0bf17049792709196671044afc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXECMODAL_CLOSE</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>ade11f0bf17049792709196671044afc2ad10858df50330501ab92a944d8c5eaab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXECMODAL_OK</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>ade11f0bf17049792709196671044afc2aa07b0a48134c4e0c0a4571da6010016e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXECMODAL_CANCEL</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>ade11f0bf17049792709196671044afc2a65e41c544498576682922589c8fb0752</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXECMODAL_CLOSE</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>ade11f0bf17049792709196671044afc2ad10858df50330501ab92a944d8c5eaab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXECMODAL_OK</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>ade11f0bf17049792709196671044afc2aa07b0a48134c4e0c0a4571da6010016e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXECMODAL_CANCEL</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>ade11f0bf17049792709196671044afc2a65e41c544498576682922589c8fb0752</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCResourceWindow</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>ab5ebf102d31c97ce259dc915701fcbf5</anchor>
      <arglist>(int resid)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCResourceWindow</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>aa2688391c6ba5d3af1a05990e1269eb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a1d9925f44afdf7c640dc6d241ed23639</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DestroyWindow</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a6e83710c3b07f45b0bef215b19ba2424</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitWindow</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>aa462e0800a30a9f5591270cff3c20135</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CloseWindow</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a6d4df390877321e0f1133d9d13415d53</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>__FCUserWindow *</type>
      <name>GetParent</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a622cb1d4ea9847c17150da1bff7160f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowModeless</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>ac99090effe9a3bafd0958a02f6159ad4</anchor>
      <arglist>(EWND WINCODE(hParent))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowModeless</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a94867181d151e1d5482ba9b1ab3821be</anchor>
      <arglist>(__FCUserWindow *pParent)</arglist>
    </member>
    <member kind="function">
      <type>EXECMODAL_RETURNS</type>
      <name>ExecuteModal_EWND</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a194c32e97981b8730a5c9c6c0daafbb2</anchor>
      <arglist>(EWND hParent)</arglist>
    </member>
    <member kind="function">
      <type>EXECMODAL_RETURNS</type>
      <name>ExecuteModal</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a65c56b8170a2b469f7ea905c420412f8</anchor>
      <arglist>(__FCUserWindow *pParent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HandleWMNotify</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>aab8fce3dfeea96dcc80bf5bf79c8471c</anchor>
      <arglist>(WPARAM wparam, LPARAM lparam)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetupInternalWindowCode</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>af9cd85e89cb88878f4d462f50afeddc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCControl *</type>
      <name>AddCtrl</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>ab75b7cf13a211b047fe4d8a4569f241c</anchor>
      <arglist>(FCControl *pControl)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlLine *</type>
      <name>AddLine</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>acd36260f36afd9e904480cd12df2b103</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlStatic *</type>
      <name>AddStatic</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a534ed4d60ac40e67256144eb1496a48d</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlComboBox *</type>
      <name>AddComboBox</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>ab3fa331482de9d628f9b54c7ca48fe60</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlEdit *</type>
      <name>AddEdit</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a5be8f7c677fe3893893f0b534f949a79</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlPopup *</type>
      <name>AddPopup</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a8efd1110ea304987512201934b0fd5bd</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlListBox *</type>
      <name>AddListBox</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a222b792fdfb40730f371ce06c628b45e</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlButton *</type>
      <name>AddButton</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a07bb450166bcfa1d33c51196c680e8ab</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlSlider *</type>
      <name>AddSlider</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>aaa0ce021775deb987e50b2b9aaea6ca8</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlRadioButton *</type>
      <name>AddRadioButton</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>af2f44b8514f3664fcfb99cf62849c953</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlCheckbox *</type>
      <name>AddCheckbox</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a097f70f8946e9c4ba288aa059ee9eec8</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlUpDown *</type>
      <name>AddUpDown</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a92ed1ea1474cb82599961cd4fef553b5</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlDataList *</type>
      <name>AddDataList</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>aae1d4b430f3d9b834ad4a8307f7aba43</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>FCCtrlTree *</type>
      <name>AddTree</name>
      <anchorfile>class_f_c_resource_window.html</anchorfile>
      <anchor>a98d13b699798d2a9c1d01475c8ab8019</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSecondaryBeamBreakMod</name>
    <filename>class_f_c_secondary_beam_break_mod.html</filename>
    <base>__FCEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>ad8ba2a6ded041222d5c2a05a36657b9e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>af70ce7137437d953aa2a520c86aba64d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSecondaryBeamBreakMod</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>a282d539a3f9d457217f02f3ae56a4b98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreak</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>ac67a3e7a4d7eadfaa762b70f40d7be1f</anchor>
      <arglist>(int beamindex, bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakAll</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>a0598ad6545aec2594d01d0bed611a3a1</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreak</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>a245677c00cf91f07873167d246fd5756</anchor>
      <arglist>(int beamindex) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreak16th</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>afecf5ac207d2d9a99676c05d732061d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreak16th</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>a695a1693499b9b5bfea6671834e79d58</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreak32nd</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>ad32aa660e2ed7643ec73f60d997ef637</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreak32nd</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>a02ab8275c9887aeb5dc6577f0ba4c50c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreak64th</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>ad5ec3ffaaaf1b408277fd68ed13ce053</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreak64th</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>a006916a227f4667edcdd2cafa5fc62de</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreak128th</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>a239789c3afb37fb0c8387d7e85c28ae1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreak128th</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>a4c10ffa443721b7f4d7444923a2bf026</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreak256th</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>aa466ff7e0c29fd067a06e69023f8efdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreak256th</name>
      <anchorfile>class_f_c_secondary_beam_break_mod.html</anchorfile>
      <anchor>a2b54bea8e6cffc6b6505a609e3aac9b4</anchor>
      <arglist>(bool state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSecondaryBeamBreakMods</name>
    <filename>class_f_c_secondary_beam_break_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_secondary_beam_break_mods.html</anchorfile>
      <anchor>ab80127aa288ecb472a8fd8dc39930973</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSecondaryBeamMods</name>
    <filename>class_f_c_secondary_beam_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_secondary_beam_mods.html</anchorfile>
      <anchor>a8d813b37c9b1aaf7d62d917056222804</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSecondaryBeamMods</name>
      <anchorfile>class_f_c_secondary_beam_mods.html</anchorfile>
      <anchor>a3cb193136f17b694b56d408a72858da5</anchor>
      <arglist>(FCNoteEntry *pConnectEntry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUpStem</name>
      <anchorfile>class_f_c_secondary_beam_mods.html</anchorfile>
      <anchor>ac811298724b88ac2c60fe0102f57059f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCBeamMod *</type>
      <name>GetOrCreateBeam</name>
      <anchorfile>class_f_c_secondary_beam_mods.html</anchorfile>
      <anchor>a49a3cc2fd3cd5c61f8b9252667bf3913</anchor>
      <arglist>(int beamno)</arglist>
    </member>
    <member kind="function">
      <type>FCBeamMod *</type>
      <name>GetBeam</name>
      <anchorfile>class_f_c_secondary_beam_mods.html</anchorfile>
      <anchor>acf8ed983deaff79ade2531194168a274</anchor>
      <arglist>(int beamno)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AllBeamsDataExists</name>
      <anchorfile>class_f_c_secondary_beam_mods.html</anchorfile>
      <anchor>a651aa2165dbb936064baeb651154c850</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSectionLyricsText</name>
    <filename>class_f_c_section_lyrics_text.html</filename>
    <base>__FCLyricsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_section_lyrics_text.html</anchorfile>
      <anchor>ad7b2fbcc62971917338d636786b6b150</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_section_lyrics_text.html</anchorfile>
      <anchor>abfcf8622845d4cc150fe48de372fbc5a</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSectionSyllable</name>
    <filename>class_f_c_section_syllable.html</filename>
    <base>FCSyllableBase</base>
    <member kind="function">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_section_syllable.html</anchorfile>
      <anchor>ac67ceb41622e5e06d0c9b68ef79bb7a4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_section_syllable.html</anchorfile>
      <anchor>aba40c008992eb52e324a330f1446da1e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_section_syllable.html</anchorfile>
      <anchor>a537784aff9471b3da9d30d666cf9b4d8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSection</name>
      <anchorfile>class_f_c_section_syllable.html</anchorfile>
      <anchor>aa6157b6f15e76e1265c2e53f2c5e1df1</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSectionSyllables</name>
    <filename>class_f_c_section_syllables.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_section_syllables.html</anchorfile>
      <anchor>aa400aa84c4d8423fa82f52f2711d4288</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSectionSyllables</name>
      <anchorfile>class_f_c_section_syllables.html</anchorfile>
      <anchor>a36ed1455a1ee63e43a7ef14da9187bd0</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCSectionSyllable *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_section_syllables.html</anchorfile>
      <anchor>a808878948f7cbc2b4f5b72ba6b206b3b</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSeparateMeasureNumber</name>
    <filename>class_f_c_separate_measure_number.html</filename>
    <base>__FCCellDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>a35377651012dad90d86c4e8ba6da68d2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>a045dc1805223e3ff73b2e40fc93ecc42</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSeparateMeasureNumber</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>a16af2787235ccbd3dfa36ae795014a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRegionNumberID</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>a27ec3bad0a6616317283615757199132</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowOverride</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>a4d7517c39c37da413b882c5a33e1bf35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHideOverride</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>af262f59cb941ae21d658d8a61ec996c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseEnclosure</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>a81c759395fa02481c83d62b2d0314489</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalPosition</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>a34ec02ba047d82439e2448ff4a9d509a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalPosition</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>a1dafe3bdbaee9ecc1079e59967c165a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignMeasureNumberRegion</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>aa5dfba377420155fb03aaa21a1cd96f6</anchor>
      <arglist>(FCMeasureNumberRegion *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>FCEnclosure *</type>
      <name>GetEnclosure</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>aedfef5d4c40e8587ccdad6123f01e548</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRegionNumberID</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>ab73ee3eec1a9a9ef4a790c9c93bf81c3</anchor>
      <arglist>(twobyte regionid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowOverride</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>af98ff890988e2a555466bbe0fd8175be</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHideOverride</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>a0af768c41c9ae66a13124aac102c204c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseEnclosure</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>aef8bed583167a6c6d9312bbffdbfeaff</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPosition</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>af8d1c93a1b283f5afd8c7f5a405dbfb2</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPosition</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>a7489c940b9d93806bed01b86025e0ca7</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_separate_measure_number.html</anchorfile>
      <anchor>a518a0881fc1b6008d5c4407b9e771be5</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSeparateMeasureNumbers</name>
    <filename>class_f_c_separate_measure_numbers.html</filename>
    <base>__FCCollectionCellDetail</base>
    <member kind="function">
      <type></type>
      <name>FCSeparateMeasureNumbers</name>
      <anchorfile>class_f_c_separate_measure_numbers.html</anchorfile>
      <anchor>a587e348edf3cf3a26a41c266222fe51a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_separate_measure_numbers.html</anchorfile>
      <anchor>ac3ca9b2bb5551094a59e34e20a630578</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCSeparateMeasureNumber *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_separate_measure_numbers.html</anchorfile>
      <anchor>a00a6617a14af232772779c1ba5f8cf5c</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSeparatePlacement</name>
    <filename>class_f_c_separate_placement.html</filename>
    <base>__FCInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>SEPARATEPLACEMENT_MODES</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a59081c96e812060ac66c4b89645283d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEPARMODE_BACKWARDREPEAT</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a59081c96e812060ac66c4b89645283d2a1c7426731791942948ed5a75e43ebe82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEPARMODE_TEXTREPEAT</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a59081c96e812060ac66c4b89645283d2a289d892bb5b665fc1d6e959d2be7a261</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEPARMODE_ENDINGREPEAT</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a59081c96e812060ac66c4b89645283d2aece3fae1a3194ef07a985124ac046a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEPARMODE_ENDINGREPEATTEXT</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a59081c96e812060ac66c4b89645283d2a26ff343a5fb5fb84ed662a68c6745867</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEPARMODE_BACKWARDREPEAT</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a59081c96e812060ac66c4b89645283d2a1c7426731791942948ed5a75e43ebe82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEPARMODE_TEXTREPEAT</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a59081c96e812060ac66c4b89645283d2a289d892bb5b665fc1d6e959d2be7a261</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEPARMODE_ENDINGREPEAT</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a59081c96e812060ac66c4b89645283d2aece3fae1a3194ef07a985124ac046a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEPARMODE_ENDINGREPEATTEXT</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a59081c96e812060ac66c4b89645283d2a26ff343a5fb5fb84ed662a68c6745867</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a5d649a9748f9da520e3b1f8224fe31ca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a486c392a20fa8a962f77def571325553</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSeparatePlacement</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a49541532013195d53b2acb64388655e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMode</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>aec80f09ac69c73e8960d92a9f94eebb5</anchor>
      <arglist>(SEPARATEPLACEMENT_MODES mode)</arglist>
    </member>
    <member kind="function">
      <type>eStaff</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a266a472f23c92ccefcf96981b306ae65</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasStaffValue</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a72699b40292e010196387ff5a5d9b4d0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMeasure</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a1049cc5a703b743e1a3400e6dc33f41a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalOffset1</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a771eddfd88de02a3f51420e8432721e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalOffset1</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a35caa42aec9576aced9c0002356b0419</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalOffset2</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a7cf71d7c2f3d8edbd28446fe096c1fd5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalOffset2</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>add50b3724f962b5f0916947ad6a6113f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaff</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>ab49f26fdb52b017385d7d543b0c6d1d7</anchor>
      <arglist>(eStaff staff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasure</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>ae0937134fb4bd415631e5ab8374fa25a</anchor>
      <arglist>(twobyte meas)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOffset1</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a924ac00f70d5c669f524ab200fa6b0e7</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalOffset1</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a705f4d4fbb208cbfb2a439fc2b041748</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOffset2</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a260b237cd3067bb24f3d61b4a193284f</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalOffset2</name>
      <anchorfile>class_f_c_separate_placement.html</anchorfile>
      <anchor>a4a100cde9c5c27e4496bd3cb15b6896a</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSeparatePlacements</name>
    <filename>class_f_c_separate_placements.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCSeparatePlacements</name>
      <anchorfile>class_f_c_separate_placements.html</anchorfile>
      <anchor>a4b3e908cf59f2e70736ddbd24b13aa1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_separate_placements.html</anchorfile>
      <anchor>ab7a83f1f0d17c94a8ce80bfb433df478</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMode</name>
      <anchorfile>class_f_c_separate_placements.html</anchorfile>
      <anchor>a79a35f02e806ebd4e3e8ba4cfd790226</anchor>
      <arglist>(FCSeparatePlacement::SEPARATEPLACEMENT_MODES mode)</arglist>
    </member>
    <member kind="function">
      <type>FCSeparatePlacement *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_separate_placements.html</anchorfile>
      <anchor>ab0cdcc3f038bc737eccc728f971df613</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>FCSeparatePlacement *</type>
      <name>AssureStaffPlacement</name>
      <anchorfile>class_f_c_separate_placements.html</anchorfile>
      <anchor>aae76251f4a547a50b05d0cfd4b49f369</anchor>
      <arglist>(eStaff staff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeepOnlyMeasure</name>
      <anchorfile>class_f_c_separate_placements.html</anchorfile>
      <anchor>acc74006e18cf84065925bbb10cafe944</anchor>
      <arglist>(eMeas meas)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSettingsPair</name>
    <filename>class_f_c_settings_pair.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type></type>
      <name>FCSettingsPair</name>
      <anchorfile>class_f_c_settings_pair.html</anchorfile>
      <anchor>a568c1731662eff1d34e9563cb920e36e</anchor>
      <arglist>(FCString *pLeftString, FCString *pRightString)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>GetKeyString</name>
      <anchorfile>class_f_c_settings_pair.html</anchorfile>
      <anchor>abe1a57ebfcbeb982ae7c46f2ac10eef1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>GetValueString</name>
      <anchorfile>class_f_c_settings_pair.html</anchorfile>
      <anchor>ab28c91a103592c31f7a2cb996cbdb670</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValueString</name>
      <anchorfile>class_f_c_settings_pair.html</anchorfile>
      <anchor>a0ebdd4d41696ddd342eb1ee00114e5bc</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_settings_pair.html</anchorfile>
      <anchor>af2d1f4d1dcdc19ec69de2e5c92f22d56</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSettingsPairs</name>
    <filename>class_f_c_settings_pairs.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_settings_pairs.html</anchorfile>
      <anchor>aa5f954f619320b8fa654a07f139e0d51</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCSettingsPair *</type>
      <name>FindPrefixedKey</name>
      <anchorfile>class_f_c_settings_pairs.html</anchorfile>
      <anchor>abb88a9835da668b0a8811cf653954ff0</anchor>
      <arglist>(const char *pszPrefix, int indexnumber)</arglist>
    </member>
    <member kind="function">
      <type>FCSettingsPair *</type>
      <name>FindKey</name>
      <anchorfile>class_f_c_settings_pairs.html</anchorfile>
      <anchor>a7e0f7ba66f07c62d73f6d3f7a2c310f0</anchor>
      <arglist>(FCString *pKeyString)</arglist>
    </member>
    <member kind="function">
      <type>FCSettingsPair *</type>
      <name>AddKeyValue</name>
      <anchorfile>class_f_c_settings_pairs.html</anchorfile>
      <anchor>a2f9b69794451afed9a3f9f3101cde031</anchor>
      <arglist>(FCString *pKeyString, FCString *pValueString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RetrieveBoolValue</name>
      <anchorfile>class_f_c_settings_pairs.html</anchorfile>
      <anchor>a3c2d3ac1bb6fdbca1f6c6a36873a0485</anchor>
      <arglist>(FCString *pKeyString, bool *pValue)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RetrieveIntValue</name>
      <anchorfile>class_f_c_settings_pairs.html</anchorfile>
      <anchor>a887b05849924a1aa807c2bce7d51a535</anchor>
      <arglist>(FCString *pKeyString, int *pValue, int min=-1, int max=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StoreBoolValue</name>
      <anchorfile>class_f_c_settings_pairs.html</anchorfile>
      <anchor>a0596077abec4c7e54950fb6d425681ea</anchor>
      <arglist>(FCString *pKeyString, bool boolvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StoreIntValue</name>
      <anchorfile>class_f_c_settings_pairs.html</anchorfile>
      <anchor>a6a51cf6244e8ab03d9934f6a292d01d6</anchor>
      <arglist>(FCString *pKeyString, int intvalue)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCShapeDef</name>
    <filename>class_f_c_shape_def.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>SHAPEDEF_TYPES</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>aed373355fb02d5e174d4fc6abacd97e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>aefc2fa1d647699d618eb1f7c3bee70ad</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a599d1a33b7ca2268f105e8d61dda86ec</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCShapeDef</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>ab4d23a5f40664e3729fefad68fbe9050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>_GetIsEmptyShape</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a73355daa0e84990553bd8672253a4c5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcProtected</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>adeab2de9752ca9781f7316924c5f26e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>af6a5d42e4e9dc6ea44f5447b2da56a0b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteData</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a376902ee64dde4ae033db1ef1a086a7e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadNext</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a533509b7496577a6daf56290309a3c85</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a2c96501fcfae50e0a36236b45b889e71</anchor>
      <arglist>(CMPER itemno) override</arglist>
    </member>
    <member kind="function">
      <type>SHAPEDEF_TYPES</type>
      <name>GetType</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>aa2e850db98d6add89ebac4a8b181d02b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewWithType</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a5c554243c37d1435ae9d19e5b8287eb1</anchor>
      <arglist>(SHAPEDEF_TYPES shapedeftype)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveWithType</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a38f40c3804162ed5c1157c0cf46a4581</anchor>
      <arglist>(SHAPEDEF_TYPES shapedeftype)</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetDataCount</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a24aa04887a8b0a17a7057d37d765ae18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetInstructionsCount</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>ab8714727a2b564bbc8af10c5d75183f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ETAG</type>
      <name>GetInstructionTag</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a9ed9c16e51cc7c5788645a9ccc119bb2</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetInstructionSize</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a66ba1d0a11d43a08ae24a730f979a93c</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstructions *</type>
      <name>CreateInstructions</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a70d9a13a5158e3afe0bc64fdf719f2ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCStrings *</type>
      <name>CreateTextStrings</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a5abb02ec4505ebffdd5a66053c10ef66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RebuildInstructions</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a75b1443a365dd191c2f1599c2e34c539</anchor>
      <arglist>(FCShapeDefInstructions *pCollection)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFontInfo</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a2c309372729c330cc585a3473a40a09c</anchor>
      <arglist>(int index, FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetFontInfo</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>ac84e29458d26ad569becf3ab8fe62c9d</anchor>
      <arglist>(int index, FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExportAsSVGFile</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a9804d461834ccd1403323271203fee58</anchor>
      <arglist>(FCString *pFileName, float scaling, const char *pszUnit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a812eedd7d791be260075ec3a91f6ddc4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InstructionDebugDump</name>
      <anchorfile>class_f_c_shape_def.html</anchorfile>
      <anchor>a4f10578ea8a22e336d67b0b8cb0106d3</anchor>
      <arglist>(int instructionindex)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCShapeDefInstruction</name>
    <filename>class_f_c_shape_def_instruction.html</filename>
    <base>__FCBase</base>
    <member kind="enumeration">
      <type></type>
      <name>SHAPEDEFTAGS</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_SETFONT</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a53805c20f3be0dab8657da3c817da3f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_STARTOBJECT</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a83539eecfaf51808f09d71ce0efbdfae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_STARTGROUP</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a75dca7891478d36797dc45d28794ab1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_ENDGROUP</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a8ee179d294d016503bf2b3478825559b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_DRAWCHAR</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01ac6bc40e01adb52f209cf50526335534c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_STROKE</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a6d20dca848e38b84da88fc25a85204b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_RMOVETO</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a47ed6fd1f33fb613443496799857cfd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_LINEWIDTH</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a6757d811cc5e77d8577c87ecae3223cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_SETDASH</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a2ab1f80e12039d32c8eef67819f32821</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_LINETO</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01afc09023eaff9f13f0d92544a8f304c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_SETGRAY</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a1e45b306170c9b27a6fef3f9ae4e75f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_ELLIPSE</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01af028b2face580b94088db025eee0f13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_FILLSOLID</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01ad6979a115a6c2f798ee40eb79eae6af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_CURVETO</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a41152e0aaae39eea95c1dbe76c5982aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_SLUR</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a9a5053d4644e1de1dc6083c29eeee4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_RECTANGLE</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a782eed2bd79e8edd08be059f0592fe50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_CLOSEPATH</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01acf1fe8e8918886ef7c4194673bd3b2f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_BRACKET</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01aa87b451bb548624de5bbbab01f9b3521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_NULL</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a723495d4e2247c73bed26bbb4214a7d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_SETFONT</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a53805c20f3be0dab8657da3c817da3f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_STARTOBJECT</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a83539eecfaf51808f09d71ce0efbdfae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_STARTGROUP</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a75dca7891478d36797dc45d28794ab1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_ENDGROUP</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a8ee179d294d016503bf2b3478825559b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_DRAWCHAR</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01ac6bc40e01adb52f209cf50526335534c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_STROKE</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a6d20dca848e38b84da88fc25a85204b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_RMOVETO</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a47ed6fd1f33fb613443496799857cfd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_LINEWIDTH</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a6757d811cc5e77d8577c87ecae3223cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_SETDASH</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a2ab1f80e12039d32c8eef67819f32821</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_LINETO</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01afc09023eaff9f13f0d92544a8f304c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_SETGRAY</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a1e45b306170c9b27a6fef3f9ae4e75f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_ELLIPSE</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01af028b2face580b94088db025eee0f13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_FILLSOLID</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01ad6979a115a6c2f798ee40eb79eae6af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_CURVETO</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a41152e0aaae39eea95c1dbe76c5982aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_SLUR</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a9a5053d4644e1de1dc6083c29eeee4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_RECTANGLE</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a782eed2bd79e8edd08be059f0592fe50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_CLOSEPATH</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01acf1fe8e8918886ef7c4194673bd3b2f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_BRACKET</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01aa87b451bb548624de5bbbab01f9b3521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAPETAG_NULL</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9d1218d4c9e8495f7af1635c9d949a01a723495d4e2247c73bed26bbb4214a7d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCShapeDefInstruction</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>ac1b2dcc32957ba20756c27106a6eb751</anchor>
      <arglist>(ETAG tag, int instructionsize, void *pPathData)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>aef1da4329993a93591c7f96342987664</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetMemory</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a60ad6ffb06e1bc21d3889ab0bc9bcfaa</anchor>
      <arglist>(EDTPathInst *pPathInstruction, void *pPathData, int offset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCShapeDefInstruction</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a1e8a54cd2f5c28704aed2d4ea115cf7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCount</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>acac4cec9b556fc88570fb6985c4721c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ETAG</type>
      <name>GetTag</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>affa7cac339526bbb3a607633a6779811</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdentical</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a6f520ada4beda7b3b4dc902e6335e19f</anchor>
      <arglist>(__FCBase *pTestObject) override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetTagAsString</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a19ba2ca60d9eaa0bd2df8cb562b17638</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetFourbyteData</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a59767c7f39d3d968df6934ce602a28f0</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetFourbyteData</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>ac61bd0b199a3d990bba518a754d199f9</anchor>
      <arglist>(int index, fourbyte fbvalue)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetFloatData</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a0acdc3280b2e15e1d3b19f83a29bf242</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_StartObject</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>ad885df6338900c3950dbdc0a3ebd2ac0</anchor>
      <arglist>(int xorigin, int yorigin, int left, int top, int right, int bottom, int xtransform=1000, int ytransform=1000, int rotation=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_StartGroup</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>ab9410e01e00ca237d8b2837c61681b86</anchor>
      <arglist>(int xorigin, int yorigin, int left, int top, int right, int bottom, int xtransform=1000, int ytransform=1000, int rotation=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_EndGroup</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>aa2492ece3f0dc4f7e74afa991666b61d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_RMoveTo</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>ab9de382407410af0314e56ae1b6f4c5c</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_CurveTo</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>aa45431f99acdcd9d234a293de05e4b8d</anchor>
      <arglist>(int x1, int y1, int x2, int y2, int endpt_x, int endpt_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_Slur</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>ab327fef77250b0301d66626bc454b8b6</anchor>
      <arglist>(int x1, int y1, int x2, int y2, int endpt_x, int endpt_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_LineWidth</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>ae4745cd57ea0c66d8897f2fcda71e9b6</anchor>
      <arglist>(int linewidth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_SetGrey</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a697bc27c201cfe1d5cee8b652f7efc6f</anchor>
      <arglist>(int greyvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_FillSolid</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>afeca40c1f2b2502d06fac5c0fabaddeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_ClosePath</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a794c0ccafa0e6ab637bf5fc72fd82feb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_Ellipse</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a05f8d65d57a1ae088f10f905f86e0e38</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_Rectangle</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>af01cd7ab557ec807ac418c60b1957aff</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_DrawChar</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>aaa9e000eb99f908477dd348e250d5727</anchor>
      <arglist>(eUniChar16 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_SetFont</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9116aa6b711a7ef4933a7b4b8a516aaf</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_SetDash</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>abc53c02dc108d85906d2c8aae838c65a</anchor>
      <arglist>(int dashlength, int spacebetween)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_RLineTo</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a8b0ccea21e3977252653dfab83c323e7</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_Bracket</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a9de240e17c2714a0cd7edabab81c591b</anchor>
      <arglist>(int brackettype)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_Stroke</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a00ca427cf76758635a29bbdc0fb2c212</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init_Null</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a56460cc755943a7f9a4c4466c4d8caac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_shape_def_instruction.html</anchorfile>
      <anchor>a96acaa26ca6cb69495f66a72e9ddd1f9</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCShapeDefInstructions</name>
    <filename>class_f_c_shape_def_instructions.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a4b0685ba33d8895d9631c83dae4ed814</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>ae35d9fdf63b4acecdf5a4368aecd5df1</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddNull</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>aa9d62c5ca19b13a74b42bd83a45a989d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddStartObject</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>abe24124896d691cf5d93ca62e3d44bbf</anchor>
      <arglist>(FCPoint *pOrigin, FCPoint *pBoundLeftTop, FCPoint *pBoundRightBottom, int xtransform=1000, int ytransform=1000, int rotation=0)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddStartGroup</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a07a916636f7492823011bb1ae74eb302</anchor>
      <arglist>(FCPoint *pOrigin, FCPoint *pBoundLeftTop, FCPoint *pBoundRightBottom, int xtransform=1000, int ytransform=1000, int rotation=0)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddEndGroup</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>ab8399e5959a36777d450014c2f6123a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddLineWidth</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>aa74f67142bda9c0ea9625b2e4f5da931</anchor>
      <arglist>(int linewidth)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddSetGrey</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a1cee399f4e68e135f572d467e028b891</anchor>
      <arglist>(int percent)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddFillSolid</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>ab470b18a5a756281e501219da6d2b9fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddClosePath</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a70d517ec111efe60fd7ee084f3b79c1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddEllipse</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a8f3d96f713bc116395e95d064fd7864e</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddRectangle</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>aeddeb77e342592c8a26834e9c433ed62</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddCurveTo</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a34e9c7b825b39343456545b6eda14133</anchor>
      <arglist>(int ctrlpt_height=72)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddCurveToDetails</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a204fc139ddf3fc8103cebcdfb8a540f2</anchor>
      <arglist>(int x1, int y1, int x2, int y2, int endpt_x, int endpt_y)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddSlur</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>adf03df3dcf65c945db12e8251d1e5644</anchor>
      <arglist>(int ctrlpt_height=72)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddStroke</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a794185ffeaebdf491f7d5fb0403e576d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddSetDash</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a3b1d03ad4c4e8a9d5045d8545b1042cb</anchor>
      <arglist>(int dashlength, int spacebetween)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddRLineTo</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a91aef77d0723746e66418aba8a468e64</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddBracket</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>ae41730708bbe7febaa2cf93fe3938671</anchor>
      <arglist>(int brackettype)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddSolidLineStyle</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a8f455682864da243021aeca207ea4ef9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddRMoveTo</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a8ccfdec5efc883da6942e102fd3f0dc6</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddSetFont</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a78c57671033defe9379da7173d2a43c3</anchor>
      <arglist>(FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddDrawChar</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>a3d7559631ea71a4db459f7385d60f359</anchor>
      <arglist>(eUniChar16 character)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddDrawChars</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>afcc5842744d55e765092501610ad888e</anchor>
      <arglist>(const char *pszString)</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDefInstruction *</type>
      <name>AddDrawCharsString</name>
      <anchorfile>class_f_c_shape_def_instructions.html</anchorfile>
      <anchor>af7dcb6ed2e7ed5896d81a2f6e0b3edf4</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCShapeDefs</name>
    <filename>class_f_c_shape_defs.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCShapeDefs</name>
      <anchorfile>class_f_c_shape_defs.html</anchorfile>
      <anchor>a410524da5cf9a5a32e27bb881c1ba1ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_shape_defs.html</anchorfile>
      <anchor>a3dc6717a4e69d0086ab02ca4d62d3512</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_shape_defs.html</anchorfile>
      <anchor>a1ae6f85fd1c595d836c059e4f06e90bf</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCShapeExpressionDef</name>
    <filename>class_f_c_shape_expression_def.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCShapeExpressionDef</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a2fed736867c2b97211bb3cb5f2d6e873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCShapeExpressionDef</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a5b1548669516175af12bbfc57bc0582a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>aa0c7d1d6f531f3af54aa9e624d857dcd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadNext</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a6229e3106eb770166cc85d9126aa9df0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCShapeDef *</type>
      <name>CreateShapeDef</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>aefdda017b9820d966594462113109bc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseExecutableShape</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>ae56ff24488d8d38af4cc3a484cfca1ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAllowHorizontalStretching</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a1aac8619c723cba7ed47dff415a5a755</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNoPrint</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a54c6f5997d39525b273e003595ff61db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakMMRest</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>af55e48fd269f7bdad892b144a0ed0bdb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetExecutableShapeID</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>ab269334ddaed52ef3f8d6f56256b3b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetID</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>aec3b5a03c27d6275e15e1b0bcb06bbc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCCategoryDef::HORIZ_JUSTIFICATION</type>
      <name>GetHorizontalJustification</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a5aad3239d3fea3238de003302c1f2ad5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCCategoryDef::HORIZ_ALIGNMENT</type>
      <name>GetHorizontalAlignmentPoint</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>abd2d3ff91d61486788218c9c666f15d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCategoryPos</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a0eea1d0b45936a6f9fbddf419b64990f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalOffset</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>abe83e1dffb764d18b9befa577c9fa7f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalEntryOffset</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>ac012f48f081fcbccc5092d5a52a24b94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCCategoryDef::VERT_ALIGNMENT</type>
      <name>GetVerticalAlignmentPoint</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a8b4e585cdb2825bc3a0452efc0bcb991</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalBaselineOffset</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a43c2f3d0c988e0e368cdd11ff3c95756</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetDescription</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a1947adaa2181d336d068bf81822f8451</anchor>
      <arglist>(FCString *pName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetID</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>aa36cf41ba9b399f072bf4acea96d2f52</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExecutableShapeID</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a57f4fbddeece8b40e901de33895a5831</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseExecutableShape</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>ab1c99790bdec5d745b3bac5d2efdcba9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllowHorizontalStretching</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a46c756cde7190229e0b6a5c2f2722a6c</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoPrint</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a06c97981b1caeccab274b3fa44b4af75</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakMMRest</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a82aacac0bc6d0949bf453b6d0b63adf7</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetCategoryID</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a451c175d7b5bb8a0a94befb0323655a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCategoryID</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>af8585aa184b002aff22a7d06e2fcbd69</anchor>
      <arglist>(twobyte ID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalJustification</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a71e47ba6a1e72c88fe2839f2784fa4d0</anchor>
      <arglist>(FCCategoryDef::HORIZ_JUSTIFICATION value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalAlignmentPoint</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>aad7cac90f2e6fc790aa1175de11f7256</anchor>
      <arglist>(FCCategoryDef::HORIZ_ALIGNMENT value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseCategoryPos</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a3de1261b903480ef0ed56389bf48465b</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOffset</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>ae142f8287b0876f4b48c9cf093763551</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalEntryOffset</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a765c940a9b2ffa5f32407251a7cea14f</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalAlignmentPoint</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a9808485e0838dd5c4baff580a69ca67b</anchor>
      <arglist>(FCCategoryDef::VERT_ALIGNMENT value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalBaselineOffset</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a6e0363236bfe07922c840dbba0485d4e</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDescription</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a7430c4cca2d539d980e0bbd782a2b0b4</anchor>
      <arglist>(FCString *pName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignShapeDef</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a24291f3c97261e153472232309761632</anchor>
      <arglist>(FCShapeDef *pShapeDef)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateDescription</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a3952bfb5b7b8c89176d92b1d4d5e7743</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_shape_expression_def.html</anchorfile>
      <anchor>a226100c30d70dd5fa1ade973a8b9efc0</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCShapeExpressionDefs</name>
    <filename>class_f_c_shape_expression_defs.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCShapeExpressionDefs</name>
      <anchorfile>class_f_c_shape_expression_defs.html</anchorfile>
      <anchor>a3bd2ea601e2689933735c3f46e604c00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_shape_expression_defs.html</anchorfile>
      <anchor>a591c5549ca8bdb26d8f3969927dc89f6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCShapeExpressionDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_shape_expression_defs.html</anchorfile>
      <anchor>a7cc5bfd5db9f837a189665dbf97e3eb8</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSizePrefs</name>
    <filename>class_f_c_size_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a1303aff7ddee55965ca243cb43dd518c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a66cd47b8ba145c9a321782cbab405ce2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSizePrefs</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>ad407c83f702273a1045a43f0d977e37f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetBeamThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>acb930fe5c796024b39d748dca793bc07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetGraceNoteSize</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>ac7e59efac72b916c38d20152da0ce9a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetGraceSlashThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a781ec65f120d1f7624f3a12ace0032af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetHeavyBarlineThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>afbdf25b78b0ef80b907f16e01af4af70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetThinBarlineThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a2fb928a263a4b84d9c4e91e6d8cc334a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu32</type>
      <name>GetBarlineDashLength</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>afff96069644f4867fc6788ce74e35b6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetStaffLineThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a1da2c4d65a23915febcd6117e4ae14aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetLedgerLineThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a100ccf8a0eaff146cb4e629b658b4fb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLedgerLeftHalf</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>ab140b734e26d4035841654bf4a625101</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLedgerLeftRestHalf</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>abf6384416e137abcc59f19b8ad2b1727</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLedgerRightHalf</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a1748039664080f26e67279c302f818b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLedgerRightRestHalf</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a35003819b9cd63334eac4d676fa121b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetBrokenBeamLength</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a0bb99dc30ccabacd42b6623558ff6e99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ePercent</type>
      <name>GetTablatureGraceNoteSize</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a370e416a8b61932b9f0c079943e06596</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetEnclosureThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a9aa3b08ae5e1375a92d5fef1417a3c5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetShapeSlurTipWidth</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a3d04846b3f1c45bbd313bac33be6dc77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetNormalStemLength</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a0d8fd3e766e5795d4adde7dc98de4243</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetShortenedStemLength</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>ae637825d35c169ba9c973a04ddcb19a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHalfStemLength</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a66f5f0d17f20e1a60aa6434865cee023</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetReverseStemAdjust</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>afa385d81b4f97dd459398a28b011117b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetStemLineThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>acf2e23e135bd84d48c7abc56a98c140c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBeamThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>ad891646e12cdaccb7d21627a66ccbbf6</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGraceNoteSize</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>afe30056a578ba2c0adf50c9968411940</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGraceSlashThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a026ab51d6d33adaf902078db444a59be</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHeavyBarlineThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a884e68531e447f2bed42142849435df6</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetThinBarlineThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a599a8d31d3692217914f266a6e6c88a0</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBarlineDashLength</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a39bc8521c9352dc48370bb8643e95727</anchor>
      <arglist>(Evpu32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaffLineThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a2528a70af5c7099f910250228b110b4f</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLedgerLineThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>ac734a82037235185a766cc20dbd9e94c</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLedgerLeftHalf</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a021c8d4c33c9ba18c5c5ab244e2e7dd8</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLedgerLeftRestHalf</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>ae651f87261dfea2bfdfb9ba92a89b401</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLedgerRightHalf</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a94673c9001c1502d62eb909db961cf3c</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLedgerRightRestHalf</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>aa72e03c00a742e0bd5688380aab7b480</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBrokenBeamLength</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a5bd8e62e36c97a45339cae224ba7a533</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTablatureGraceNoteSize</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>ad40506c30e8dd06d8a2c65d6b7ea96c2</anchor>
      <arglist>(ePercent value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEnclosureThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a9358732581da0aa128858d1bbed95a98</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeSlurTipWidth</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a4f1f0b88c9c07acf3bcb9209485ecdce</anchor>
      <arglist>(fourbyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNormalStemLength</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>acf4636b9b44c553c814e39e157a83908</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShortenedStemLength</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a4f513e278f99462829450ac25f9d6426</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHalfStemLength</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>a0cb93ade51c076d576066a8621d8ade5</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReverseStemAdjust</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>ab2e56a5204dbb83456c4efef3a547f0f</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStemLineThickness</name>
      <anchorfile>class_f_c_size_prefs.html</anchorfile>
      <anchor>ab7ebb48385c3a175a3642451476c2ead</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSlurContourPrefs</name>
    <filename>class_f_c_slur_contour_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_slur_contour_prefs.html</anchorfile>
      <anchor>aebd32579d68155111a13af67887abc11</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_slur_contour_prefs.html</anchorfile>
      <anchor>abb87fb269a670e958f42e000cfb6be34</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcInset</name>
      <anchorfile>class_f_c_slur_contour_prefs.html</anchorfile>
      <anchor>afd2086b41c6b9b531f34d54693de9edd</anchor>
      <arglist>(int slurlength) const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcHeight</name>
      <anchorfile>class_f_c_slur_contour_prefs.html</anchorfile>
      <anchor>a48ac75977b5d563b0405dbf1bac0eb8a</anchor>
      <arglist>(int slurlength) const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetShortSpan</name>
      <anchorfile>class_f_c_slur_contour_prefs.html</anchorfile>
      <anchor>a0f140477cd0838c6811032515f34e7c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMediumSpan</name>
      <anchorfile>class_f_c_slur_contour_prefs.html</anchorfile>
      <anchor>aab2c7dd9a4416abbc685104daf45e623</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLongSpan</name>
      <anchorfile>class_f_c_slur_contour_prefs.html</anchorfile>
      <anchor>add94130e14fedd03a3b4c6438d3d698b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetExtraLongSpan</name>
      <anchorfile>class_f_c_slur_contour_prefs.html</anchorfile>
      <anchor>adf8f2703a38b0b12bf0702d58052facb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_slur_contour_prefs.html</anchorfile>
      <anchor>a0962e84daa421d098e1ee15166ac575c</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSmartShape</name>
    <filename>class_f_c_smart_shape.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>SMARTSHAPE_TYPES</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SLURDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a1b3e49a189c8717863ea403629529eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DIMINUENDO</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ab40f4fa943fc4bb0f903ce1b62d9e398</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_CRESCENDO</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a5821c34b894d6f4ea912b8d4bfd5e766</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_OCTAVEDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a69bd388353ced04eb77b2d6c31a8bce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_OCTAVEUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a484e5d9bde04fe16e52c884c50d83d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a76e67b990d011fc1a1fe03c7da369e82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a406507bdc844fcb879d94b45c490ab6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHCURVEDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42af8ffc7611435d83f91d142df0ed875f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHCURVEUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a99b27ac012a4c5aca80e070d02441913</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINE</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ae778aa4fe1a9c116f19f8e2a2a342d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINE</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a836d9b455a71f99bb891c8734384b1b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ae7274e78feb7ea88c806e73e4639bb9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a759f90eed67fb848b2dd24382fe9efcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_TRILL</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42abe8698ec97587de57f947436fe0137de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SLURAUTO</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a5d2c5e6b5432c924e4d4fcc7bee2cd0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHCURVEAUTO</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a5e861ac12fc406278343229a49360881</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_TRILLEXT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ac458c0ccb8c655a6c755d9e62ce9194f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEDOWN2</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ac8dfa32b5fa138a6d46dac68b6f6fc6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEUP2</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ad6a6458d1caa0f7ab3096a18f8e3137f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_TWOOCTAVEDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a2b31d8c0f461b4b6866fad83149de216</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_TWOOCTAVEUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a47c538614465db89bb7948e0c8ba43ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEDOWN2</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42aab92851045d5518a75df9c143758e375</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEUP2</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42abb7a2c580fa58dc86bc7f88a5321cb19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_GLISSANDO</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ae968883560b66c710406f28e684020ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_TABSLIDE</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42aac12cc53c80ba33bc60daf5c47ed5e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_BEND_HAT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42af42bf1fed69e817c3db0f214c7967a74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_BEND_CURVE</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a9907b1201d57bf2c58319deb52e54d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_CUSTOM</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a8947cde29216b7a4a4ed7dfaac87a8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEUPLEFT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a2df403ef399124d1ccc16c7ec3e50558</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEDOWNLEFT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a10943c6c43dfd12af19096aa81b8f125</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEUPLEFT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a76522122a7ddae6a94901080c142a8a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEDOWNLEFT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a90d441687c1fd1d3fd56a095ec6285bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEUPDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a9a2b69af25c6c0b3975e4c92b66fdab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEDOWNUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a0bf2df8dca101e19c68492f69ee560bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEUPDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a47eab1103be2801b59ea7a5f75cdcb5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEDOWNUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42af6be0eca2dce4720a5fdb73a228df637</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_HYPHEN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a246d9020bd3242d0b0ab4321baf6f5db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_WORD_EXT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a728a5a4fa3dcae609c79778abf7dcb8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHEDSLURDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a4edc0e32c66a1b01a835138b2a9b47fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHEDSLURUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ac3e5ac3a5ed3c95f0018af99098b8692</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHEDSLURAUTO</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a231328173a106841e44d42d9c27df3eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SMARTSHAPE_3STATE</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a71586f1948b98b11de6bb9015f24eb5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SLURDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a1b3e49a189c8717863ea403629529eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DIMINUENDO</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ab40f4fa943fc4bb0f903ce1b62d9e398</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_CRESCENDO</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a5821c34b894d6f4ea912b8d4bfd5e766</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_OCTAVEDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a69bd388353ced04eb77b2d6c31a8bce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_OCTAVEUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a484e5d9bde04fe16e52c884c50d83d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a76e67b990d011fc1a1fe03c7da369e82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a406507bdc844fcb879d94b45c490ab6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHCURVEDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42af8ffc7611435d83f91d142df0ed875f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHCURVEUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a99b27ac012a4c5aca80e070d02441913</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINE</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ae778aa4fe1a9c116f19f8e2a2a342d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINE</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a836d9b455a71f99bb891c8734384b1b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ae7274e78feb7ea88c806e73e4639bb9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a759f90eed67fb848b2dd24382fe9efcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_TRILL</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42abe8698ec97587de57f947436fe0137de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SLURAUTO</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a5d2c5e6b5432c924e4d4fcc7bee2cd0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHCURVEAUTO</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a5e861ac12fc406278343229a49360881</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_TRILLEXT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ac458c0ccb8c655a6c755d9e62ce9194f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEDOWN2</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ac8dfa32b5fa138a6d46dac68b6f6fc6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEUP2</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ad6a6458d1caa0f7ab3096a18f8e3137f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_TWOOCTAVEDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a2b31d8c0f461b4b6866fad83149de216</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_TWOOCTAVEUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a47c538614465db89bb7948e0c8ba43ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEDOWN2</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42aab92851045d5518a75df9c143758e375</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEUP2</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42abb7a2c580fa58dc86bc7f88a5321cb19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_GLISSANDO</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ae968883560b66c710406f28e684020ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_TABSLIDE</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42aac12cc53c80ba33bc60daf5c47ed5e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_BEND_HAT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42af42bf1fed69e817c3db0f214c7967a74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_BEND_CURVE</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a9907b1201d57bf2c58319deb52e54d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_CUSTOM</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a8947cde29216b7a4a4ed7dfaac87a8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEUPLEFT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a2df403ef399124d1ccc16c7ec3e50558</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEDOWNLEFT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a10943c6c43dfd12af19096aa81b8f125</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEUPLEFT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a76522122a7ddae6a94901080c142a8a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEDOWNLEFT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a90d441687c1fd1d3fd56a095ec6285bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEUPDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a9a2b69af25c6c0b3975e4c92b66fdab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_SOLIDLINEDOWNUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a0bf2df8dca101e19c68492f69ee560bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEUPDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a47eab1103be2801b59ea7a5f75cdcb5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHLINEDOWNUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42af6be0eca2dce4720a5fdb73a228df637</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_HYPHEN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a246d9020bd3242d0b0ab4321baf6f5db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_WORD_EXT</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a728a5a4fa3dcae609c79778abf7dcb8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHEDSLURDOWN</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a4edc0e32c66a1b01a835138b2a9b47fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHEDSLURUP</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42ac3e5ac3a5ed3c95f0018af99098b8692</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMARTSHAPE_DASHEDSLURAUTO</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a29b94a28426154f61cb5bf57d14a8b42a231328173a106841e44d42d9c27df3eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>ac462eaf76a71158fd163aaf437f6afe9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a0ec17f2541e3058be11ba05cb18ae2e9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSmartShape</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a8aaed61517fd9667e0ee073d79cb5d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>_GetLeftSideNoteID</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>aa54661f60ed1efa790d24a039afd6309</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>_GetRightSideNoteID</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a9d7ebac44ff32a7fdd16bd2e71d7f61c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetLeftSideNoteID</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>aff0f26c31f5d0785da10b0f7d31c245f</anchor>
      <arglist>(twobyte noteID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetRightSideNoteID</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>aa149cd262809838caad6b1ffe788ea0b</anchor>
      <arglist>(twobyte noteID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_LoadCenterShapes</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>ac4ffbe7fe074ef1d208052ec13ccb77d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_ClearCenterShapes</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a24d2a4fe7429153efad160a248d77de8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcLeftCellMetricPos</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a2f88b2bd0438a6a240f20c177896b624</anchor>
      <arglist>(FCPoint *pPoint)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcRightCellMetricPos</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a6d83cc4a57d5c3ced51864da23508e1b</anchor>
      <arglist>(FCPoint *pPoint)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcLeftEntryMetricPos</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>afefb816e8e34a798418dcd05f0fac838</anchor>
      <arglist>(FCNoteEntry *pEntry, FCPoint *pPoint)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcRightEntryMetricPos</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>aa54b61db7d7a6f8bf20b94288d2b1103</anchor>
      <arglist>(FCNoteEntry *pEntry, FCPoint *pPoint)</arglist>
    </member>
    <member kind="function">
      <type>SMARTSHAPE_TYPES</type>
      <name>GetShapeType</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>aab23b469d476f61d8fe24dcf7a11a68e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEntryBased</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a12a20b1defe227c389052872d92d9635</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPresetShape</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a227deca3949855c09a2748aef60853c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCSmartShapeSegment *</type>
      <name>GetTerminateSegmentLeft</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a8511f2367a58db6f653effd1357bb2b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCSmartShapeSegment *</type>
      <name>GetTerminateSegmentRight</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>af6996f796f0d2abee090a8bd94b7243e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCSmartShapeCtrlPointAdjust *</type>
      <name>GetCtrlPointAdjust</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a23cd7e68078248884ec11dd8f52b9271</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetMakeHorizontal</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a25a20da7a8745704d125f3a39464eb17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetMaintainAngle</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>aa6010e1fce4c1c10e9a6afff618122fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVisible</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a9738f63396cea9b7c4b16792980684be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLineID</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>aff183a9e3bb5e123bf647d5964180f08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SMARTSHAPE_3STATE</type>
      <name>GetEngraverSlur</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>ad6784e8dbf138babf869fd3d415ef854</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SMARTSHAPE_3STATE</type>
      <name>GetAvoidAccidentals</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>ac058447ee8c7fc14b3ea5c6b4a4b307b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeType</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a95e3141698147740c285358cb82f98f3</anchor>
      <arglist>(SMARTSHAPE_TYPES shapevalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPresetShape</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>ae230ba1bf5b1549266f01ef107d29d60</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineID</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a7966e886197149bbcee62a221f9dd801</anchor>
      <arglist>(twobyte identifier)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMakeHorizontal</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a55ae2fb88a355b5122c46afe8bf8ef04</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaintainAngle</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a681d8ed7ec5f8993614237a51e383b5f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVisible</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a8e9d94b4b73fd94cc31675820e5d41ce</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntryBased</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>ab0d9ad53251f7769489846e9933d2f35</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurFlags</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a5f59d48d51e748d40e9121e086597ab8</anchor>
      <arglist>(bool entrybased)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHairpinFlags</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a91c41b8d34f510884925eb3433e390b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntryAttachedFlags</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a6ed90087edd8cfe61cb05103306595a5</anchor>
      <arglist>(bool presetshape)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasureAttachedFlags</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a709d49e48f0f47d4c36055bc24906b53</anchor>
      <arglist>(bool presetshape, bool makehorizontal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBeatAttached</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a775c9315aafe379b50d2dd17414b7161</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBeatAttached</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a9091a44ac7368874d0dc63b7c2dcf507</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverSlur</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a8c509cde142a7a10c278747400e2aded</anchor>
      <arglist>(SMARTSHAPE_3STATE state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidAccidentals</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>ac913273e5f27610c5573da337ef2b0e9</anchor>
      <arglist>(SMARTSHAPE_3STATE state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsHairpin</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>af577d0278f6e87c1d802a2b05dd8842f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAutoSlur</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a6d25675566cba96d6fd5f79ae2f51bdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOverSlur</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a2ed460827c7600623fae95e3158b8bf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUnderSlur</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>aa16325ae3e104ed40db7bb5e87b22c86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsTwoHooks</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>ad72d852a5a034cdec1f5b0f2bbb543cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSlur</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>ae9a6fbda9a942129e17d778dfb36255b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSolidSlur</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a504e2dbb53561da494de47a4020e30c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDashedCurve</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>af47fb9196b54316be7f2bd247ddd8946</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDashedSlur</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>aedcf86246327086bb5143f4c34f1aaa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsTabSlide</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a1a99865b9a3fe8be8e8abba7efb0a9c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsGlissando</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>af5f9860ad809638e90392cffd0f69d66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCustomLine</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>aa8a521bd3b06f023fec9a167e9122e37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEntryBased</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>abf97de3297666d221dc2ce18d96a13b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsWithinRegion</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a56b3695d3935a63610e404a31bd251f5</anchor>
      <arglist>(FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteEverything</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>ab22e6fd8f59d287f4c9aa9c826324e10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignToStaff</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>ac09c99e50229feb8bd2114f8c866f385</anchor>
      <arglist>(int newstaff)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNew</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a7a3ba4f70d9d8f03bf696e3d8013b447</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewEverything</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>a31debffd155eda09bfd01d041c0b0cbb</anchor>
      <arglist>(FCNoteEntry *pFirstEntry=NULL, FCNoteEntry *pLastEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_smart_shape.html</anchorfile>
      <anchor>accf157df6e6a890266c553838fa8c057</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSmartShapeCtrlPointAdjust</name>
    <filename>class_f_c_smart_shape_ctrl_point_adjust.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>a3b9774515cd45be0faee0f79324319e4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSmartShapeCtrlPointAdjust</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>a0e92d62479079be6d6463b1229111f32</anchor>
      <arglist>(__SSCTLPTADJ *pCtrlPointAdj, FCSmartShape *pReference)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetControlPoint1OffsetX</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>ac945f1008f70876cceb8fac40d573cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetControlPoint1OffsetY</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>a1bbf172416c0cd9a45f6652d283c8a95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetControlPoint2OffsetX</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>a3bc94c7a8604d06d09a96a7d84ac788e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetControlPoint2OffsetY</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>af97a4d784639b59165ac37b98d058f0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCustomShaped</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>ac65c4c342a0dba5585700ddd2ed59d17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControlPoint1OffsetX</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>a629080ca277a149cd2f859b153ad96a9</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControlPoint1OffsetY</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>ac157bf3e0b78741222e2a084b0e75cf8</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControlPoint2OffsetX</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>a599803c251209e96c7d0fbc4674a56c6</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControlPoint2OffsetY</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>a5c48f2c5451c5840f5a7c1a69ac5c1d1</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCustomShaped</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>a4fe23d5361e779aad29056dc985e1cc0</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurShapeOver</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>a8988ded47c755eb2199b9597ea9fcf6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurShapeUnder</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>a1c9556b3853387c5f672a947c2e3d6a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurShapeUndetermined</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>abec6689d8c9c9c3dc705adbd6026b7c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDefaultHairpinSize</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>a09a71f720b49830825e66facdc622951</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDefaultSlurShape</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>a96cc75418d5d44a7b9374ad599719c88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_smart_shape_ctrl_point_adjust.html</anchorfile>
      <anchor>aa9a4bb0e2eb598a47827774b37198dab</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSmartShapeEntryMark</name>
    <filename>class_f_c_smart_shape_entry_mark.html</filename>
    <base>__FCEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_smart_shape_entry_mark.html</anchorfile>
      <anchor>aacc716422393f0e505c1da3dbb2fdc9d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_smart_shape_entry_mark.html</anchorfile>
      <anchor>a5e456bf9a5872003c76fa8f1778c02ee</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSmartShapeEntryMark</name>
      <anchorfile>class_f_c_smart_shape_entry_mark.html</anchorfile>
      <anchor>acde3969da476c8f67b8f238a29991daf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCSmartShape *</type>
      <name>CreateSmartShape</name>
      <anchorfile>class_f_c_smart_shape_entry_mark.html</anchorfile>
      <anchor>adc7be31ca390148dc11f93ea3be30bcf</anchor>
      <arglist>(bool load_center_shapes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcLeftMark</name>
      <anchorfile>class_f_c_smart_shape_entry_mark.html</anchorfile>
      <anchor>aad80650fe144c6e5cfd648602d94852a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcRightMark</name>
      <anchorfile>class_f_c_smart_shape_entry_mark.html</anchorfile>
      <anchor>a1e91ef226417226344458a7703259dca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeNumber</name>
      <anchorfile>class_f_c_smart_shape_entry_mark.html</anchorfile>
      <anchor>a15f3b6660142d5ae8125efccddd1650f</anchor>
      <arglist>(CMPER value)</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetShapeNumber</name>
      <anchorfile>class_f_c_smart_shape_entry_mark.html</anchorfile>
      <anchor>a85b2d3848d0a2a8498bd31349628d3e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_smart_shape_entry_mark.html</anchorfile>
      <anchor>a3bdfb4d5443c67bb1ced9180419e3895</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSmartShapeEntryMarks</name>
    <filename>class_f_c_smart_shape_entry_marks.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_smart_shape_entry_marks.html</anchorfile>
      <anchor>ae9158a5ebbedd41964c5649697a28a82</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSmartShapeEntryMarks</name>
      <anchorfile>class_f_c_smart_shape_entry_marks.html</anchorfile>
      <anchor>a612e8cebd339a99fe13f13c8115ac719</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCSmartShapeEntryMark *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_smart_shape_entry_marks.html</anchorfile>
      <anchor>adf753d5e5597a482d19ef3b39754a1c7</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSmartShapeMeasureMark</name>
    <filename>class_f_c_smart_shape_measure_mark.html</filename>
    <base>__FCInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_smart_shape_measure_mark.html</anchorfile>
      <anchor>abe3a59ad0be2a0de6f1f81d5fdac0f84</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_smart_shape_measure_mark.html</anchorfile>
      <anchor>a6ef94a96cb72e9e39b94a0b2834c570f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSmartShapeMeasureMark</name>
      <anchorfile>class_f_c_smart_shape_measure_mark.html</anchorfile>
      <anchor>acd87018ca525dac1650cec7e62c45b5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeNumber</name>
      <anchorfile>class_f_c_smart_shape_measure_mark.html</anchorfile>
      <anchor>ad42f4254a88619c9b726f7edf227c367</anchor>
      <arglist>(CMPER value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetCenterShapeNumber</name>
      <anchorfile>class_f_c_smart_shape_measure_mark.html</anchorfile>
      <anchor>a81cc915009a304568e94f86ae9ccec03</anchor>
      <arglist>(CMPER value)</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetShapeNumber</name>
      <anchorfile>class_f_c_smart_shape_measure_mark.html</anchorfile>
      <anchor>a7e044399e2493178b90bbefd5043ba22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>_GetCenterShapeNumber</name>
      <anchorfile>class_f_c_smart_shape_measure_mark.html</anchorfile>
      <anchor>a2992cd182f6a1e08b8fe28b519970b8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMeasure</name>
      <anchorfile>class_f_c_smart_shape_measure_mark.html</anchorfile>
      <anchor>a8557a1b9ef7b31ed1d364ef8ecb20ed3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>FCSmartShape *</type>
      <name>CreateSmartShape</name>
      <anchorfile>class_f_c_smart_shape_measure_mark.html</anchorfile>
      <anchor>ad60f0b529eefb53579d51ff570545665</anchor>
      <arglist>(bool load_center_shapes=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_smart_shape_measure_mark.html</anchorfile>
      <anchor>ab250b6957f821826948208c71fbb4026</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSmartShapeMeasureMarks</name>
    <filename>class_f_c_smart_shape_measure_marks.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCSmartShapeMeasureMarks</name>
      <anchorfile>class_f_c_smart_shape_measure_marks.html</anchorfile>
      <anchor>a676dfd298150c7e4cc3eec4b88f2e462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_smart_shape_measure_marks.html</anchorfile>
      <anchor>a191888478bc1efd00a446c170c81ef9f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAll</name>
      <anchorfile>class_f_c_smart_shape_measure_marks.html</anchorfile>
      <anchor>ad0b478958203ab32e242b2982089f000</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAllForRegion</name>
      <anchorfile>class_f_c_smart_shape_measure_marks.html</anchorfile>
      <anchor>aae714dc15390b38d8a6f166f7b60203b</anchor>
      <arglist>(FCMusicRegion *pRegion, bool removeduplicates=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveDuplicateReferences</name>
      <anchorfile>class_f_c_smart_shape_measure_marks.html</anchorfile>
      <anchor>a73b43f4427e7c1ec1af1f83df7ddfba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeepSlursOnly</name>
      <anchorfile>class_f_c_smart_shape_measure_marks.html</anchorfile>
      <anchor>a082194ebf8afc1d1a141bcd6131d1817</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeepHairpinsOnly</name>
      <anchorfile>class_f_c_smart_shape_measure_marks.html</anchorfile>
      <anchor>a28dc477501341129fac9ce242bce4678</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeepCustomLinesOnly</name>
      <anchorfile>class_f_c_smart_shape_measure_marks.html</anchorfile>
      <anchor>aeb28998e4435617193b8750aad3a17a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeepSystemStavesOnly</name>
      <anchorfile>class_f_c_smart_shape_measure_marks.html</anchorfile>
      <anchor>a55b5a26891d653d235f40e9e596bdeb1</anchor>
      <arglist>(FCSystemStaves *pSystemStaves)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeepStaffOnly</name>
      <anchorfile>class_f_c_smart_shape_measure_marks.html</anchorfile>
      <anchor>a8f1ebdc3eb7bb7763ee2e217dad5a089</anchor>
      <arglist>(twobyte staffno)</arglist>
    </member>
    <member kind="function">
      <type>FCSmartShapeMeasureMark *</type>
      <name>FindSmartShapeMarkByID</name>
      <anchorfile>class_f_c_smart_shape_measure_marks.html</anchorfile>
      <anchor>ad5b5961067f18985594bad1ffac4f22c</anchor>
      <arglist>(CMPER cmperSmartShape)</arglist>
    </member>
    <member kind="function">
      <type>FCSmartShapeMeasureMark *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_smart_shape_measure_marks.html</anchorfile>
      <anchor>aad674ec0fbb73c40984426a45b6db4f3</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSmartShapePrefs</name>
    <filename>class_f_c_smart_shape_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a863c06f2e479882e0fd157bbf6c0d911</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>acb4cc132b215d5a792b0c928f170b81d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSmartShapePrefs</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a33234d12f8a514c1b711c9b76d68263a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetCustomLineDefID</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a9dff05ef5545c3b6659bd5b671c9aea2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetGlissandoDefID</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a9cd5232f0a38b0dba8e14537776c1d24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetTabSlideDefID</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a2f1a35cf463a1456c630b19eb32ce7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetGuitarBendDefID</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a5c196ec1c9b0ba21434a0f3167d7c44c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHairpinMakeHorizontal</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>aabf50e0e57d010a8f02aec87f780cd1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHairpinDefaultOpening</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a29636818304b1e4ccaab04b3cd7e31b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHairpinDefaultShortOpening</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>aee9c05cf05be615eafe8815081f10408</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHairpinMaxShortSpanLength</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>af895c8b8557889f2d40b5385e89d7ae5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetHairpinLineWidth</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a7cd4b82631ace64de8f08a01adb668cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseEngraverSlurs</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>ad05a617d889939a85f34c951b18cddfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetLineWidth</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a2274e4d0a7faeb7168d36d5728c48021</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLineDashLength</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>aec6861544aec8cc1c80510c832984a79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLineDashSpace</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a8aa33dbea96e260a3ab2c60dfe993e72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHookLength</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a62988faad1ec651bf660f16f294a6d72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetOctavesAsText</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>afaebf5eec23f0dd33f8bf41e8b2de2d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEngraverSlurMaxAngle</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a39aa81b302247ae485e8c0f2c499ea88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEngraverSlurSymmetryPercent</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a24a05fc911f09f42be4d1e5ddd1a4a37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetEngraverSlurSpaceAround</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a3b3fb81e47fdb0bd14c1617539926d9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEngraverSlurAvoidAccidentals</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a829727919bcd0c1a499e19b41a10c37d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetEngraverSlurAccidentalSpace</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a95ebdfb0a677e9a63821f8e1d166ac83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEngraverSlurStretchFirst</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a108c11d54aef1c0e7208b33c54bf98ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEngraverSlurStretchByPercent</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>ae5e8dda29928356bc965ae365fce9dca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEngraverSlurMaxStretchPercent</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>ab672765dbe1da950582c1d1f4ed01465</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetEngraverSlurMaxStretchFixed</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a5c6c267ae2dbcb9537d5c538b58233c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetEngraverSlurMaxLift</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>aa02aef48de34e3942b772e1c02a6c502</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSlurBreakStaffLineAvoid</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a75d325af6e9723ca66117531da5df380</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSlurBreakSystemStart</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>acabaa23fb99bc21ad4948f87f4aef135</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSlurBreakSystemEnd</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>add0574c06de528d405fbba23aa22e971</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetSlurTipWidth</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>aefe43c121798f3e5a27a6c2cb82a4c18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSlurTipAvoidStaffUse</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a2ed12b7f0e23c3f47e06a9d2dd4f9c0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSlurTipAvoidStaffAmount</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>aebb46223fa82b453bb8c561f681d9550</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSlurThicknessHorizontalLeft</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>acd4f4601e71221fdaf0c0ce86a8e1d17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSlurThicknessVerticalLeft</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>ad6ebbfb33b5f293407b680fec9f56668</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSlurThicknessHorizontalRight</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a58164f141c4977285b6f851696a35978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSlurThicknessVerticalRight</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a7b0843387bc62cfbc6a9c3e969685589</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGuitarBendParentheses</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>aed795e9b95de9154557b75d4cd1d68fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGuitarBendHideNumber</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>aca7888132fc41f2d4281d54321ee34e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGuitarBendAutoGenerateText</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a830eae233282015bd6cea3cc26114fd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetGuitarBendReplaceWithFull</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a1a73b215f914b07dd33ab25900b91b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCustomLineDefID</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a04f30a4e84812ac5761270e64f03d5a9</anchor>
      <arglist>(CMPER idvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGlissandoDefID</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a0e8c50f8b97f063fdb8866b27e0b3068</anchor>
      <arglist>(CMPER idvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTabSlideDefID</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a23c29dd67a11f1c67c55aa6a5cf761e3</anchor>
      <arglist>(CMPER idvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuitarBendDefID</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>adb754e85c37260939ce97eb745372a59</anchor>
      <arglist>(CMPER idvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHairpinMakeHorizontal</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>ab17fadfb208b4d33b3547e6815472c08</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHairpinDefaultOpening</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a6c2f38ee3ee2005a073235e6e567ff77</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHairpinDefaultShortOpening</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a45516f2792bc3fb12b90d086e8f0faa7</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHairpinMaxShortSpanLength</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a1cefdcc06eebf0772c0fa5cfb2b9ed38</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHairpinLineWidth</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>ab13d07e0b7de61c4c1fdcf0428596a1f</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseEngraverSlurs</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>aec9f10bf768b75e04a3b2cbcc29d36fa</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineWidth</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a961036a16fc6d1c85a9277978a39b2f0</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineDashLength</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a59be82e668e5f97c36ef51c3e54e311e</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineDashSpace</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a2de60841ad2cc6c31000db0c72659f8a</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHookLength</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a652c1b9aabdfb510509d8e62521a6903</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOctavesAsText</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>afe49ecc1b7b4628dc39439bca026816b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverSlurMaxAngle</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a2552ffa79b91aa550e3961916dabcbfd</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverSlurSymmetryPercent</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a4c183c70c9a3c25fc88e83f6eea3e64a</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverSlurSpaceAround</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a25435b267e19de1c4beb616527425ac7</anchor>
      <arglist>(Evpu16 spacevalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverSlurAvoidAccidentals</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>aec3152e9d30e9742da70f37ecb06a89b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverSlurAccidentalSpace</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a08afb88af993a457fadfe2d4881ab675</anchor>
      <arglist>(Evpu16 spacevalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverSlurStretchFirst</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a92ddf21bea31fe826df4bba5e82a1741</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverSlurStretchByPercent</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>ae892448ce11ad673a902a9c85861e2dc</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverSlurMaxStretchPercent</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a059518ecb606a6f5e4873a7e2c7836ad</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverSlurMaxStretchFixed</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a1d75163835cc97818a28897c5b3af260</anchor>
      <arglist>(Efix32 maxvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverSlurMaxLift</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a2f9a7b40b85fd1e2d9e48e97eebb56ca</anchor>
      <arglist>(Efix32 maxlift)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurBreakStaffLineAvoid</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a51195cedc2b224ceeb6aa96417f60438</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurBreakSystemStart</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a3c1282a5d90ab205610272ffbfda00d6</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurBreakSystemEnd</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>af2bc1482444bfc46d2d37843e2550944</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurTipWidth</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a14e59dc983dedaf210f044dc0984171c</anchor>
      <arglist>(fourbyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurTipAvoidStaffUse</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a3725ba141640b4473f0392c82c2828bb</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurTipAvoidStaffAmount</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a644cc6640eec01547e0c13f9af3311ec</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurThicknessHorizontalLeft</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a5e09c8efe01e4ac9ab04b3e8229b7ab8</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurThicknessVerticalLeft</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>aa9358a43d1eb2a477e2f1d39f238bfb3</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurThicknessHorizontalRight</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a3901ab22e35fe901da451bc19a5681a6</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlurThicknessVerticalRight</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>ac6e0dc6d4c9940619089a6556500cb6a</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuitarBendParentheses</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a0cff254f97e3c30c760e086f6a54502b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuitarBendHideNumber</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a7af0a91acb7857fbc4f6a414b691dbca</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuitarBendAutoGenerateText</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a7e4c938a5622da0751fe6d70f33bde65</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGuitarBendReplaceWithFull</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a55f7d013325af45d3fa1f2bb56906e28</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_smart_shape_prefs.html</anchorfile>
      <anchor>a42fab4255d7ab67f82965fbcf2242758</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSmartShapes</name>
    <filename>class_f_c_smart_shapes.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_smart_shapes.html</anchorfile>
      <anchor>a786b607529ed4cedc920f76d9281b5fd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCSmartShape *</type>
      <name>FindLeftEntryNumber</name>
      <anchorfile>class_f_c_smart_shapes.html</anchorfile>
      <anchor>a0748016b6e019934b02f5da09a8c93bc</anchor>
      <arglist>(ENTNUM entnum)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSmartShapeSegment</name>
    <filename>class_f_c_smart_shape_segment.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a25a412642d72065d01e911fb21792e01</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSmartShapeSegment</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>ad33b0c5147b04e14f98a3fb5238d104f</anchor>
      <arglist>(__SSTERMSEG *pSeg, FCSmartShape *pReference, bool leftsidesegment)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a55f5ad6ce60de5e0cb3de543ce2b3ed9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMeasure</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>acec6b7c3c34e21a6e1050db425f4ded7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetNoteID</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a16dd86492affa108d87a746fbf2bb7ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a1a4ca6e9e96065de616389378ccb073a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ENTNUM</type>
      <name>GetEntryNumber</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>afbd48141bf90d60a9caac9b9292439ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndpointOffsetX</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a0b2d68cbc4e10d83cbc5e0d94391b117</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndpointOffsetY</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>ac06bc1f835750f7886df45cfa4ee96c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetControlPoint1OffsetX</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a9ebc9370e8129730ac46d2d8c146dc60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetControlPoint1OffsetY</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a14ac83a36c962495716ce5ef43a57334</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetControlPoint2OffsetX</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a1ffed5599ddffd71bc993c175b88ae2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetControlPoint2OffsetY</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a523ffa5056dd14a81fbfb994b3662d5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBreakOffsetX</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a1b220027f2b8bad5494eb4202001527e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBreakOffsetY</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a64c18e6fa334486b98e3070e8c44b3e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaff</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>aca53e4a6e866e4f3baec13032e74dc25</anchor>
      <arglist>(twobyte staff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasure</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a86916f92c6e0c5e8316efa3807271d33</anchor>
      <arglist>(twobyte measureno)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteID</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a1c1b4fd419c15843f0e2aeb46491defe</anchor>
      <arglist>(twobyte noteID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurePos</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a57bf88acc367f83f8da47c509a7c0291</anchor>
      <arglist>(TimeEdu32 edupos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndpointOffsetX</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>abe64e5a3f509ba2affff747cce870745</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndpointOffsetY</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a6b8a0e3a274053e12f28a7a176680f00</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControlPoint1OffsetX</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>ac8b2a550566617f2668916ffa6d606ce</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControlPoint1OffsetY</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a4b0f8826ac418d1ae205d031158b7993</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControlPoint2OffsetX</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>ac74cd0d626d7b81d45030442f91e410a</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControlPoint2OffsetY</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>aeb389d0297f347c8098cf37977a85012</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakOffsetX</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>ac0a7f59f6548e981cc76c5d00a022a57</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakOffsetY</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>a0cd389702dbd8e39e55a09dd8b1338ac</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntryNumber</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>af85299c83f51e430a6c3f9a58b8e6537</anchor>
      <arglist>(ENTNUM value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntry</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>aa3c00167497da0daa3b36bc7956f0d76</anchor>
      <arglist>(FCNoteEntry *pEntry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCustomOffset</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>ad82ea240a8c479f08a81132256e3f926</anchor>
      <arglist>(bool rightside)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_smart_shape_segment.html</anchorfile>
      <anchor>ab683b3823eea72c60cc32dbd457a649b</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaff</name>
    <filename>class_f_c_staff.html</filename>
    <base>__FCStaffBase</base>
    <member kind="enumeration">
      <type></type>
      <name>STAFFAUTONUMBER_STYLE</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ae67e6d274966076c15c594787502604b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFAUTONUMBER_ARABIC_SUFFIX</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ae67e6d274966076c15c594787502604ba0cec2e8d4b3f71c060d327e9b66b9dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFAUTONUMBER_ROMAN_SUFFIX</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ae67e6d274966076c15c594787502604baf7d9e168125a168bf5d25d586f21aa68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFAUTONUMBER_ORDINAL_PREFIX</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ae67e6d274966076c15c594787502604ba83160a2b9b8cdfa0d048fcaa773f27b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFAUTONUMBER_ALPHA_SUFFIX</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ae67e6d274966076c15c594787502604baca12cc1f21a97aa9b59f6ab28128fa16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFAUTONUMBER_ARABIC_PREFIX</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ae67e6d274966076c15c594787502604ba74a28371b8f83b36875e0a0d1d61c0f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFAUTONUMBER_ARABIC_SUFFIX</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ae67e6d274966076c15c594787502604ba0cec2e8d4b3f71c060d327e9b66b9dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFAUTONUMBER_ROMAN_SUFFIX</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ae67e6d274966076c15c594787502604baf7d9e168125a168bf5d25d586f21aa68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFAUTONUMBER_ORDINAL_PREFIX</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ae67e6d274966076c15c594787502604ba83160a2b9b8cdfa0d048fcaa773f27b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFAUTONUMBER_ALPHA_SUFFIX</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ae67e6d274966076c15c594787502604baca12cc1f21a97aa9b59f6ab28128fa16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAFFAUTONUMBER_ARABIC_PREFIX</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ae67e6d274966076c15c594787502604ba74a28371b8f83b36875e0a0d1d61c0f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>afb9662a834c24e18d75fba8786a8f9cf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>a404b8ee4f0c031c5e2c97a3c914108bc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCStaff</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ac2c9309adf82bef4a8cb566e95baef83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>a079eb0729222be0f901e6fc8e995968e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCInstrumentPlaybackData *</type>
      <name>CreateInstrumentPlaybackData</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>a6441aba4b2a9a177ca7a9f2825ef825a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCFretInstrumentDef *</type>
      <name>CreateFretInstrumentDef</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>af0d96f97822806cc9d900236f3bda576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseAutoNumberingStyle</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>a5fef7f3c21daadf1c9ffe882d098b928</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>STAFFAUTONUMBER_STYLE</type>
      <name>GetAutoNumberingStyle</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>aafedc387f9002633d21dee926b846106</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseAutoNumberingStyle</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ac9061d7d1cfa0cd443aa91350e236529</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAutoNumberingStyle</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>a1fa3aaef2b9550e2adfdd146dff2d368</anchor>
      <arglist>(STAFFAUTONUMBER_STYLE value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcPercussionLayoutID</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>aaa15d16da6c0268185493ae30b1079de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCStaffNamePosition *</type>
      <name>GetFullNamePosition</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>af0374dbc1108d27cf4f7804b0588bc80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCStaffNamePosition *</type>
      <name>GetAbbreviatedNamePosition</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>a641df6b06d0e0640c8899163bbee51c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCPercussionStaff *</type>
      <name>CreatePercussionStaff</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>a08d8ce9aa1fa7c3dcd0c00f2a81c90e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SavePercussionLayout</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>ae84bc840e7a22ab85821d18e04fe0f62</anchor>
      <arglist>(int layoutID, int mapID)</arglist>
    </member>
    <member kind="function">
      <type>FCInstrumentDef *</type>
      <name>CreateLayerInstrumentDef</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>a7c6e250e519e46f06631ab0353b96dc4</anchor>
      <arglist>(int layer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_staff.html</anchorfile>
      <anchor>adf7c998c66edff111697a2628e7178c0</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffList</name>
    <filename>class_f_c_staff_list.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>STAFFLIST_MODES</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>addd36a6ac81bf72dc0038d61e4841170</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCStaffList</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a62406791d36a290271db66984198b4ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a5324e04df8354438e90005c4eb98946a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>acdd6129970769b7c942c2b59d91869c4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMode</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a96c93d5e8099145ee88bf11710a4047e</anchor>
      <arglist>(STAFFLIST_MODES mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a0a5a71912a31530c555ef7b6de9d7f55</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>ad15d17d7407b510d848ae9ed3a0e0d6c</anchor>
      <arglist>(CMPER itemno) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNew</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a58ccfeb148ce57feec75b08bdafc2b3a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>abf84bb63203ea92ccb5505be185954c5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteData</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a1e354810a4e5d56822ad63762acc7573</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadNext</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>ab400650d5dfe94b139a11f7c89744526</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetElementCount</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>ae9c9c35a977b45f4603228d9f0dce888</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStaffCount</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a47e2831e65b8d40dbc025f37d3084aa3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a27f4044dbb72e108466068caaf11b38c</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsElementAvailable</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>aa8719411d3bdea8f9078cab719eb5bce</anchor>
      <arglist>(twobyte stafflistelement)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IncludesTopStaff</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a3ae6f669b26254dae6f80638e4881ba7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IncludesBottomStaff</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a8cc3d18e3fb0cdd4e88a4f961a0311c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IncludesStaff</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a94e6d6d1f406f892ff620d1e4b285015</anchor>
      <arglist>(twobyte staffnumber)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateNameString</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a8619dc90ae71527f42ef9eead1dd9679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNameString</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a951bba2d2529c4c34902a410cc77d2ad</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddElement</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a3426d81f151a198cbed3159866951e63</anchor>
      <arglist>(twobyte elementnumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddStaff</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>af3c3f1e44f5cd1af89f0440defdd5373</anchor>
      <arglist>(twobyte staffnumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddTopStaff</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>ae52054858c076eeaa9c23ca1152b3879</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddBottomStaff</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a7690dcea3fe025785bfd7885624abc78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveElement</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a0e2672adb82444b113f80889b4516bcf</anchor>
      <arglist>(twobyte element)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveTopStaff</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>aa2ed84c298744a75156552d90d920a49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveBottomStaff</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a42708dc911d7fbdb0488e6bed35357c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveStaff</name>
      <anchorfile>class_f_c_staff_list.html</anchorfile>
      <anchor>a33abc39a68797c655c539bdb85656734</anchor>
      <arglist>(twobyte staffnumber)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffListCategoryText</name>
    <filename>class_f_c_staff_list_category_text.html</filename>
    <base>__FCOtherText</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_list_category_text.html</anchorfile>
      <anchor>a57c07a4f2d1ab57288c6a60ce9e553da</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffListLookup</name>
    <filename>class_f_c_staff_list_lookup.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type></type>
      <name>FCStaffListLookup</name>
      <anchorfile>class_f_c_staff_list_lookup.html</anchorfile>
      <anchor>a681be87514c9f893143da1c8cebab707</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_list_lookup.html</anchorfile>
      <anchor>aabae005978bf29b9acd74d20f15e9afc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadStandardList</name>
      <anchorfile>class_f_c_staff_list_lookup.html</anchorfile>
      <anchor>a7e58efed7af82766c7bbb42f752d3f8c</anchor>
      <arglist>(twobyte number)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadCategoryList</name>
      <anchorfile>class_f_c_staff_list_lookup.html</anchorfile>
      <anchor>afcae20e5eeecf1f5f19d548c65530744</anchor>
      <arglist>(twobyte number)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadAssignmentList</name>
      <anchorfile>class_f_c_staff_list_lookup.html</anchorfile>
      <anchor>a616ccd1f23e883c15825fdf0b9ee1546</anchor>
      <arglist>(twobyte number)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLoaded</name>
      <anchorfile>class_f_c_staff_list_lookup.html</anchorfile>
      <anchor>a002b27b4545c65b3c68c2ff3bcfb9010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStaffElementDisplayed</name>
      <anchorfile>class_f_c_staff_list_lookup.html</anchorfile>
      <anchor>a6ec253bc3567cbab1e86b345ef2a95ba</anchor>
      <arglist>(eStaff staffno, bool score, FCSystemStaves *pSystemStaves)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffLists</name>
    <filename>class_f_c_staff_lists.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCStaffLists</name>
      <anchorfile>class_f_c_staff_lists.html</anchorfile>
      <anchor>a1ed1323213168f4598d611b9b766c6b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMode</name>
      <anchorfile>class_f_c_staff_lists.html</anchorfile>
      <anchor>aba12b1893e86bb9aedd4b4f2ba3809d6</anchor>
      <arglist>(FCStaffList::STAFFLIST_MODES mode)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_lists.html</anchorfile>
      <anchor>a97a6d764ebea170eb4447d5441c39f85</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCStaffList *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_staff_lists.html</anchorfile>
      <anchor>ad576683d0e0bd75f92314db35bec6668</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffListStaffAssignText</name>
    <filename>class_f_c_staff_list_staff_assign_text.html</filename>
    <base>__FCOtherText</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_list_staff_assign_text.html</anchorfile>
      <anchor>a47014ad5e42a51915e25c5d0e53062a5</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffListText</name>
    <filename>class_f_c_staff_list_text.html</filename>
    <base>__FCOtherText</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_list_text.html</anchorfile>
      <anchor>a742c9f62f8e527c48135bb9f35cacd60</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffNamePosition</name>
    <filename>class_f_c_staff_name_position.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>a920bc798745633bdb3ab1f1b977baa87</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>ada651a2bd52a6486c0c07cf07f0352d8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCStaffNamePosition</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>a7cedb401ae107eb3c71158c5a0d91096</anchor>
      <arglist>(bool fullname)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalOffset</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>a1a12cc6891f4c45c1af597d8c271b7f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalOffset</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>ac24026882cfbb67d5cd7dac411598f59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetJustification</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>aa9fcbce8ecdfa1c88874487fc9c6336a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetAlignment</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>a46bf4cea44c95b70d0aaa84c17c6ce1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetExpandSingleWord</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>ad1681df8a57726c75fa8900a7b6efe48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUsePositioning</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>a45cfbe05c0cd9936acd7e90b6b8249e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOffset</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>a9ed4cc2657d3f554c302f2a163eea1cf</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalOffset</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>aaa07dc53a251c9a62c0c9a147c1b9398</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetJustification</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>a3670b6ab251466005dc5eab4af9349a0</anchor>
      <arglist>(FLAG_16 justification)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlignment</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>a440a5d64e3b018cfb737fdd072355b82</anchor>
      <arglist>(FLAG_16 alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExpandSingleWord</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>ac452affcc34239b8dc25fa8933306971</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUsePositioning</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>a2d72aa393f4b5031c3ef6f4dbaa5834b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>CalcHorizontalPosition</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>a2f1a33797477a938328ae54634c9902f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>CalcVerticalPosition</name>
      <anchorfile>class_f_c_staff_name_position.html</anchorfile>
      <anchor>ab9b5a57cde716ec32c4efd99e4106f98</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffNamePositionPrefs</name>
    <filename>class_f_c_staff_name_position_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>a3784c1e35bc5407bc889567aba7017f5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>a82a7b20ee75eb6db3758d840af147b58</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCStaffNamePositionPrefs</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>ad0f7b38ba03a4b4bc2b33ee1225dad8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFull</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>a3239b5577a10ee41c3b75d4431933695</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadAbbreviated</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>afd36b45d9900d0873dee526ab252a2af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalPos</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>a23fe61799afad63e08b697a1dbe2ce76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalPos</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>a9af77d210a0bd8c5b3219b328854c55f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetJustification</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>a91d28a2b8b7a52a4f887e37cb61f3547</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetAlignment</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>a826365b44c42cc5856bc32ff05dce0dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetExpandSingleWord</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>a66607580a9134bd3052c571ae18d2142</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPos</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>a856667f08e7094d03fa627752c328588</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPos</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>ad0952fc9cb8e442ee6b1e751e9e651cc</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetJustification</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>a9081d64d25ac401e276f9a7fb172ad57</anchor>
      <arglist>(FLAG_16 justification)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlignment</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>a569edcf80f39238ed006bfab07b037b2</anchor>
      <arglist>(FLAG_16 alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExpandSingleWord</name>
      <anchorfile>class_f_c_staff_name_position_prefs.html</anchorfile>
      <anchor>a5194bd2ff2b3a5c51ff5e5dc9e834ad4</anchor>
      <arglist>(bool state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffStyleAssign</name>
    <filename>class_f_c_staff_style_assign.html</filename>
    <base>__FCInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>a245c448eccf1e6c9512af3f50a0aeba6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>a2da37db5c6cb845548fb6fcb404fcf60</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCStaffStyleAssign</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>a4f0dba810a7fa7deaf655baa914f2ed6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStyleID</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>a825d84cf7246f1ac2e36cdd05c02ccc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eMeas</type>
      <name>GetStartMeasure</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>a52b7d5a8b4cd426decc5e8ae08ca334b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetStartMeasurePos</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>ad33151f2cd53f01c1112e244597ecc18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eMeas</type>
      <name>GetEndMeasure</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>ab89b7126f7aafa9b7ea4e38143fe0bfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetEndMeasurePos</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>a99705244f1a8c5c51da7ea4c29db051c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartMeasure</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>a95125ca4b25511a242c6a7fc062383f7</anchor>
      <arglist>(eMeas value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartMeasurePos</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>ab97c71f58618a68f2f1f467423c083b7</anchor>
      <arglist>(TimeEdu32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndMeasure</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>a11d70c49b89a266a2dfb9a335920435d</anchor>
      <arglist>(eMeas value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndMeasurePos</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>abbb0242321516420e46fad3051607d05</anchor>
      <arglist>(TimeEdu32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStyleID</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>aa0562bf67cc55d1d2d472fba3564a2dd</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>eStaff</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>a64a37c9ff4d8a426037b1d6e04b7e1a3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndMeasurePosRight</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>ac6f3d325b7b7ecc8a97f5d033f117f7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOverlapping</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>ac25b793b3bb3754c62175da3f4b2535d</anchor>
      <arglist>(FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_staff_style_assign.html</anchorfile>
      <anchor>a100391542248958cf26ae36577fc3eef</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffStyleAssigns</name>
    <filename>class_f_c_staff_style_assigns.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_style_assigns.html</anchorfile>
      <anchor>a8d8d97327c138dfbf6eee87503716665</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCStaffStyleAssign *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_staff_style_assigns.html</anchorfile>
      <anchor>a0aca9c39928e4bc86a8fcae23ebb815f</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffStyleDef</name>
    <filename>class_f_c_staff_style_def.html</filename>
    <base>__FCStaffBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ad7593e469c4cc0e5cd458d7138bec02e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a6df486ad01a0a4d5bce96b078dfe430d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCStaffStyleDef</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>aed224aebdff44e8cb478fca4f5b2cfb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCopyable</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a07b94243eba13f8d39a687d806875410</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAddToMenu</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>af8e2f601ceeb31ec4182f379ee21db8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowKeySignatures</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ad7fcfa34bf4a12f98e7ebdd011053768</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowMeasureNumbers</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a3dedd739cfb7ac474f0f88d0701308c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowTimeSignatures</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>abb06f705e516cdc00585f8c4890b31eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowClefs</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ad7133f63d352b5c595b1165a015552dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowChords</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a8d09164dafa6bb8b62ee2ca9c71b2b45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowAugmentationDots</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ad4e2df6ddb5c84ae00fcf1ddf924066a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowFretboards</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a87d802789300878af9d381adf0131d0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowLyrics</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ad8d5df2c2cc91249eed781e1983333cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowRepeats</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a10a749ff3f802a00b3e31caef2025edb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowRests</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a2aca6a0dfca6e75212091f34fe14d9c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowStaffLines</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>af3bb1f5a58c0886157241d3466b5d2cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowScoreStaffNames</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>aa52bb3c5c283eba425c1bfd3d08f7a75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowPartStaffNames</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a1ee405c66fce1c83662be38bf8181db1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowStems</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a5b5f69a329939d006c3d4c34185dbb57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowTies</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a91f4f97684ecea2fbeedf6fb73162bb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseIndependentFont</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>aac27d3beebd78409e10aabd6f1519b0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseFlatBeams</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a8456ae11168b39567b5c386a295da786</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseNotationStyle</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a2f4559bef5abd82f967d5099bb22367a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseDisplayEmptyRests</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a16e7c9e0bb3104e5479ca28b692118a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseAllowHiding</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ab9971fdf836e3dc0a83971ec47fc8ba0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseDefaultClef</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a7ed0af6efc5806a2825ac1f1548239e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseStafflineAdjustments</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a431f39953e1f3819bfac6aa5ee055079</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseTransposition</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a69bf95709f6b61d223be73d59c9efe3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseBreakBarlines</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>acb0956518b6babf5630317c561e0afaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseBreakRepeatBarlines</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>aadd1131ddfc10de7443d0160df5baa62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowTextRepeats</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ac1ed4bf1c9878799e84f864db2ca6e30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowBarlines</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ac85613eb6ee35311de9bee8fba029a2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseFullName</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a72f771d96e1e1c76ac58c76598d9777e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseAbbreviatedName</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ac6b11673fcda330b13fcd9d121984b1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseIndependentKeySig</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a471b058762f4c7f40f60b5c94dd1121b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseIndependentTimeSig</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a4f470e67d4016f3f1d4b213c70d2d1dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseHideMode</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a42d0135eb7d8c2193cf50752104ab7dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseIgnoreKeySig</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>adb47252091759b5b1ce95eeb7dee435d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseFullNamePosition</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>acf4bfdf8232b1fbd934becbd2095aa3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseAbbreviatedPosition</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ac14bcfc741adfc396ebb81ce1009657b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseAltNotationStyle</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a8109233fa773f5d69e80b7be454d2503</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowNoteColors</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a893f13115c3c6b5424cb4d4490ad58a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseShowNoteShapes</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>aad89876a717a23b1a5e2cc8a0792055d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseNoKeySigShowAccidentals</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a24a764d7daaeb101c0e0d5ae4d1fbf24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseRedisplayOtherLayerAccidentals</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>afd4d403b3fa015775640ac244b250aac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCopyable</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a4f075134f5d81fe7df41ef67b638b394</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAddToMenu</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ab1e06c23a00071973644657b76860096</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowKeySignatures</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a7dc84e3901effa52d374c2be40f019a4</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowMeasureNumbers</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a7f1aa4e1c81dffd4e88d1519f3492a54</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowTimeSignatures</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>aefc26ae312ff9ec45404218ee123f8e9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowClefs</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a8ef755ac9ec9407ac9ff0aba6fc74e20</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowChords</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a188012e1e95d315fc80595d8e7f117c9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowAugmentationDots</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a0570481093d92eb30876374084ea214b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowFretboards</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a114cbf463373a90ed3d4a2acc668fef4</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowLyrics</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a39abadb0dd2703de8ddb152a62835e85</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowRepeats</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a644e198fb4cb7d1037583bccb5b24d59</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowRests</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a71d876cf6ba4bc0add59c5733a307da9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowStaffLines</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a97b2fd8ff927439317a0e0d1e09580b3</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowScoreStaffNames</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ace74a08bfd290ac8ff3c875f2eca63d2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowPartStaffNames</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a02e8250bf8357a508c33db4c0cd1d592</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowStems</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a8957ee8fe232c9ee96ccfe548784b0f3</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowTies</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a11392937a806df622bedb814648ffacb</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseIndependentFont</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ad812d3f60a98f280b977a108ab4b3fbb</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseFlatBeams</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>adef22d839a121c29e707f7c1f555fb83</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseNotationStyle</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a70de90bc71b70d0377d030e04b1b3b1f</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseDisplayEmptyRests</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a456071d6d38a8a2ae4a0fa49399abd89</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseAllowHiding</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a78ac7eee46f917061a452c1cc7025805</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseDefaultClef</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ac728fde6fe4a818d77a005fcdab7cbd9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseStafflineAdjustments</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>af8a5b6024b702da549f94d6832ef2fc2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseTransposition</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>aeecec9ffb5a72a9b32c4861235591fa6</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseBreakBarlines</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a4b630e25c452e39db4500be04407b9a6</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseBreakRepeatBarlines</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a156d44045caf588db74a19dfa062c114</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowTextRepeats</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a86b61d7c54a34f161473a5ba4b9aaa28</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowBarlines</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ab301e616b1fb080aeb4994c1053d95e9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseFullName</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a23709d7f737c4db018f57d0eacb3d135</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseAbbreviatedName</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a5b1309d5e329db8919be5e9a66b6a9d0</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseIndependentKeySig</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a6a1f3b97fc4020e74cdb9c0d12e00b85</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseIndependentTimeSig</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a37e41c088381884742ec66f8d01c274b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseHideMode</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a311eff16ceacb8740ff53b57be7b3d73</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseIgnoreKeySig</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>aab6484a87039df0c056f535c031420ea</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseFullNamePosition</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>afb233ed15b3bf34dfcd2e06888f944df</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseAbbreviatedPosition</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>ac6fb172efc9b0d2dd3786983dfab9add</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseAltNotationStyle</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>aa0153c646711e181714922b1b3ed5d82</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowNoteColors</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a58b40e84ac50fc97be4c02e4e8c72dec</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseShowNoteShapes</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a024a84ae9376e3d8bf97e459a02637a2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseNoKeySigShowAccidentals</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>acdedd226ec7fad81c4b4b13b9b190f08</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseRedisplayOtherLayerAccidentals</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a036930e81655426bf3c25d873aca9678</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInstrumentChange</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>af40a2533240355cce894986cd43cc7b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetName</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a1f4a8fac4e0ae7f8402f095e64d319d5</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a70f34f8a07ad1ca536a90eca9f98cbce</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_staff_style_def.html</anchorfile>
      <anchor>a2e40ad340c824c6e331a8bd4d71478bc</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffStyleDefs</name>
    <filename>class_f_c_staff_style_defs.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_style_defs.html</anchorfile>
      <anchor>a36b59421f81e6fcec29fbd0bd826b0bb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCStaffStyleDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_staff_style_defs.html</anchorfile>
      <anchor>ab971db3cb4fcecbbfb774d271dfa09d4</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffSystem</name>
    <filename>class_f_c_staff_system.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a0bcf8336dbb4f2f20f2461df890dba7a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a4f254262d0d51071a4ebf34df62bcb7f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCStaffSystem</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>aff8016d647069738cd3a806161f3139b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFirstMeasure</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>aeafecfce285267c7882d6ef69ac0609e</anchor>
      <arglist>(eMeas measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNextSysMeasure</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a81c0ba8a69fc6b724b61439f368f35dd</anchor>
      <arglist>(eMeas measure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpaceBeforeMusic</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a9f1903254bb281ba41b570f5ef09d1c3</anchor>
      <arglist>(twobyte space)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpaceAfterMusic</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a77da182168d62630b453963bf04eb8e3</anchor>
      <arglist>(twobyte space)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpaceAbove</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a9558c73fe748fb41e4d00ad52b5fa240</anchor>
      <arglist>(twobyte space)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTopMargin</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>ac71d2f8528137874ca902d2b2ad4958f</anchor>
      <arglist>(Evpu16 margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBottomMargin</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a6f86eb5a97fbee29790eadf3dce94fc7</anchor>
      <arglist>(Evpu16 margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftMargin</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a472f7166a5acb1a6a48ca0fd8b1b6038</anchor>
      <arglist>(Evpu16 margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightMargin</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a2f86530b5b5c9d040e0ca9482f33a4be</anchor>
      <arglist>(Evpu16 margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetResize</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a07533bc2b3b1b682cf0dc3350a0a02df</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaffHeight</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>ac5df7c861aec7844d6221f5d46331c45</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetResizeVerticalSpace</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>ab19ab70ab5454bdfe0d24bb7d252b848</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseStaffResize</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a1e4746952dab1550be9936a628de7fa8</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHoldMargins</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>ab03bfbd904495947e5542877378cbac2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>eMeas</type>
      <name>GetFirstMeasure</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a0b5b87130f8de83936bb09c8fc26967b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eMeas</type>
      <name>GetNextSysMeasure</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a09c9b8897d5fd66ac9762f648a5481e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSpaceBeforeMusic</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>aa23c34e37fcaa4616dd7606dd908f91d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSpaceAfterMusic</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a27c3b56bb1346dc1ebf6e5da37851e65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSpaceAbove</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a3de2a8d1bbaae8567eb907d7c41ee8e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTopMargin</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>ae3e47d387ce4a5cb4307631d622f5ea3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetBottomMargin</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>ab401e58c2eb6cdc4ad19f2c42b483288</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLeftMargin</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>aff45a84dfc9966b79b890c80ec886340</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetRightMargin</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a1d845f36a7b1c9c59cbb5c1b09e4f1bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaffHeight</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a2d5235c427d6d8ecf3e9d994c7a3a96b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetResize</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a3206ddc79f4caff66edc2175926b10cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetResizeVerticalSpace</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a9507b07ce979cb79b6874d9e6c8eefa1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseStaffResize</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>ac660cc68f9a14648813aaf3b9ea3fd37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHoldMargins</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a68ca1ffe70d3489865c94d73e6e2e1a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTopStaff</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a9017e927a63bb77ebeb45c83d8adeb11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int100</type>
      <name>GetHorizontalStretch</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a48356e622e7445566e1e21015fc6d0f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasPageBreak</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a8d38c4ec96bc02fbbfcc1c80d68857a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>eStaff</type>
      <name>CalcTopStaff</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a0cd030725adca595d3e53a10243649a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>eStaff</type>
      <name>CalcBottomStaff</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a99859382aacc42ea9b927984c9291e02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcStavesSpan</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>ad8b2e377a34e7fead71a4d4dafa3a8e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcHeight</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a217afb0d76d26f8cf03560cb54f4b7f1</anchor>
      <arglist>(bool verticalresize)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcWhiteSpaceBottom</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a9adf7677daccc9b5419d4c4b222fc5f5</anchor>
      <arglist>(bool verticalresize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOptimized</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a7578ed3aa0acb169cbc3f1b268bb8c53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsMeasure</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a55ed90e48113839b66061ebcac105919</anchor>
      <arglist>(eMeas measurenumber)</arglist>
    </member>
    <member kind="function">
      <type>FCSystemStaves *</type>
      <name>CreateSystemStaves</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>a3c1f43f140955f2ae48321dc4ebb3b47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCFreezeSystem *</type>
      <name>CreateFreezeSystem</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>ac8bed7edd5e4e6fdee164ba54ec4e6bc</anchor>
      <arglist>(bool force_create=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcRegion</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>aed251fc64f2e8e3721c0b4dde82c2ff6</anchor>
      <arglist>(FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_staff_system.html</anchorfile>
      <anchor>ae09292f3f456fc8d7ac23ad526883f1d</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffSystems</name>
    <filename>class_f_c_staff_systems.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCStaffSystems</name>
      <anchorfile>class_f_c_staff_systems.html</anchorfile>
      <anchor>a6083aeb115e66e2c20864105e0d77590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_systems.html</anchorfile>
      <anchor>a4140d65dd1fcffe57c51fd6617c5721d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCStaffSystem *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_staff_systems.html</anchorfile>
      <anchor>a7574c7ae560a0563ba942a92d60e8d37</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NeedUpdateLayout</name>
      <anchorfile>class_f_c_staff_systems.html</anchorfile>
      <anchor>a5c6c7d8e4cf52d84f0af63d9b3f25241</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCStaffSystem *</type>
      <name>FindMeasureNumber</name>
      <anchorfile>class_f_c_staff_systems.html</anchorfile>
      <anchor>a646bf3fe79a53282283bf2549232168b</anchor>
      <arglist>(eMeas measurenumber)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>UpdateFullLayout</name>
      <anchorfile>class_f_c_staff_systems.html</anchorfile>
      <anchor>a034f050ae3ea0fcee6b2f4d33f502a6f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaffSystemsLookup</name>
    <filename>class_f_c_staff_systems_lookup.html</filename>
    <base protection="private">__FCBase</base>
    <member kind="function">
      <type></type>
      <name>FCStaffSystemsLookup</name>
      <anchorfile>class_f_c_staff_systems_lookup.html</anchorfile>
      <anchor>ab1ff77aa3bf3ee909330c5544d3cdca2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staff_systems_lookup.html</anchorfile>
      <anchor>a5870951f2a9bcb18554304700e9e6e11</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCStaffSystems *</type>
      <name>GetCurrentPartStaffSystems</name>
      <anchorfile>class_f_c_staff_systems_lookup.html</anchorfile>
      <anchor>acfb6a886aa603fcedd15be5dc4b27c4e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStartTieMods</name>
    <filename>class_f_c_start_tie_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_start_tie_mods.html</anchorfile>
      <anchor>a99ba3eafabc5431ec8779b363b03fa13</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCStartTieMods</name>
      <anchorfile>class_f_c_start_tie_mods.html</anchorfile>
      <anchor>a880b5162301c0c37c2a1262915564d92</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCTieMod *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_start_tie_mods.html</anchorfile>
      <anchor>a46a8bf6100c9c06488964ce22ae0f8b8</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStaves</name>
    <filename>class_f_c_staves.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCStaves</name>
      <anchorfile>class_f_c_staves.html</anchorfile>
      <anchor>a56279ac3de6c66ba6d6e4d2049a4cc28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_staves.html</anchorfile>
      <anchor>af116ce629e98b02c8f46286785f0f663</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCStaff *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_staves.html</anchorfile>
      <anchor>a586adf2a9bc157b63d9a1200435869d0</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CMPER</type>
      <name>Append</name>
      <anchorfile>class_f_c_staves.html</anchorfile>
      <anchor>a128ff714da48ad9ce41248834a871774</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Delete</name>
      <anchorfile>class_f_c_staves.html</anchorfile>
      <anchor>a8a90b80bc203f7ce426ab1e890887fb3</anchor>
      <arglist>(CMPER staffid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStemConnectionTable</name>
    <filename>class_f_c_stem_connection_table.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type></type>
      <name>FCStemConnectionTable</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a0947eb70b372810032d19c450df4bae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCStemConnectionTable</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>aa0a8c0ea58e274daf6716efe5ccbf2db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a69511eb7427912c543e2ddfe2c4f6c28</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>afb6ec299fc933ebb44db61ad3bc9e92a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a5e9aa48edbf5ca48c532302dcab250f4</anchor>
      <arglist>(twobyte prefsnumber) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a9544321d52b88cb7116527854b4974a0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaxElementCount</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a4be52c7fc44ee81352efc3e4a4f7ec04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>GetNoteheadCharacter</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a1e2be499fc445c5fc1114bed1ac1d39e</anchor>
      <arglist>(int connectionID) const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFontID</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>abdba6a087cccadfced54975c81404ed7</anchor>
      <arglist>(int connectionID)</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetUpstemHorizontalAdjust</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a3dd6fde32a198c376677cb7e1b3cf071</anchor>
      <arglist>(int connectionID)</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetUpstemVerticalAdjust</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>ab9807c73dfe4881fb6519494e0aa2226</anchor>
      <arglist>(int connectionID)</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetDownstemHorizontalAdjust</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a6cfe840e38194651b745f3922a1b14d9</anchor>
      <arglist>(int connectionID)</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetDownstemVerticalAdjust</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a48464ecd4d9e7e2a3f486eb15eebb3b6</anchor>
      <arglist>(int connectionID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteheadCharacter</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a61c4f1915de6e0ae23565a08abd2d76e</anchor>
      <arglist>(int connectionID, eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontID</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>af563dd45cb77ced999e9120967d41e7f</anchor>
      <arglist>(int connectionID, twobyte fontid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpstemHorizontalAdjust</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a1345cd0112c86d34e2cf1869af0bbd8e</anchor>
      <arglist>(int connectionID, Efix16 distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpstemVerticalAdjust</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a0698c2e35a69f9af48d62f7164a7c140</anchor>
      <arglist>(int connectionID, Efix16 distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDownstemHorizontalAdjust</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a0d7dc98d742ce11ce1705d91bdfef42a</anchor>
      <arglist>(int connectionID, Efix16 distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDownstemVerticalAdjust</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a117fbdc3462c8d0a9b9430ac3958a123</anchor>
      <arglist>(int connectionID, Efix16 distance)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCount</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a484a00902700ba9c629e64d23de752e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>FindIndex</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>ac548b0798b9d60237f1b38f3ea6a3d40</anchor>
      <arglist>(FCString *pFontName, eUniChar32 character)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ElementsExpand</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>a15f186d2220fbd1ac192e4a00f371b1e</anchor>
      <arglist>(int noofnewelements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_stem_connection_table.html</anchorfile>
      <anchor>af86e05adfb18e5be2b9186e8eb8bec73</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStemMod</name>
    <filename>class_f_c_stem_mod.html</filename>
    <base>__FCEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_stem_mod.html</anchorfile>
      <anchor>a52b7e0198b88cf75c36c32dfd532ebd8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_stem_mod.html</anchorfile>
      <anchor>a9655217aed100559def3600da35ff773</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCStemMod</name>
      <anchorfile>class_f_c_stem_mod.html</anchorfile>
      <anchor>aad274de18545f996d4f2f3e28711e6f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalUpOffset</name>
      <anchorfile>class_f_c_stem_mod.html</anchorfile>
      <anchor>a02755df07fd363f1660d22a4b75da731</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalDownOffset</name>
      <anchorfile>class_f_c_stem_mod.html</anchorfile>
      <anchor>a5dcf82dfa0787984c9ea9cc9d17092e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalUpOffset</name>
      <anchorfile>class_f_c_stem_mod.html</anchorfile>
      <anchor>aa3129771da499ec83989dcb560bc16f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalDownOffset</name>
      <anchorfile>class_f_c_stem_mod.html</anchorfile>
      <anchor>a09fc28e1ff58cc8cbb51868238b244e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalUpOffset</name>
      <anchorfile>class_f_c_stem_mod.html</anchorfile>
      <anchor>a791dc5dfa914df49f04612870364b1c0</anchor>
      <arglist>(twobyte adjust)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalDownOffset</name>
      <anchorfile>class_f_c_stem_mod.html</anchorfile>
      <anchor>a9003baf2f12a623c3445f6371cc80753</anchor>
      <arglist>(twobyte adjust)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalUpOffset</name>
      <anchorfile>class_f_c_stem_mod.html</anchorfile>
      <anchor>ac99534971d22b42fb221a4e91f8d8a14</anchor>
      <arglist>(twobyte adjust)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalDownOffset</name>
      <anchorfile>class_f_c_stem_mod.html</anchorfile>
      <anchor>a99d0445b118fe8cfc4d5aa3257c02b67</anchor>
      <arglist>(twobyte adjust)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UseBeamedData</name>
      <anchorfile>class_f_c_stem_mod.html</anchorfile>
      <anchor>a9db332374febfd1c4850dfeac00b2a86</anchor>
      <arglist>(bool usebeam)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStemMods</name>
    <filename>class_f_c_stem_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_stem_mods.html</anchorfile>
      <anchor>a825caf38815732e308814f8d3262b878</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCString</name>
    <filename>class_f_c_string.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a5bb32b255e8fb131a20ac274e2460fbf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a70862ebfe6f25f3a3aeb63939ef1fb42</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a6d8d6fef66343f05c8c791f352abc0a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a5d436186efd53ff23b67021dc2e17592</anchor>
      <arglist>(const char *pszCString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a23680e7e7bf8318f71b6c6aaa15ddb9f</anchor>
      <arglist>(const eUniChar16 *pszCString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>aba1475f723b0437657a45529272e8f40</anchor>
      <arglist>(const char16_t *pszCString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ae6b91478a35935694358ae0b8ccc6e22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a36b863af92f537230cdc74ba7f84562e</anchor>
      <arglist>(const FCString &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>FCString &amp;</type>
      <name>operator=</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>af63e4d78854769d6a10fa14bb838e743</anchor>
      <arglist>(const FCString &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendCharacter</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a5985956ecb64d284340a5845a0dc94ae</anchor>
      <arglist>(eUniChar16 character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a92a84349d5f50caf8284fded14b5d855</anchor>
      <arglist>(const FCString *pOtherString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendCString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>acbb717cd3289d9fb55542f53a2597297</anchor>
      <arglist>(const char *pOtherString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendLuaString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a04898ed069ab068d6075f9eb4f0b568e</anchor>
      <arglist>(const char *pOtherString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendInteger</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>afda3557202242ca313a48c90380bfd19</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendFloat</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a91ffd55ecb5a0610db09a179f2792948</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendEOL</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a017b633575f8430ad016258bf442944b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssureEndingPathDelimiter</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>afbb9e6c9940aaeb4fa2f8508a1878a99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SplitAt</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>acef4b305375c6a4ff4d40af73f79db94</anchor>
      <arglist>(int splitpointindex, FCString *pFirstString, FCString *pSecondString, bool includesplitposchar)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SplitToPathAndFile</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>af4f743c5420a8e811fd44f060d53fbac</anchor>
      <arglist>(FCString *pPathPart, FCString *pFilePart)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUserOptionsPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a54373a0956a3843bfefc16a9db85514d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPluginsFolderPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>af7f4b5e5b2e32d1404bcfefe33ddc25c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMusicFolderPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a666a2f5d9e2dd9f347caa74498f13fb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLibFolderPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a7976a6aeaeeb27f981e94f71e1d4701d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBackupFolderPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a29f2aaebb0c6857fecd3a8bca760918b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAutoSaveFolderPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>aa0d7b507b2d74a2b06feefce59424834</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTemplateFolderPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a14258910e05124bc5fe789bb56471a08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTempFolderPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a93a07f91605677e60bd8a896e1479bdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontAnnotationFolderPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ad29eb5a5e26387e17866dcbaa9036f0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDocStylesFolderPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a9985cae6aac4c3d470df35bf683aa807</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPercussionTypesFilePath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a5c64961cf9ecae077be23bc055725fd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPreferencesFolderPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a6b997f1a6bb595c098e59ebcb17b8999</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRunningLuaFolderPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>aa57db881cc96481776b35174cdbfc4c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRunningLuaFilePath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a8709fa9ea5613bdac8da07ee5429d3a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ab60001937e0878291fb5c021938e2514</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Compare</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a9cc98d51106a85611b179f8afa9463ad</anchor>
      <arglist>(const FCString *pString2) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareNoCase</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a5d4d92cd15420cd1cd1fa83eadea91e4</anchor>
      <arglist>(const FCString *pString2) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>acd3dc59ef78234f4d6ca4bbc0e218ea9</anchor>
      <arglist>(FCString *pSubString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsCString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a4c5a84c29acf01aec397004b3c0c5220</anchor>
      <arglist>(const char *pszSubString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsStringFrom</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a282b7afbf074349d5f66dd4092e2e810</anchor>
      <arglist>(FCString *pSubString, int startindex)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsCStringFrom</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ada215eb00dfb901fca7bc03ffd2bbadb</anchor>
      <arglist>(const char *pszSubString, int startindex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcStringPos</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>abe91ced68e0986d30deec0015f420376</anchor>
      <arglist>(FCString *pSubString)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcCStringPos</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a5c4b39411b9f78aba52ab67d5fff320c</anchor>
      <arglist>(FCString *pSubString, const char *pszSubString)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcStringPosFrom</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a5fcf8a8d88c6728b8201d8eb26fc2ffc</anchor>
      <arglist>(FCString *pSubString, int startindex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcCStringPosFrom</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ae9472889962796d62dfb17189e1c4a63</anchor>
      <arglist>(const char *pszSubString, int startindex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertToPascal</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a9e6b799917cabc7f4f0194959edff9b3</anchor>
      <arglist>(Str255 &amp;pascalString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetCFURLRefPath</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ae2214fd8140497513946ef5a7337863d</anchor>
      <arglist>(void *cfurl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsEnigmaTextInsert</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a95042d8ab88730e5054590370c433de9</anchor>
      <arglist>(bool only_file_info_inserts=true)</arglist>
    </member>
    <member kind="function">
      <type>FCStrings *</type>
      <name>CreateEnigmaComponents</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a1c469d32fc14a3051664c30e35f090e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCStrings *</type>
      <name>CreateEnigmaStrings</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a35660066559e2a16543a9f81440e0872</anchor>
      <arglist>(bool include_non_commands=false) const</arglist>
    </member>
    <member kind="function">
      <type>FCFontInfo *</type>
      <name>CreateLastFontInfo</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>adbc815e2135dc86fcf4829388b31e03d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCStrings *</type>
      <name>CreateParsedStrings</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a170ac6af6066153ac9d407c178378120</anchor>
      <arglist>(const char *pszSeparators) const</arglist>
    </member>
    <member kind="function">
      <type>FCStrings *</type>
      <name>CreateRows</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ad7960f5a2d19aaf619f6c8b0715163e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteCharacterAt</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ae53c241a0aeec5d9c235b0e469e1adbd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteCharactersAt</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ae64e0987106f082b29be9c03b821be1a</anchor>
      <arglist>(int index, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractFileExtension</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a1f76698217eadede1320e955419c5e06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>FindFirst</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>acd797dca5b7ba43935580694f15c4084</anchor>
      <arglist>(const char *pszSubStr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>FindLast</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>aa08ad5a0f40200fc06583aa4413fc18d</anchor>
      <arglist>(const char *pszSubStr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>FormatCStringArgs</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>afecf0420f27b06a2993349a50392ccf4</anchor>
      <arglist>(const char *fmt, va_list args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>FormatCString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ab10821656209658b6469fc7d109392d4</anchor>
      <arglist>(const char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>FormatString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a82639d46c5a390017146e6c7786e8a31</anchor>
      <arglist>(FCString *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FormatCharacterNumber</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>aa648a64a8262084190c971386a17f114</anchor>
      <arglist>(eUniChar16 character)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetCString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a84d145b7b1215627dfcc475024854307</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetLuaString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ae69a43f6e984545f566a435dad049d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetUTF8String</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a47eab741bc102d5ccdb5aa2fdd116bf4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CopyToUnicodeBuffer</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a543feb14fab29aa0f5cbe8ad304f379c</anchor>
      <arglist>(eUniChar16 *pBuffer, int maxbufferlen=0) const</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>GetNSString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a6f5a0ac5583b9c2969f5c8bbc7fd391b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNSString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a8f9f28d7ec1a7ddea4b996b7e31360e1</anchor>
      <arglist>(void *pNSString)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetInteger</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>aa429831db45adfea515305643d42eaed</anchor>
      <arglist>(int index=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHex</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>afb7a69fadee453c9127ec9640d7bc422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetFloat</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ae793aa0d3aab62b79dad578d0ad1fd64</anchor>
      <arglist>(int index=0)</arglist>
    </member>
    <member kind="function">
      <type>eUniChar16</type>
      <name>GetCharacterAt</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a1c75a546078406584b9492b2ebd3a902</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLength</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a22411b4ae557606b2eea1a255f648e5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetEOL</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a3e3409eb1bfa94c01c4bd22be2419b47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Insert</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ad74dae869392556304d16e23849aabeb</anchor>
      <arglist>(const char *pszString, int insertindex=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a4f10264d109eed465051c175a419b36d</anchor>
      <arglist>(FCString *pString, int insertindex=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDigit</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ab58b977d9783a3d8f1c70a8490e4bad5</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAllDigits</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>abf0921c15ab33bee41c0c272bc96bcfc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNumber</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a9e7ab6f61f14818a81be79c86da34ec2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEqualCString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a4fc700473039f18d072699ea8f3a8888</anchor>
      <arglist>(const char *pszString) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEqual</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ae20b54a6031d474381fc509a58b794e2</anchor>
      <arglist>(const char *pszString) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEqualString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a214df350b573e5b8a522d3e98c59304c</anchor>
      <arglist>(FCString *pString) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCharacter</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>af6b8b7437468386000c00684f075f428</anchor>
      <arglist>(int index, eUniChar16 character) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCharacters</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a9cfe8f1d0090e2328d44160c1fb3aa54</anchor>
      <arglist>(int index, const char *pChars) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ad690d26cd987ae2971d829c3ff533617</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsWhitespace</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>acd0be627c5d6526051dbb4f04873f39f</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEnigmaCommand</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a2db9986738fc511bc5bf4282ab12513f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEnigmaFont</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a624cf840210c05903222cd3ad9193b21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEnigmaFileInfoTitle</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a8b27f0acce845d29ca60118801e619e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEnigmaFileInfoSubtitle</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ac56fcbb15682d70d0c33a3846e6c5b86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEnigmaFileInfoComposer</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a21f4457c72ca6d662a4c0529726086a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEnigmaFileInfoArranger</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a343203d62c785e410a363fcbb9aeabcf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEnigmaFileInfoLyricist</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a4e20043f31c8c400dc94f5e2dd4ba841</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEnigmaFileInfoCopyright</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a516e30881c223bb77afa37bfeb5f037c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEnigmaTextInsert</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>af0bc099e1448148d0098bee8d902c7fb</anchor>
      <arglist>(bool only_file_info_inserts=true) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadResource</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a49d2865553d28b20461638b9991451c1</anchor>
      <arglist>(int resourceID, HINSTANCE dllinstance=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadResource</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a846552cf55484a55add21935643a7304</anchor>
      <arglist>(const char *resourceID, const char *pszResourceFileName=NULL, const char *pszTableName=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MakeSubString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ae866ead61b114cee0ae6551f111ba923</anchor>
      <arglist>(int startindex, int substringlength, FCString *pDestinationString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReplaceCategoryFonts</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>aacce721fb79a11eb539dfca2f8558369</anchor>
      <arglist>(FCCategoryDef *pCategoryDef, int fontmode, bool replacefonttag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a58ed5724014e79f1d7b0304b4538b475</anchor>
      <arglist>(const char *pszBuffer, int maxchars=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLuaString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a067a72353fcc8aa3b2f7cd263401564d</anchor>
      <arglist>(const char *pszBuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUTF8String</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>aa8ab3b9a3475139a644c0518a302a438</anchor>
      <arglist>(const char *pszBuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCharacterAt</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>af5f534030c765a5d3745436132a96cb0</anchor>
      <arglist>(int index, eUniChar16 newcharacter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUnicodeString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>aedd393044f9edabfcd7a6b51f7cef2f1</anchor>
      <arglist>(const eUniChar16 *pChar, int maxchars=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInteger</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a958843fd6a50d883d3e8a4defe7ec0fc</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHex</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a8ac39cfabe5ec3a97b7927c027b3dcc5</anchor>
      <arglist>(int number, int bitwidth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFloat</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a5021ca3d213b1b82046220bb63966650</anchor>
      <arglist>(float f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurement</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a70ac1239dd30806a8386820a15b57c5f</anchor>
      <arglist>(float value, twobyte unit)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMeasurement</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a4d07ffc2ed8416efb8f4e64605eb6e23</anchor>
      <arglist>(_ENUMCODE(MEASUREMENTUNITS) _LUACODE(twobyte) unit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>aa50899560ee55792a71b1ae63e51a531</anchor>
      <arglist>(const FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateCopy</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a1fec52b04e033ac797cfb7e2053009bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetCharacterUpperCase</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a36d30a386c0fda8922ad973d99e7e1c2</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCurrentTime</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a716a0ce878bc5eeae618e349b7dc6bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Replace</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ae7cc2fe997c462ad109f79a2598127cd</anchor>
      <arglist>(const char *pszSource, const char *pszReplacement)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EndsWith</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a3f264c06eb59fa3d71201e5c1a4e7411</anchor>
      <arglist>(const char *pszString) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartsWith</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a4ee54b3b8fb90c6621519c0db42ab416</anchor>
      <arglist>(const char *pszString) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartsWithString</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ad69591bf916da0d02f3df2ee6a5a0be7</anchor>
      <arglist>(const FCString *pString) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToUnicode</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>abc5cfafe6c11fd6b62ba47a3d6d05722</anchor>
      <arglist>(eUniChar16 *pBuffer, int maxsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToLowerCase</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a17977de1a914981e42fd4f5102171f72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToUpperCase</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ac401dab187d2810cbf0d89a7e53c3a16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TrimEnigmaTags</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>af19e93762dc17baa5a6f6c87362e05a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TrimEnigmaFontTags</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>adab3e386596e7de4c6e3590f6c58302b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TrimWhitespace</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a2e03d7bd871325ba1fc0e5b348dbddd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TrimLinefeed</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a344797f21a3a65ce5c015c8056eb11cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TruncateAt</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>aada8ebe4b6ff58b091a1b5f8a022e9c0</anchor>
      <arglist>(int newlength)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TruncateEnd</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>af894bc7927540da7ac637f664056fbe0</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TruncateWidth</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>ae742e34a01676f5deb71196a5bb10865</anchor>
      <arglist>(int maxlength, int prefixchars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_string.html</anchorfile>
      <anchor>a6a4e23e04c07492bcc11b4656044e64a</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCStrings</name>
    <filename>class_f_c_strings.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type></type>
      <name>FCStrings</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>ae28982a0ca4be88e09c4ea9c6f36dd08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddCopy</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a755c4b6d4c3a9dd6b289c2b130d812cb</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>afe7094847059379d8eb42f8283a6f503</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>ac05efc9492619ccb8e3db7e02a6ee7ed</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertStringAt</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a803364cd6138c395a8b1c000a980f942</anchor>
      <arglist>(FCString *pNewString, int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainEnigmaFont</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a1d36c88b3c05a79149b199d24ddfba0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCSettingsPairs *</type>
      <name>CreateSettingsPairs</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a7b32572f21c5949067042280341903a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateString</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a22a987e02e47b7649b47b30be7633a45</anchor>
      <arglist>(const char *pszSeparator=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateRowsString</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a51bbf4a76ccfc06f0302eb382473c275</anchor>
      <arglist>(bool bNewLineAtEnd)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>Find</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>afd79c111ec5049186fe7a843c910a088</anchor>
      <arglist>(FCString *pFindString)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>FindNocase</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a36d9d6d1440da8fd4386b82b729b5415</anchor>
      <arglist>(FCString *pFindString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyFrom</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>aa570a4639dc7eaae7a2fc7a9a3705766</anchor>
      <arglist>(FCStrings *pSourceStrings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TrimWhitespaceAll</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a2a352f1c4b9dec27ede32048c2c79ef3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearEmptyStrings</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a12f87ff96768bcaf8ae0765c7d9f7a85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SortAlphabetical</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a73712ac588457ac3e55540a6ed243ca8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ParseEnigmaFontInfo</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a5f0e7e67374d2f9e2fdd27d416013d8c</anchor>
      <arglist>(int index, FCFontInfo *pFontInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadSymbolFonts</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a672180a4f1357b256b84cc97f1cbeec6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFolderFiles</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>adb9a5df2c627c4bf63658af140eed585</anchor>
      <arglist>(FCString *pFolderString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadSubfolders</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>a747d290dee97430f81cc8685bef195fe</anchor>
      <arglist>(FCString *pFolderString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadSystemFontNames</name>
      <anchorfile>class_f_c_strings.html</anchorfile>
      <anchor>aa0970dc9d9df83ac5847dc03eddcb7b7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSyllableBase</name>
    <filename>class_f_c_syllable_base.html</filename>
    <base>__FCEntryDetail</base>
    <member kind="function">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a9e01f055e1520c9117df73b35051d7dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a30f22f8acba1d5dc4211e8cdfb9b417c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSyllableBase</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>af576b89bcfd2e4fc07da881cc568044e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOffset</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>adc53c32d08d89fef906017dedb81e37b</anchor>
      <arglist>(Evpu16 offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalOffset</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a169c7865b59fb4b1477e8dc008a756e8</anchor>
      <arglist>(Evpu16 offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSyllableNumber</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>ac7691467491330ef4d18891e0f3bdede</anchor>
      <arglist>(twobyte number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRawTextNumber</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a3efc08bfd5cfc537b1a7b17986369477</anchor>
      <arglist>(twobyte rawtextid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWordExtensionID</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a8a264e01fe8b57797b08a9273483b775</anchor>
      <arglist>(twobyte smartshapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIncludeLyricNumber</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a194a0cabaa5cf1894a404efd1dfdfcad</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFloatingHorizontalOffset</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>af4c826f937a9322614d4795c85ec366f</anchor>
      <arglist>(Evpu16 offset)</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalOffset</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a619579c8a961ca628fb6e1cbb2d708b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalOffset</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>acf5dbf9a3dfde99aa9188a56590ee4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSyllableNumber</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a7badecdc768852a695160717da8795fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRawTextNumber</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>ac7f56915cbfd88f30c415adc159fab36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetWordExtensionID</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a80d70c33b2351b464c9c30ec260bff74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIncludeLyricNumber</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a58224337b2d64030782ae5fb70cb1147</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetFloatingHorizontalOffset</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a395171dbba463c9788df711bcb57bcb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValidSyllableNumber</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>ae11febd0d2567069bb27f5fc3f0eabc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsVerse</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a59be2ceae5eee5abdac182353e9754ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsChorus</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a8c2d932d7224d8c1588f0eae181a0edf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsSection</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a0cb97efbbc505dfd8a6c8feff70b77f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalcHyphen</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>ac00e65ce9d7e0f1c1409f50c751951ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcStringPos</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>ae86a1e6795ac1b60a537a369bcf361cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcNextStringPos</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a846bedd4e0cfeb00c23c22b77f305f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__FCLyricsBase *</type>
      <name>CreateLyricText</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a8364186f4317846dd7719da5dcd46713</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCFontInfo *</type>
      <name>CreateFontInfo</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>ae7c001fd71cac1c3f27ac3608a0ad7a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCFontInfo *</type>
      <name>CreateNextFontInfo</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a915c8fda57e4206ee977dbbd3c3e959e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetText</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a4fabe7a507e620baa929504324cd72d3</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRawText</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a5d9a488ec5f4fe7999801643540b721f</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveRawText</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>ae6488dd3338b43c2c253894693220f06</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_syllable_base.html</anchorfile>
      <anchor>a7d18dacc697041b0b6e1c0675dd6cf42</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSyllableEntryMod</name>
    <filename>class_f_c_syllable_entry_mod.html</filename>
    <base>__FCEntryDetail</base>
    <member kind="enumeration">
      <type></type>
      <name>SYLLABLEJUSTIFICATIONS</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a3817af1aa51a303b83e18250cec7ae65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLJUST_DEFAULT</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a3817af1aa51a303b83e18250cec7ae65a7eb59a668558ba82e145d386dd0d0075</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLJUST_CENTER</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a3817af1aa51a303b83e18250cec7ae65a09fb7fdd887be60ccb3d0786e6888a92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLJUST_LEFT</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a3817af1aa51a303b83e18250cec7ae65aa9c199e36c42fca9005fbed9aecee9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLJUST_RIGHT</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a3817af1aa51a303b83e18250cec7ae65a6f80dceccb8c834dc20aaa6d357d8fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SYLLABLEALIGNS</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a1bfdb3184b8d8928f49789f30721cdbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLALIGN_DEFAULT</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a1bfdb3184b8d8928f49789f30721cdbeac9fbc41bc1f756be5472700dabd12d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLALIGN_CENTER</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a1bfdb3184b8d8928f49789f30721cdbeabacc9f8145c8604d6faf6bafa2fb08e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLALIGN_LEFT</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a1bfdb3184b8d8928f49789f30721cdbeac74698d7a82a225cf6858d3611db1afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLALIGN_RIGHT</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a1bfdb3184b8d8928f49789f30721cdbea58203a5e40548d0c69a8e3041a2c7585</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLJUST_DEFAULT</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a3817af1aa51a303b83e18250cec7ae65a7eb59a668558ba82e145d386dd0d0075</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLJUST_CENTER</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a3817af1aa51a303b83e18250cec7ae65a09fb7fdd887be60ccb3d0786e6888a92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLJUST_LEFT</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a3817af1aa51a303b83e18250cec7ae65aa9c199e36c42fca9005fbed9aecee9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLJUST_RIGHT</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a3817af1aa51a303b83e18250cec7ae65a6f80dceccb8c834dc20aaa6d357d8fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLALIGN_DEFAULT</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a1bfdb3184b8d8928f49789f30721cdbeac9fbc41bc1f756be5472700dabd12d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLALIGN_CENTER</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a1bfdb3184b8d8928f49789f30721cdbeabacc9f8145c8604d6faf6bafa2fb08e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLALIGN_LEFT</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a1bfdb3184b8d8928f49789f30721cdbeac74698d7a82a225cf6858d3611db1afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYLLALIGN_RIGHT</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a1bfdb3184b8d8928f49789f30721cdbea58203a5e40548d0c69a8e3041a2c7585</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a979c0570d370aacfaa47b446f944ba08</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a014c5928a96e2f797186cf12fb38bbe9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSyllableEntryMod</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a83d76184237a2b878d98566589f40fd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SYLLABLEALIGNS</type>
      <name>GetAlignment</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a14275243220ada6431aabe7362010616</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SYLLABLEJUSTIFICATIONS</type>
      <name>GetJustification</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a09e3c70c026a7e22265e1a217ca94688</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlignment</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a78a1cb3a0d5a3ee404df22505153b26a</anchor>
      <arglist>(SYLLABLEALIGNS value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetJustification</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>a14f48b25530b490d80cb060906640be6</anchor>
      <arglist>(SYLLABLEJUSTIFICATIONS value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_syllable_entry_mod.html</anchorfile>
      <anchor>ae2df7be53e6c168e1a36c38c3006bb94</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSystemGlyphInfo</name>
    <filename>class_f_c_system_glyph_info.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type></type>
      <name>FCSystemGlyphInfo</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>afe9be6ecdc6260e1824e2e7d239f91f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadInfo</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>a873c4a6651e3108c3c9e21fde51c1aa0</anchor>
      <arglist>(FCFontInfo *pFontInfo, ufourbyte glyphno)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetHeight</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>add83fc0fa632c1d01153004b4789fca6</anchor>
      <arglist>(float h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetWidth</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>ace92fb07546d0edd7d1bbcdbd997d2c3</anchor>
      <arglist>(float w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetLeft</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>aab17c4bdcd21fe8083e50cddbe8f2cf5</anchor>
      <arglist>(float l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetBottom</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>a61fc13d980eceff60c408c1f8e212fe7</anchor>
      <arglist>(float b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetMaxAscent</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>a23eda1831c795182f55829c495e06939</anchor>
      <arglist>(float b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetMaxDescent</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>ae7cdbf35e9b42f119643eec6e90039fd</anchor>
      <arglist>(float b)</arglist>
    </member>
    <member kind="function">
      <type>ufourbyte</type>
      <name>GetGlyphNumber</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>a951133b120c27167f8cc899844058389</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetWidth</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>ac4a504414c473c2e9b2a9efb8623e069</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetHeight</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>a59a468b8491f12540a5b241a481bad80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetLeft</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>abc9468e277d43c3f2445fa078297a7c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetBottom</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>a02e4376a8a4fb1c4467ce29b38d5fb6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetRight</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>ae93f9e08015da44f86eced250a846cdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetTop</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>a2ecb878d5762888ddb61dcc475f746fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMaxAscent</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>a8fd88c7197efd6a0e16b1ea66a2fcf22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMaxDescent</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>a613d26a3a17607e0a53daad3e52ec087</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_system_glyph_info.html</anchorfile>
      <anchor>a6d0be55ceb97a7ebb505c545e0fc8930</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSystemStaff</name>
    <filename>class_f_c_system_staff.html</filename>
    <base>__FCInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>af678e70312a90dbea732526d4ddb2c71</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>a0ef59ca144a2fe892f5cc71a78d0e8d6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCSystemStaff</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>a1914d7e0b1ee0cc8f5da0d36dfca36df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>a5c11e56f10c0be16d6db6b9232384e54</anchor>
      <arglist>(CMPER itemno, twobyte inci) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNew</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>a1b04cb71313b860d01f877e9fb322c40</anchor>
      <arglist>(CMPER itemno) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>ad7e901637a9157061e631b656b56eb9e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDistance</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>a3a98b51d747a64f4fa026bc7abd07156</anchor>
      <arglist>(Evpu32 distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaff</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>a3597374a85e4c2610520abdfee5adecf</anchor>
      <arglist>(eStaff staffno)</arglist>
    </member>
    <member kind="function">
      <type>Evpu32</type>
      <name>GetDistance</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>ad9e6c2a2f615772122d16a9c6b757577</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eStaff</type>
      <name>GetStaff</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>ac9d6490ea4ff3f35c9184f0e5596f95f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetResize</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>a4a35e695d68b716643a38b3bcea0485e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetResize</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>ab5b485de465a7a4e9f5d1ed633fde5ce</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteResizeData</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>a5af8463e5a40e546876fa8dedbda00e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_system_staff.html</anchorfile>
      <anchor>a0f49f8d096aedded27a7375fd80237e9</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCSystemStaves</name>
    <filename>class_f_c_system_staves.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCSystemStaves</name>
      <anchorfile>class_f_c_system_staves.html</anchorfile>
      <anchor>a76f0ef53630f27396eb70d1b8230645c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCSystemStaff *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_system_staves.html</anchorfile>
      <anchor>a11fc48b67a81e8fdd0cc813572158e37</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_system_staves.html</anchorfile>
      <anchor>a565b9c897052c0ef00565ed3b882c9de</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCSystemStaff *</type>
      <name>FindStaff</name>
      <anchorfile>class_f_c_system_staves.html</anchorfile>
      <anchor>a9760dff8a09592e653d8e2e31b6d133c</anchor>
      <arglist>(twobyte staffno)</arglist>
    </member>
    <member kind="function">
      <type>FCSystemStaff *</type>
      <name>FindTempoTapStaff</name>
      <anchorfile>class_f_c_system_staves.html</anchorfile>
      <anchor>a08b863721c0ab1bf762c8098d948ebd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartStaff</name>
      <anchorfile>class_f_c_system_staves.html</anchorfile>
      <anchor>a9cf2fcd39f13052bf6495b0b78c10f13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndStaff</name>
      <anchorfile>class_f_c_system_staves.html</anchorfile>
      <anchor>a810c2149bb9400c50a0f8f53b6590722</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadScrollView</name>
      <anchorfile>class_f_c_system_staves.html</anchorfile>
      <anchor>a91e8657c4bd7a9e53b5c48499350711c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadStudioView</name>
      <anchorfile>class_f_c_system_staves.html</anchorfile>
      <anchor>a8e0e83355ba6d85aa02eaf3f2f9f130d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadStaffSet</name>
      <anchorfile>class_f_c_system_staves.html</anchorfile>
      <anchor>a994e7fb5d607e62859dab42c354450fb</anchor>
      <arglist>(int staffsetnumber)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadAllForRegion</name>
      <anchorfile>class_f_c_system_staves.html</anchorfile>
      <anchor>a2005805c9012128278f83ab2516baabe</anchor>
      <arglist>(FCMusicRegion *pRegion)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSharingStaffWith</name>
      <anchorfile>class_f_c_system_staves.html</anchorfile>
      <anchor>ab0e09aacf5b30ecd65d349014d5a3949</anchor>
      <arglist>(FCSystemStaves *pOtherSystemStaves)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTablatureNoteMod</name>
    <filename>class_f_c_tablature_note_mod.html</filename>
    <base>__FCEntryDetailNoteID</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_tablature_note_mod.html</anchorfile>
      <anchor>ac84a07317a945145c041f46a3df3f97f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_tablature_note_mod.html</anchorfile>
      <anchor>a71f044cb71de30905372acb735c022d9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTablatureNoteMod</name>
      <anchorfile>class_f_c_tablature_note_mod.html</anchorfile>
      <anchor>a622e521c530ba47389f37e2fe09752ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStringNumber</name>
      <anchorfile>class_f_c_tablature_note_mod.html</anchorfile>
      <anchor>a703a71cbc60c17b3d7b0a5d3842a0679</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStringNumber</name>
      <anchorfile>class_f_c_tablature_note_mod.html</anchorfile>
      <anchor>ae2d0735dd1765c38afd4d533968074d5</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteID</name>
      <anchorfile>class_f_c_tablature_note_mod.html</anchorfile>
      <anchor>afbd3b1de1b913b1389daae48fb12e71a</anchor>
      <arglist>(twobyte id) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTablatureNoteMods</name>
    <filename>class_f_c_tablature_note_mods.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_tablature_note_mods.html</anchorfile>
      <anchor>a598c4039b24680c265580dd234f2b3fa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTablatureNoteMods</name>
      <anchorfile>class_f_c_tablature_note_mods.html</anchorfile>
      <anchor>a6fd977a0b8285531c8cb97d54d9d818b</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCTablatureNoteMod *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_tablature_note_mods.html</anchorfile>
      <anchor>a8458c0f5d391285100677e6ac1329702</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTempoElement</name>
    <filename>class_f_c_tempo_element.html</filename>
    <base>__FCInciOther</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_tempo_element.html</anchorfile>
      <anchor>a0952eec90a754dc96e28b574f3a2fe63</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_tempo_element.html</anchorfile>
      <anchor>ab3426bab6cd187691cea4ec26c0f4441</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTempoElement</name>
      <anchorfile>class_f_c_tempo_element.html</anchorfile>
      <anchor>a29de39f245c6920b47161dc249763a5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMeasurePos</name>
      <anchorfile>class_f_c_tempo_element.html</anchorfile>
      <anchor>a9a6d22096043cab05d5da6bb3b57ccb1</anchor>
      <arglist>(twobyte edupos)</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>GetMeasurePos</name>
      <anchorfile>class_f_c_tempo_element.html</anchorfile>
      <anchor>aaf32e337f8b48235c63b98bb5eaf4f9a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAbsolute</name>
      <anchorfile>class_f_c_tempo_element.html</anchorfile>
      <anchor>a3797986fe3b2c846b10b8bec6dbaf7a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAbsolute</name>
      <anchorfile>class_f_c_tempo_element.html</anchorfile>
      <anchor>ad3fa44d0fc4b9d3e6d16f7baae12fa5a</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetRatio</name>
      <anchorfile>class_f_c_tempo_element.html</anchorfile>
      <anchor>ad06aacf84c7a5b40ef9c504d4707d216</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRatio</name>
      <anchorfile>class_f_c_tempo_element.html</anchorfile>
      <anchor>a5a3c52ab3fb98a42beccc6ac12e601fb</anchor>
      <arglist>(fourbyte value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>CalcValue</name>
      <anchorfile>class_f_c_tempo_element.html</anchorfile>
      <anchor>a64c84f2448994229acd4a29b71ef7bb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAbsoluteValue</name>
      <anchorfile>class_f_c_tempo_element.html</anchorfile>
      <anchor>a6ae50380da68ebe1b9dd83546e39c342</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRelativeValue</name>
      <anchorfile>class_f_c_tempo_element.html</anchorfile>
      <anchor>ad8f2b4823c1bf53560cf5543416ef4f3</anchor>
      <arglist>(float value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTempoElements</name>
    <filename>class_f_c_tempo_elements.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCTempoElements</name>
      <anchorfile>class_f_c_tempo_elements.html</anchorfile>
      <anchor>a5c5f3e12ce5aac1e9cfa982d8c9e9be0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_tempo_elements.html</anchorfile>
      <anchor>a488bfcba78322644afd1cd3fef8d93d6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCTempoElement *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_tempo_elements.html</anchorfile>
      <anchor>a84775c8f1a38685e3098d1e9d665d643</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssureSorted</name>
      <anchorfile>class_f_c_tempo_elements.html</anchorfile>
      <anchor>a2f3939e66a4dbf4d043f3eb32f2492b2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTextBlock</name>
    <filename>class_f_c_text_block.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>TEXTBLOCKJUSTIFY</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a882f232756891716d66d73fa1cad8263</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a3736fa7fc3b50b0cc786101f0ac5bbda</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>aadbec86081ce3bd653cf7a5afd2ab2cd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTextBlock</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>aa6994e0f27bb2b951409695c624d9148</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRawTextID</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a115f71b2a02e48ffeee631bc41807144</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetRawTextID</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a2247050f133f5f66c0cf091f4b60210d</anchor>
      <arglist>(twobyte therawtextid)</arglist>
    </member>
    <member kind="function">
      <type>EXTAG</type>
      <name>GetRawTextExtag</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a392a13afb2902e918a67078dd11627cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetShapeID</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ae1fe5aaae0c00297e7c9e395113e494d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateRawTextString</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a671d60a57fb806aedbb5e524e5a4b44d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveRawTextString</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a331f976174bba1053633dd3d53058923</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewRawTextString</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a1d0c074bc39edaaed24340a955947522</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeID</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>afcb22bffd618ad64c61aa3d82650e3dc</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRawText</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>aee3328975a1a53a493093069d7379e50</anchor>
      <arglist>(twobyte theid, ETAG tag=LO_UTWOBYTE(tx_TextBlock))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetJustification</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a8d4341e6662634a0be15b3a448d97fd9</anchor>
      <arglist>(FLAG_16 justification)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeepDeleteData</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a413a6adde510c4f2bdbc5ddaf1ceac05</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLineSpacing</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ac28c2e26e8f09bbf628e9d87a5d9d272</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineSpacing</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a0cedc725b0c7cd1d2d89a6877d815825</anchor>
      <arglist>(twobyte linespacing)</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetJustification</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ab99f37e20ab2e12a3f4a716bc69d159d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFrameReference</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ab751fb836d73b11061700fd9e95b1ac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLineSpacingIsPercent</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a49ae4b3023f009c073b83ceba828bb6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetWordWrap</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>afe6284f0e6912b493e538fd8a62c1ca9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetExpandSingleWord</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a3ee6b2368c2335f682818381275e4c76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRoundedCorners</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a3db73d1d33c9e594d5bcb07dc73c107b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix32</type>
      <name>GetRoundedCornerRadius</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ade8b91112b0aa1b1ac840dfcd4d415d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrameReference</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ac2e424631a4a31d3c10115fbb99392e2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineSpacingIsPercent</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ade523ae48a1741a81fd51a2752b6afb8</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWordWrap</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a6722299c7ae3c511db0effec6c3cfeb2</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExpandSingleWord</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>adae6021b6a214043df0a7885954a00a7</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRoundedCorners</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a3318efaf075385b3a615a6283981064e</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRoundedCornerRadius</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a01c2554d9cec1cb0b6ec950db1a73240</anchor>
      <arglist>(Efix32 radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineWidth</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ad1097eca1ea15424e1d7c5ee644c0597</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineInset</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a209a3e20b08789fd138e353505add7cc</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalTextOffset</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ae54e9c217697afb2742c77b5f60fe057</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalTextOffset</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a13b365e2eb0f5db8f48f4043ee939d3a</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowBorders</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>afcfe032393b22ffbf52ff69e281c0d28</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a965a335a1dddeceabf0f41f09e1d2ece</anchor>
      <arglist>(Evpu16 width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHeight</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ad0063fdc1f010e6d4b931fe30f8804a3</anchor>
      <arglist>(Evpu16 height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLineWidth</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>acc16c91f8f78594b9cb085e751e703b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLineInset</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ad6d42beda3168d5b2b275c9280b1f240</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHorizontalTextOffset</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ae10b6e7a12be2e22c21681734573816a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetVerticalTextOffset</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a183d4ab7e2dc337d1c397c0b026e42fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetShowBorders</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a1abdc081aceb105630facfc7d2b7c8ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetWidth</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a7478941c2843b29c25189d8b6c9e8d99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHeight</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>abc059d7aaf6fc4b8bc1a800817453540</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetExpandHorizontally</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a7a6bb79f6f85d79e82fb134f1709cf62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetExpandVertically</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>a63108bf2429616a31440d4e75cd82431</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_text_block.html</anchorfile>
      <anchor>ac19e01abf3698d2f32b2cdc378a0f0f7</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTextBlocks</name>
    <filename>class_f_c_text_blocks.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCTextBlocks</name>
      <anchorfile>class_f_c_text_blocks.html</anchorfile>
      <anchor>a94a7746b793b8640ebf48e4820828c1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_text_blocks.html</anchorfile>
      <anchor>a3a9e2cd38fad4fe61610289686be57dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCTextBlock *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_text_blocks.html</anchorfile>
      <anchor>a8b4e12d1e29fc1a160972648e1a3d7e8</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTextExpressionDef</name>
    <filename>class_f_c_text_expression_def.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>REHEARSALMARK_STYLES</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_MANUAL</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48abfc6d48c1353f44c2406e7a3fadb9220</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_LETTER</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48a3578d12da28e32d2dd7d0ffcf75d4298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_LETNUM</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48aa41a38e8ae1c3b2ba040bac13f5e7a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_LETTER_LC</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48af913dbb2b12d0eb33bc7f1dd6cdfcff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_LETNUM_LC</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48a2d72a78c1c8ae198a8f33a4ec1e6c5d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_NUMBER</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48a3c75800f8f70fb9509091a7209a29e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_MEASNUM</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48a22da64c1be683b87a905ea1f1c97dda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EXPR_PLAYBACK_TYPES</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_UNKNOWN</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531ea7d29ba45c612bd5959f4d63a2a49e882</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_KEYVELOCITY</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531ea7e2f2cc8676e93974fbccd08c144a822</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_TEMPO</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531eaeb42905ba443cd7083d2ebd5864b8879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_TRANSPOSE</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531ea4a0a64efd49a337c7fd7cb8e9dfbbc8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_MIDIDUMP</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531ea44b8393b542bd2e7cff15847132bc05c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_PLAYTEMPOTOOL</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531ea4fa96dbcfe5cb652b311daeb2e698659</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_IGNORETEMPOTOOL</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531ea14d33e51659079aad30849f8b1dd7539</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_MANUAL</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48abfc6d48c1353f44c2406e7a3fadb9220</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_LETTER</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48a3578d12da28e32d2dd7d0ffcf75d4298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_LETNUM</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48aa41a38e8ae1c3b2ba040bac13f5e7a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_LETTER_LC</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48af913dbb2b12d0eb33bc7f1dd6cdfcff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_LETNUM_LC</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48a2d72a78c1c8ae198a8f33a4ec1e6c5d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_NUMBER</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48a3c75800f8f70fb9509091a7209a29e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REHMARKSTYLE_MEASNUM</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a7cd4431a7e5fe768a26eedb47759ba48a22da64c1be683b87a905ea1f1c97dda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_UNKNOWN</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531ea7d29ba45c612bd5959f4d63a2a49e882</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_KEYVELOCITY</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531ea7e2f2cc8676e93974fbccd08c144a822</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_TEMPO</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531eaeb42905ba443cd7083d2ebd5864b8879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_TRANSPOSE</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531ea4a0a64efd49a337c7fd7cb8e9dfbbc8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_MIDIDUMP</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531ea44b8393b542bd2e7cff15847132bc05c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_PLAYTEMPOTOOL</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531ea4fa96dbcfe5cb652b311daeb2e698659</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPPLAYTYPE_IGNORETEMPOTOOL</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab76cd672bcf68373b8aaad8c3216531ea14d33e51659079aad30849f8b1dd7539</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>abb1bc66b1c74c613051b24a43f16b37b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a2e8e5ecca4edb986e3be0471873992c2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTextExpressionDef</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ad868852d47ff623be59fda7f5470cb33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCTextExpressionDef</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab1a958dc0e0fd88a85a7436ec6b2cdf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeepSaveAs</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>aecd8a0d5e1992a3981f21e526c9753a3</anchor>
      <arglist>(CMPER itemno) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeepDeleteData</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a564a7627728111dcb54d8ae271f07945</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>GetTextBlockID</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a5a69696c98bac53a0ba7d4b3dac68c7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EXPR_PLAYBACK_TYPES</type>
      <name>GetPlaybackType</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a9bd0a8ebc23704c3b00cc1262d411f2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlaybackType</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a4665675599d6cf6095f66563fe162d06</anchor>
      <arglist>(EXPR_PLAYBACK_TYPES playbackmode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseExecutableShape</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a3f9d041dc4a3843d02c6573da5932a63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetExecutableShapeID</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a8484868821756795968b8f51e2a43162</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExecutableShapeID</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a6f8f25ea548a888aab066b359507dcee</anchor>
      <arglist>(twobyte shapeID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseExecutableShape</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ae9499b207d969fc00dda57b4667095e9</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHideMeasureNumbers</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a01e967e5b05d3023299a167de34c2532</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHideMeasureNumbers</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab6a95ed9e14b36e43857c982544d869c</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseEnclosure</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ad9f4ceb64ff1b1fda917fe9bd7f13488</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseEnclosure</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ac4f3e88db51338001c698ee894a5d2cf</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetCategoryID</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a340a30dccc91ae913f36379129ff810f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTextID</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a5ed789740d256f9e4d813ee48fd31c40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPlaybackTempoValue</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a436fb1a466ee574c7b5c8e424d8ba0c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPlaybackTempoDuration</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a362987eccef4486e8393f75acf6ad94e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPlaybackPass</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a0a431c1099075944d8c9209e7ddaa6fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlaybackPass</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a31b154023b928e5d1527eaca105f027f</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetPlaybackKeyVelocity</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a456ffad2a3e6454fa6155e0301628346</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlaybackKeyVelocity</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>aac92f1cf1af0bd2f26c562c7aeb5ec25</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>FCCategoryDef::VERT_ALIGNMENT</type>
      <name>GetVerticalAlignmentPoint</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a3b5ac38515d89060386ed86c234de028</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalBaselineOffset</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a32ddd5285af27f6740ed985c596a261d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalEntryOffset</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a168fb9c8ff557efa783b418e092dd944</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>REHEARSALMARK_STYLES</type>
      <name>GetRehearsalMarkStyle</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a51276d9e8befe37195e0c3ed7db5ec73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRehearsalMarkStyle</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>abe8eb6ceab0ece9797eb5b2b739a51c5</anchor>
      <arglist>(REHEARSALMARK_STYLES value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakMMRest</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ab0d4d7fe084444476dc7d164b2ee8f18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakMMRest</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a2d017c3e74aaa5b63977b5aa0a33b735</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCategoryID</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>afb5007918fa2ac438704e78d36314d7c</anchor>
      <arglist>(twobyte ID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseCategoryFont</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a3b1b505cca519efe0df84f21a18c9914</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseCategoryPos</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a288025b45ad9dd9a68cc5c885dc44033</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlaybackController</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a9502dc43c8fcd123ee06ed2d841b85a4</anchor>
      <arglist>(twobyte controllernumber, twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlaybackTempo</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a75601043ecace6a59f088dca9694f142</anchor>
      <arglist>(TimeEdu32 eduduration, int tempo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalAlignmentPoint</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>abf50e821cbd41fae7693992b77f4bd32</anchor>
      <arglist>(FCCategoryDef::VERT_ALIGNMENT value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalBaselineOffset</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a93f39fdd94f545ce2252338d3173242e</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalEntryOffset</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a5b0a5e301cc26bd7c12bf06848afab9d</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>FCCategoryDef::HORIZ_JUSTIFICATION</type>
      <name>GetHorizontalJustification</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a980b85f454a80ba6ebf3397430f04ac2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalJustification</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a91dc72995d78ee4bc782b74f16b8379b</anchor>
      <arglist>(FCCategoryDef::HORIZ_JUSTIFICATION value)</arglist>
    </member>
    <member kind="function">
      <type>FCCategoryDef::HORIZ_ALIGNMENT</type>
      <name>GetHorizontalAlignmentPoint</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a3f5c235fdb87931fbcf5bd85af36cbb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalAlignmentPoint</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a0919073584311c5f4bc8beba6e08adb1</anchor>
      <arglist>(FCCategoryDef::HORIZ_ALIGNMENT value)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalOffset</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a289a258594ffac3004888668f23fa30a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOffset</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a56f0562e387c9bd5afae03d8e6e73f88</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateTextString</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a3e8b30bf1aeba8942ed381d90693fb6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCEnclosure *</type>
      <name>CreateEnclosure</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>aa870f8b2bbf3f7058352a76ba12f7361</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPlaybackTempo</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a0699cbab593e49ee0c0141185c26f852</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSmartMusicMarker</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a1c4c0710b8f5fc27d8eed8eb498d5bcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsKeyVelocity</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a775adeeb768a91009e95fd19b3c88121</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAutoRehearsalMark</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a9e0ba30e70e7f8ccc56c06bd6d1d04c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MakeRehearsalMark</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a64b03abf0f0083ddc77b3adb93455f7c</anchor>
      <arglist>(FCString *pString, int measure)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveTextString</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a77e4478aef97f411962f6258be288113</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewTextBlock</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a3421882b3294fb3c1ff3cdce0a474205</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteTextBlock</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a2c2861c4b26c1a2bd96bb7874ee72d0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignToCategory</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a70ff6b36fdb0ec8d0ac1f29681a4ff3f</anchor>
      <arglist>(FCCategoryDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCategoryFont</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ae88dfac6a0887bd1b95c48d168a24434</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCategoryPos</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a330422c66063c41b83008c7a37417309</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDescription</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a14c27702c824c551c3ae03f95a683e6b</anchor>
      <arglist>(FCString *pDescriptionString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetDescription</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>ac6ea90301e048f496c10c10af88a8a21</anchor>
      <arglist>(FCString *pDescriptionString)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateDescription</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a0bdbb2fc3da4e43c8756d8d3e04ca6d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_text_expression_def.html</anchorfile>
      <anchor>a97c7585bc8242669426e936489f3d90e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTextExpressionDefs</name>
    <filename>class_f_c_text_expression_defs.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCTextExpressionDefs</name>
      <anchorfile>class_f_c_text_expression_defs.html</anchorfile>
      <anchor>a9936cde79c247c47596b3bd341f181c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_text_expression_defs.html</anchorfile>
      <anchor>a0d13742a1018a70a93cfcf1bd9d9b4d1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCTextExpressionDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_text_expression_defs.html</anchorfile>
      <anchor>a60f2c57714fcaf1a3884952499ea54c7</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTextFileStream</name>
    <filename>class_f_c_text_file_stream.html</filename>
    <base>FCFileStream</base>
    <member kind="function">
      <type></type>
      <name>FCTextFileStream</name>
      <anchorfile>class_f_c_text_file_stream.html</anchorfile>
      <anchor>af4b5888ae8135d705477dfcbfdb34f66</anchor>
      <arglist>(FinPathSpec25 *pFolder, FCString *pFileName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTextFileStream</name>
      <anchorfile>class_f_c_text_file_stream.html</anchorfile>
      <anchor>a3d193284b65ab5bf928b49bb6a9fc21f</anchor>
      <arglist>(FCString *pFolder, FCString *pFileName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>OpenRead</name>
      <anchorfile>class_f_c_text_file_stream.html</anchorfile>
      <anchor>a29bc73b5b4f03d4a4df3ddf05051a723</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>OpenWrite</name>
      <anchorfile>class_f_c_text_file_stream.html</anchorfile>
      <anchor>ab4b826fe460017ead5b9a8fb9851809c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FCString *</type>
      <name>ReadString</name>
      <anchorfile>class_f_c_text_file_stream.html</anchorfile>
      <anchor>a90814c77278c2de6b302f54cc708bbf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCStrings *</type>
      <name>ReadStrings</name>
      <anchorfile>class_f_c_text_file_stream.html</anchorfile>
      <anchor>a8aaf758d2990410bd2cfbfd8202bdc19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>WriteStrings</name>
      <anchorfile>class_f_c_text_file_stream.html</anchorfile>
      <anchor>aa24fa8f9f14685508f81d8a2b6b04004</anchor>
      <arglist>(FCStrings *pStrings)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>WriteText</name>
      <anchorfile>class_f_c_text_file_stream.html</anchorfile>
      <anchor>ac2ab7c006055feb415fd233805b4e256</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>WriteSettingsPairs</name>
      <anchorfile>class_f_c_text_file_stream.html</anchorfile>
      <anchor>a9a19e890d61ae7aa82be2fa3e3a90c86</anchor>
      <arglist>(FCSettingsPairs *pPairs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTextFileUTF8Stream</name>
    <filename>class_f_c_text_file_u_t_f8_stream.html</filename>
    <base>FCTextFileStream</base>
    <member kind="function">
      <type></type>
      <name>FCTextFileUTF8Stream</name>
      <anchorfile>class_f_c_text_file_u_t_f8_stream.html</anchorfile>
      <anchor>aa3161f213ee67c4c756ac5967a09ef38</anchor>
      <arglist>(FinPathSpec25 *pFolder, FCString *pFileName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTextFileUTF8Stream</name>
      <anchorfile>class_f_c_text_file_u_t_f8_stream.html</anchorfile>
      <anchor>aa60da8e27b6cd147d1645049400f0605</anchor>
      <arglist>(FCString *pFolder, FCString *pFileName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FCString *</type>
      <name>ReadString</name>
      <anchorfile>class_f_c_text_file_u_t_f8_stream.html</anchorfile>
      <anchor>a3f388b2fbee9e98584271eb63346abb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>WriteStrings</name>
      <anchorfile>class_f_c_text_file_u_t_f8_stream.html</anchorfile>
      <anchor>a160995836bd80b868e529ad3168d5228</anchor>
      <arglist>(FCStrings *pStrings)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>WriteText</name>
      <anchorfile>class_f_c_text_file_u_t_f8_stream.html</anchorfile>
      <anchor>a265081b1d897c02605e9d11e0ad7ffbf</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTextMetrics</name>
    <filename>class_f_c_text_metrics.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type></type>
      <name>FCTextMetrics</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>affdb6bf0a24e13e1c5cf98fab64756fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadString</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a8dc5e3d4150e7181ab70b2f05217569b</anchor>
      <arglist>(FCString *pText, FCFontInfo *pFont, float percent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadSymbol</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>aeb1177c508d2f5d6ff46ab9d736509e5</anchor>
      <arglist>(eUniChar16 symbolchar, FCFontInfo *pFont, float percent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadArticulation</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a49e6bb7da48e8425b5028298433cbd12</anchor>
      <arglist>(FCArticulationDef *pArticDef, bool flipped, float percent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyFrom</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a90531c9d31116eb71f43f7d2d638901a</anchor>
      <arglist>(FCTextMetrics *pTextMetrics)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetAdvanceWidthPoints</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>ad3ae94204f44ba84bd46d3ee2cd7f024</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetLeftPoints</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a1f6f0a1a7b0681c66eb2c3e4835cf043</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetRightPoints</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a1f315bc87f917a593a89b92b2d2a5d62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetTopPoints</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a816121f531d3a5271941bd023f9a4ac1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetBottomPoints</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>ad29ac696cb5bef8e5ac1608df02bdbd5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetAdvanceWidthEVPUs</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a6905a0ca7943f1a4e15c21ff1181ca29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetLeftEVPUs</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a5ba41410af312efd72c2e636d33cf3e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetRightEVPUs</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a3e33a8b2b3d422e77d12ede53c1718f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetTopEVPUs</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>adc40ecd6d4d47cb85af54937b3a10f0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetBottomEVPUs</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>acad5c21c53639e3921470fa7966bd1c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>CalcHeightPoints</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a8bd4dc2a7db3eec3eca879af0a3d3c00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>CalcWidthPoints</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>aab282a914184745ef5e095e0f9d14859</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>CalcHeightEVPUs</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a19449764f5d3b3f90fa2f6f7c9698fcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>CalcWidthEVPUs</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a839afffda43a36ce9dc2c57e29f684f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a9f93165541404a624b5ae34c31f67927</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_text_metrics.html</anchorfile>
      <anchor>a1223b33b8216ed51193db136d636f149</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTextRepeat</name>
    <filename>class_f_c_text_repeat.html</filename>
    <base>__FCInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>REPSHOWMODES</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a970e5b216f217e4735518a9d7b5c7dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPSHOW_ALL</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a970e5b216f217e4735518a9d7b5c7dc5a0e60e4db47b43199db9c4bfe72487c62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPSHOW_TOPSTAFF</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a970e5b216f217e4735518a9d7b5c7dc5ab157f3676df849d772cf074799d72d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPSHOW_STAFFLIST</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a970e5b216f217e4735518a9d7b5c7dc5afe4f308426741b8d88f87c158fd6b171</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>REPTARGETTRIGGERS</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_UNDEFINED</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738a3a0a745a208f6a0ba4315135451d2be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_DEFID</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738a758f2029d8e427ced806163379dda5eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_MEASURENUM</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738aa5e021caf31ff2d48630821380ce8a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_BACKWARDS</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738a1c97ff27be2c574d0bd228c11d0b25fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_NEVERSKIPENDING</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738a8782e99f3de045fe9f977e7f30f4b2ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_FORWARDS</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738ad97f136cc1bf2f8848c64d1a2cc511e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_NEXTENDING</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738a1486d188f301ac23aa05f166a891d991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>REPACTIONS</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acdd33d648311434e3b4d1d6207d2151c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPACTION_NEVERJUMP</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acdd33d648311434e3b4d1d6207d2151caec3aceb55c025847fea416ec68f1143b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPACTION_ALWAYSJUMP</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acdd33d648311434e3b4d1d6207d2151ca8b89e8c0f273ff96574dd55b347fff8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPACTION_JUMPONPASS</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acdd33d648311434e3b4d1d6207d2151cad8777617cc2f293cbf14aa9280637487</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPACTION_PLAYSECTION</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acdd33d648311434e3b4d1d6207d2151cabbb137d2e64b8cc759cc68ba6d12121a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPACTION_STOPONPASS</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acdd33d648311434e3b4d1d6207d2151caee4b0def8f4866cde9e3801acfb0aac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPSHOW_ALL</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a970e5b216f217e4735518a9d7b5c7dc5a0e60e4db47b43199db9c4bfe72487c62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPSHOW_TOPSTAFF</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a970e5b216f217e4735518a9d7b5c7dc5ab157f3676df849d772cf074799d72d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPSHOW_STAFFLIST</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a970e5b216f217e4735518a9d7b5c7dc5afe4f308426741b8d88f87c158fd6b171</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_UNDEFINED</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738a3a0a745a208f6a0ba4315135451d2be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_DEFID</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738a758f2029d8e427ced806163379dda5eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_MEASURENUM</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738aa5e021caf31ff2d48630821380ce8a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_BACKWARDS</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738a1c97ff27be2c574d0bd228c11d0b25fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_NEVERSKIPENDING</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738a8782e99f3de045fe9f977e7f30f4b2ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_FORWARDS</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738ad97f136cc1bf2f8848c64d1a2cc511e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPTARGET_NEXTENDING</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a84a80e9a5c0b1ff91b1be474f64ee738a1486d188f301ac23aa05f166a891d991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPACTION_NEVERJUMP</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acdd33d648311434e3b4d1d6207d2151caec3aceb55c025847fea416ec68f1143b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPACTION_ALWAYSJUMP</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acdd33d648311434e3b4d1d6207d2151ca8b89e8c0f273ff96574dd55b347fff8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPACTION_JUMPONPASS</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acdd33d648311434e3b4d1d6207d2151cad8777617cc2f293cbf14aa9280637487</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPACTION_PLAYSECTION</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acdd33d648311434e3b4d1d6207d2151cabbb137d2e64b8cc759cc68ba6d12121a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPACTION_STOPONPASS</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acdd33d648311434e3b4d1d6207d2151caee4b0def8f4866cde9e3801acfb0aac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>ad96959b1a194845ca99721f62cf59366</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>ae01e1442251c6084829df9f382e9977e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTextRepeat</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a8ceef8936c8025380f930df6841cf6d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AssignTextRepeatDef</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a4b0719e8310dd5755f29752471a00622</anchor>
      <arglist>(FCTextRepeatDef *pDef)</arglist>
    </member>
    <member kind="function">
      <type>FCTextRepeatDef *</type>
      <name>CreateTextRepeatDef</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a5d189cb913f93696f778a517ddaa4bd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FCSeparatePlacements *</type>
      <name>CreateSeparatePlacements</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a6921fecae63be772ec8d2948bb180f18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetID</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>ad7cb6ff89442bc38db21e81829c9cd5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetID</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>aa2496cf093648dba525b7de02daad42d</anchor>
      <arglist>(twobyte id)</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalPos</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>accab8afd1d776fdc03c6cc2b9385258e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalPos</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a90b306666892607ae61c5c3708cf0c27</anchor>
      <arglist>(Evpu32 value)</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalPos</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>ad4d5e06832161940bac23d84b3bfd67f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalPos</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a59107f5f4dc8ef9d313944e53ef9dfa5</anchor>
      <arglist>(Evpu32 value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetTarget</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>aeb6f1b099f80d55da33ec2745f82e077</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTarget</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a312226c5b09efbf602deafd3f487d7c8</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAutoUpdateTarget</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>ab520d47eb49d184bfd07bbd94d8b8fe9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAutoUpdateTarget</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a1bc5d57ea83d91fa924544652964f523</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIndividualPositioning</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acb0438e0f6e7768789b1f9022b04f4e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIndividualPositioning</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>acd5c119e0fca9b4c49885d2b4cf3a713</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>REPSHOWMODES</type>
      <name>GetShowMode</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a65fbddd5f4e5352f238ca82dd6739d43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowMode</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a10d6980bfd04875b78ca46fd1eca272f</anchor>
      <arglist>(REPSHOWMODES mode)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStaffListID</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>aee442d87afdcb15de6192be730212a46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStaffListID</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a342a194da01828e12e0b843fd0524b69</anchor>
      <arglist>(twobyte list)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTotalPasses</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a47f7fc139fcb28d200570a45676e346e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTotalPasses</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>ab88fa52a81225fea07906743dd818e83</anchor>
      <arglist>(twobyte totalpasses)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetJumpIfIgnore</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>aadb81c07d2f5e1d8ec1efc220a981d30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetJumpIfIgnore</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>adb75e510d5df6cc4985acc8e045fd46e</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetResetOnRepeat</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>af30618e9aaf6fc86609727da0313a551</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetResetOnRepeat</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a24ecf574f844d709a372b07d1a2caab7</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>REPTARGETTRIGGERS</type>
      <name>GetTargetTrigger</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>ad6fc6b16dc469b6934734b6c64ec3283</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTargetTrigger</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a86cfbaf12b191a72056a5d79b6acb2d2</anchor>
      <arglist>(REPTARGETTRIGGERS mode)</arglist>
    </member>
    <member kind="function">
      <type>REPACTIONS</type>
      <name>GetAction</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>ad1f5d112f0ad723cf6b01c45dd741092</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAction</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a1fd38185e4b3a05dac8edf0e8a0ac478</anchor>
      <arglist>(REPACTIONS mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_text_repeat.html</anchorfile>
      <anchor>a92c47a52d0bc94d3e06bda18a8f84cfa</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTextRepeatDef</name>
    <filename>class_f_c_text_repeat_def.html</filename>
    <base>__FCNoInciOther</base>
    <member kind="enumeration">
      <type></type>
      <name>TEXT_REPEAT_JUSTIFICATION</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ad910e4c3f4272664ab899379c8a1654e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTREPJUST_LEFT</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ad910e4c3f4272664ab899379c8a1654eabcf02a07121b4c4518e8ebe6fa8449e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTREPJUST_RIGHT</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ad910e4c3f4272664ab899379c8a1654eac07615da0d41c638edca4ab4ccbbfe88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTREPJUST_CENTER</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ad910e4c3f4272664ab899379c8a1654eab954d2fd609d41d71b00d22a3b012ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTREPJUST_FULL</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ad910e4c3f4272664ab899379c8a1654eab11d44a1d32af4d73894f505e6d89bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>REPEAT_REPLACE_MODE</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a5e40e8d25eac505c3422748050393eef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPEATREPLACE_TIMESPLAYED</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a5e40e8d25eac505c3422748050393eefa91597d92bca0096287c7ebf3073e114f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPEATREPLACE_TARGETTEXT</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a5e40e8d25eac505c3422748050393eefaeb13b878ae092d911ad345abd0ce69dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPEATREPLACE_TARGETMEASURE</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a5e40e8d25eac505c3422748050393eefa4966a3ee7009e58553c88d7d00afa276</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTREPJUST_LEFT</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ad910e4c3f4272664ab899379c8a1654eabcf02a07121b4c4518e8ebe6fa8449e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTREPJUST_RIGHT</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ad910e4c3f4272664ab899379c8a1654eac07615da0d41c638edca4ab4ccbbfe88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTREPJUST_CENTER</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ad910e4c3f4272664ab899379c8a1654eab954d2fd609d41d71b00d22a3b012ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXTREPJUST_FULL</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ad910e4c3f4272664ab899379c8a1654eab11d44a1d32af4d73894f505e6d89bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPEATREPLACE_TIMESPLAYED</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a5e40e8d25eac505c3422748050393eefa91597d92bca0096287c7ebf3073e114f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPEATREPLACE_TARGETTEXT</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a5e40e8d25eac505c3422748050393eefaeb13b878ae092d911ad345abd0ce69dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPEATREPLACE_TARGETMEASURE</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a5e40e8d25eac505c3422748050393eefa4966a3ee7009e58553c88d7d00afa276</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a9f5d925f41a4b4cb1212929d684a01c4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ac87fa0fbed46a04687de58b99cb6efe1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTextRepeatDef</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a2c970e2cbe2db7eb40859314c0c93fc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeepSaveAs</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a7c1abd27ec74f2d8a55c13ce8f423a73</anchor>
      <arglist>(CMPER itemno) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeepDeleteData</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a313a80a7cd60aca56eb4a37f45a43e18</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>CreateTextString</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a74734b192467a2312180cb63fd1bf08a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveTextString</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a7d7e862aa70a3758ab5cd58f556a5e8a</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeepSaveNew</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>abd49a35ca2f307d913b77eb9385f8e7f</anchor>
      <arglist>(FCString *pString, FCEnclosure *pEnclosure)</arglist>
    </member>
    <member kind="function">
      <type>FCEnclosure *</type>
      <name>CreateEnclosure</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a2c18be70e3f285564d655631cfc145c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveEnclosure</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ad0018b9374c6480a63eea101ab412f4c</anchor>
      <arglist>(FCEnclosure *pEnclosure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetFontInfo</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ac29be2b9689c272147107154a58b4f3d</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFontInfo</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>aa3eff4aef4f45c24956afc5952a4761a</anchor>
      <arglist>(FCFontInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseThisFont</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ad8cdb17b5cb30b37239b789c628a77be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseThisFont</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ac0f538a35503599f95181b867e9f0864</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>TEXT_REPEAT_JUSTIFICATION</type>
      <name>GetJustification</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>affd4acc33489b305111ce4781c84527b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetJustification</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>ac1b87214ebd756ebe3ad2e3a4213b089</anchor>
      <arglist>(TEXT_REPEAT_JUSTIFICATION value)</arglist>
    </member>
    <member kind="function">
      <type>REPEAT_REPLACE_MODE</type>
      <name>GetReplaceMode</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a10d1a3ebdcb03d7b0ef550b03e840897</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReplaceMode</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>a5fb9dfe8df616fcf706595f8bb9bd9fd</anchor>
      <arglist>(REPEAT_REPLACE_MODE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_text_repeat_def.html</anchorfile>
      <anchor>af54497ffa9cb10f54a453b07f893880b</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTextRepeatDefs</name>
    <filename>class_f_c_text_repeat_defs.html</filename>
    <base>__FCCollectionNoInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCTextRepeatDefs</name>
      <anchorfile>class_f_c_text_repeat_defs.html</anchorfile>
      <anchor>aa0b0b29bd8abdb51db3c388a1a4e0ac5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_text_repeat_defs.html</anchorfile>
      <anchor>a8f953a62e6d01f8927cb4a9c99fa025c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCTextRepeatDef *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_text_repeat_defs.html</anchorfile>
      <anchor>ac403118b45c932e98168f3600dc9cd84</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTextRepeats</name>
    <filename>class_f_c_text_repeats.html</filename>
    <base>__FCCollectionInciOther</base>
    <member kind="function">
      <type></type>
      <name>FCTextRepeats</name>
      <anchorfile>class_f_c_text_repeats.html</anchorfile>
      <anchor>a205c0d69f5571e5f8ac51b21b85f99b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_text_repeats.html</anchorfile>
      <anchor>a6081cbf7f783010cc69e18930b2f6260</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCTextRepeat *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_text_repeats.html</anchorfile>
      <anchor>a380ee8471297e998ddfa4eee2b6eeebf</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTextRepeatText</name>
    <filename>class_f_c_text_repeat_text.html</filename>
    <base>__FCOtherText</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_text_repeat_text.html</anchorfile>
      <anchor>a731bfac5fda5724ff658edecafb98574</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_text_repeat_text.html</anchorfile>
      <anchor>a96b8e69b8c401d82b9216b082be0a2e8</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCThread</name>
    <filename>class_f_c_thread.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type></type>
      <name>FCThread</name>
      <anchorfile>class_f_c_thread.html</anchorfile>
      <anchor>a6386fe6e9ecbcce56b10c4376584dfb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Start</name>
      <anchorfile>class_f_c_thread.html</anchorfile>
      <anchor>a4122a34264a5188f768af5488ede4264</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Execute</name>
      <anchorfile>class_f_c_thread.html</anchorfile>
      <anchor>a736cf07ed9cd375fa3f636f84379b6a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_Executor</name>
      <anchorfile>class_f_c_thread.html</anchorfile>
      <anchor>aee9c095fc69117be4d00acfa8d865e45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsExecuting</name>
      <anchorfile>class_f_c_thread.html</anchorfile>
      <anchor>a6c2b2ce6cfd850033fd8f22e99e4fe81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WaitUntilEnd</name>
      <anchorfile>class_f_c_thread.html</anchorfile>
      <anchor>a904560281ea7810ac1301fbe8ddb0eac</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTieContourPrefs</name>
    <filename>class_f_c_tie_contour_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="enumeration">
      <type></type>
      <name>CONTOUR_INDEXES</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>ae9f7c030882edf4150da5898be88766c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCONTOURIDX_SHORT</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>ae9f7c030882edf4150da5898be88766caa3cddc8af3861f128977026d0f03b7d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCONTOURIDX_MEDIUM</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>ae9f7c030882edf4150da5898be88766ca8336fc7211f34f3908059063016caa72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCONTOURIDX_LONG</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>ae9f7c030882edf4150da5898be88766caa20b5b4d88ee76fd3a86a65f4a44252f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCONTOURIDX_TIEENDS</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>ae9f7c030882edf4150da5898be88766ca0c7673b32f96def528c0380641a4038d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCONTOURIDX_SHORT</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>ae9f7c030882edf4150da5898be88766caa3cddc8af3861f128977026d0f03b7d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCONTOURIDX_MEDIUM</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>ae9f7c030882edf4150da5898be88766ca8336fc7211f34f3908059063016caa72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCONTOURIDX_LONG</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>ae9f7c030882edf4150da5898be88766caa20b5b4d88ee76fd3a86a65f4a44252f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCONTOURIDX_TIEENDS</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>ae9f7c030882edf4150da5898be88766ca0c7673b32f96def528c0380641a4038d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a4e6ac731e3e454e34c75b2821cb24670</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a5f5318cfefcca981396630315eb56903</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTieContourPrefs</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>ab93c78ca741a5730847d401d49072629</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSpan</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>aa3903eaec9c958105fa9539052eea33c</anchor>
      <arglist>(CONTOUR_INDEXES index) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetLeftRelativeInset</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a2c9ffe24255460b6060884631de8d5c1</anchor>
      <arglist>(CONTOUR_INDEXES index) const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLeftRawRelativeInset</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a6e5a319d93cbb51e34bdff7b83530dd5</anchor>
      <arglist>(CONTOUR_INDEXES index) const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLeftHeight</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a4aa8fbf63df17b76bf0005c51f4c3047</anchor>
      <arglist>(CONTOUR_INDEXES index) const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetLeftFixedInset</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a20cc85c56f0700ff9226228d643087c0</anchor>
      <arglist>(CONTOUR_INDEXES index) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetRightRelativeInset</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a2c480097e063b558e6dfb613ff63b201</anchor>
      <arglist>(CONTOUR_INDEXES index) const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetRightRawRelativeInset</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a1be0c8e4583372b7073fa070987735d8</anchor>
      <arglist>(CONTOUR_INDEXES index) const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetRightHeight</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a18ceb4193e452b2e8b9c6f2ce6aae3a5</anchor>
      <arglist>(CONTOUR_INDEXES index) const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetRightFixedInset</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a8c5c723c8afe857b26d9ab1763c6e838</anchor>
      <arglist>(CONTOUR_INDEXES index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpan</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a09dddd5b908ded7680d57e9bb229ce37</anchor>
      <arglist>(CONTOUR_INDEXES index, Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftRelativeInset</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>aafefd150412b74a07c91553eab99c1e7</anchor>
      <arglist>(CONTOUR_INDEXES index, float percentvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftRawRelativeInset</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>acbf883e46e9a063086d632d48e4b8e3f</anchor>
      <arglist>(CONTOUR_INDEXES index, Evpu16 rawvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftHeight</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a30d24017c9bd307d5ac5fa6c7f57dd46</anchor>
      <arglist>(CONTOUR_INDEXES index, Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftFixedInset</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a90f92c89132ed00b5cb692674db3be02</anchor>
      <arglist>(CONTOUR_INDEXES index, Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightRelativeInset</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a61df126a21291a2bf4d5bc1d4ddb17de</anchor>
      <arglist>(CONTOUR_INDEXES index, float percentvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightRawRelativeInset</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a739c04b11394238a3e679a4b37d8fdbe</anchor>
      <arglist>(CONTOUR_INDEXES index, Evpu16 rawvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightHeight</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>aa3185dcd35a407d84a57782f03199661</anchor>
      <arglist>(CONTOUR_INDEXES index, Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightFixedInset</name>
      <anchorfile>class_f_c_tie_contour_prefs.html</anchorfile>
      <anchor>a54bdc9144ecea50a6cd3865bbaa75819</anchor>
      <arglist>(CONTOUR_INDEXES index, Evpu16 value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTieMod</name>
    <filename>class_f_c_tie_mod.html</filename>
    <base>__FCEntryDetailNoteID</base>
    <member kind="enumeration">
      <type></type>
      <name>TIEMOD_TIETYPES</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a176c37d72bfa9deabed7bd3b54674662</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODTYPE_TIEEND</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a176c37d72bfa9deabed7bd3b54674662a336f71fe0c0814acce405abde7fae0d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODTYPE_TIESTART</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a176c37d72bfa9deabed7bd3b54674662a3f3b250efb1ed5fd8ffa3d6c357a265c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TIEMOD_SELECTOR</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>ad0fac682eea67d8b5d98bb0333de3e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODSEL_DEFAULT</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>ad0fac682eea67d8b5d98bb0333de3e88a1e6196c4475ff8015068b9cb0be004fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODSEL_ON</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>ad0fac682eea67d8b5d98bb0333de3e88a3dd7fbb18f764a068843ac18d1351821</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODSEL_OFF</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>ad0fac682eea67d8b5d98bb0333de3e88a9956bb475800e0467e3c8afb457fa37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TIEMOD_DIRECTION</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a8fd213af279301513c31488ace6b8331</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODDIR_AUTOMATIC</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a8fd213af279301513c31488ace6b8331ad6b35cbe4661482bf33454e91f4bc097</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODDIR_OVER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a8fd213af279301513c31488ace6b8331a825708e3963f55230ad408266b3e8d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODDIR_UNDER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a8fd213af279301513c31488ace6b8331a62e8b850bf0085df7b5fcb884231897e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TIEMOD_CONNECTION_CODES</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NONE</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a255baeafb17c5fd12e4e3edf34cbc883</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_ENTRYLEFT_NOTECENTER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a06595baf6ff3e87144addbbcdb82b9c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_ENTRYRIGHT_NOTECENTER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a06aed71c15ad35a0eda35555e7745bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTELEFT_NOTECENTER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a7d3d8a1406bfdb825bbd09d19dd57fc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTERIGHT_NOTECENTER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64adc0178e9b20928056e208c48709623b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTECENTER_NOTEBOTTOM</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a4c6091e9f3863020b6efe296ce7e65f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTECENTER_NOTETOP</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64aa477f57883930e8dce91588203328ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_DOTRIGHT_NOTECENTER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64ab64000bba9d269d6dd9346a768f73cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_ACCILEFT_NOTECENTER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a1f9745349d22c543c57ce8125bc8122b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_ENTRYCENTER_NOTEBOTTOM</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64aff6971028aad06eb83099ec7870b48a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_ENTRYCENTER_NOTETOP</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a9d81a76f73d0f3e11620a7dd12b5dc28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTELEFT_NOTEBOTTOM</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a7a165c5c9f11f965fb0a840943849d7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTERIGHT_NOTEBOTTOM</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a46af352aff17e71032d1af8c282bbcd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTELEFT_NOTETOP</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64aa048ce9d5d1c602fdce1ee48ac92a445</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTERIGHT_NOTETOP</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64ae6d2ab2ef6a7b61e2670e23f012376a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_SYSTEMEND</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a4220b971b2d0111c746b9e004c8a3bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_SYSTEMSTART</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64ada12fc30884634a65060a316773730cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODTYPE_TIEEND</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a176c37d72bfa9deabed7bd3b54674662a336f71fe0c0814acce405abde7fae0d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODTYPE_TIESTART</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a176c37d72bfa9deabed7bd3b54674662a3f3b250efb1ed5fd8ffa3d6c357a265c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODSEL_DEFAULT</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>ad0fac682eea67d8b5d98bb0333de3e88a1e6196c4475ff8015068b9cb0be004fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODSEL_ON</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>ad0fac682eea67d8b5d98bb0333de3e88a3dd7fbb18f764a068843ac18d1351821</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODSEL_OFF</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>ad0fac682eea67d8b5d98bb0333de3e88a9956bb475800e0467e3c8afb457fa37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODDIR_AUTOMATIC</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a8fd213af279301513c31488ace6b8331ad6b35cbe4661482bf33454e91f4bc097</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODDIR_OVER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a8fd213af279301513c31488ace6b8331a825708e3963f55230ad408266b3e8d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODDIR_UNDER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a8fd213af279301513c31488ace6b8331a62e8b850bf0085df7b5fcb884231897e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NONE</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a255baeafb17c5fd12e4e3edf34cbc883</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_ENTRYLEFT_NOTECENTER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a06595baf6ff3e87144addbbcdb82b9c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_ENTRYRIGHT_NOTECENTER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a06aed71c15ad35a0eda35555e7745bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTELEFT_NOTECENTER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a7d3d8a1406bfdb825bbd09d19dd57fc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTERIGHT_NOTECENTER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64adc0178e9b20928056e208c48709623b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTECENTER_NOTEBOTTOM</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a4c6091e9f3863020b6efe296ce7e65f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTECENTER_NOTETOP</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64aa477f57883930e8dce91588203328ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_DOTRIGHT_NOTECENTER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64ab64000bba9d269d6dd9346a768f73cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_ACCILEFT_NOTECENTER</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a1f9745349d22c543c57ce8125bc8122b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_ENTRYCENTER_NOTEBOTTOM</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64aff6971028aad06eb83099ec7870b48a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_ENTRYCENTER_NOTETOP</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a9d81a76f73d0f3e11620a7dd12b5dc28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTELEFT_NOTEBOTTOM</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a7a165c5c9f11f965fb0a840943849d7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTERIGHT_NOTEBOTTOM</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a46af352aff17e71032d1af8c282bbcd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTELEFT_NOTETOP</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64aa048ce9d5d1c602fdce1ee48ac92a445</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_NOTERIGHT_NOTETOP</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64ae6d2ab2ef6a7b61e2670e23f012376a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_SYSTEMEND</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64a4220b971b2d0111c746b9e004c8a3bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMODCNCT_SYSTEMSTART</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0ddf131d355cadab7f41bc081f1caf64ada12fc30884634a65060a316773730cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>af63fee1957f5f8eb54cc0eecaad4787a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>acbe8171841b8565bb7d512dc49f41768</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTieMod</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>ab225f9c9a67d0671d0539af00701fbfa</anchor>
      <arglist>(TIEMOD_TIETYPES tietype)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStartTie</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a13021bd654baecfb5960e52423d52034</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStartPointActive</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a751511459ef863c0e1fe932ffe77fccb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ActivateStartPoint</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a5f05418ce5b2f2707f65c9cd716fe7b4</anchor>
      <arglist>(bool fortieover, TIEMOD_CONNECTION_CODES connectioncode, Evpu16 hoffset, Evpu16 voffset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeactivateStartPoint</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>aa4be3d82b32af1bdbc0541c5d4d6cf35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEndPointActive</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a837ecf40d0435dd29312ae23d2b73004</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ActivateEndPoint</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a9ccc33fabf9cce5f6b47f1ef31fcaedf</anchor>
      <arglist>(bool fortieover, TIEMOD_CONNECTION_CODES connectioncode, Evpu16 hoffset, Evpu16 voffset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeactivateEndPoint</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a4406337c93e7ba46d2ffd9e9a0c65bfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LocalizeFromPreferences</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a07690d11eb4cce6e8d82d2e6147cc96b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsContourActive</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a9fc4aa6a38556eb77f16ff38485ca521</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ActivateContour</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a459d0c73c22062fb24c630c552aa64bf</anchor>
      <arglist>(twobyte insetleft, twobyte heightleft, twobyte insetright, twobyte heightright, bool fixedinset=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeactivateContour</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a163a355fde433ff10a5e566382a39b08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStartConnectionCode</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>aff7d43cc25b42e4c6244220ed18a4ea5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartVerticalPos</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a7f9541aab6ae600fccc72bb65b4b9d8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetStartHorizontalPos</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a136b52be9fa30e5bc509b7d050df1b3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetEndConnectionCode</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>aef909394aa9e72a76a255056dfe309a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndVerticalPos</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a0b6a057eb9ade33f8b940af0fdba50ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetEndHorizontalPos</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>aa6f66aa6dd6e39897aef37b8c092a9e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFixedInsetStyle</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a90f2158ad816ba404e955fc74e7e2ee7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLeftHeight</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a860af9f19a90df39f7abf5cc99d01227</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRightHeight</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a4c830a9e3922c4b14e57e7c0f7a7c41d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLeftInset</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a6a7f4823cea70537a4c80220f8ced06b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRightInset</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a65193dce427816ada294613c8b6b11cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetTieDirection</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a4c403b539febf2d507003e2e0c51c03f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBreakForTimeSignature</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a56fbb295a03983bca5219cee3d98d76f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBreakForKeySignature</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>afe2fea5665af66f4acf67fbf104550b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetOuterPlacement</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a6cd0e628c31267f04139916bdd8480a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidStaffLines</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a081a11df4b3de97255325f9521798542</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartVerticalPos</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>ac0decbeeb40f05fb32c44b0c12040169</anchor>
      <arglist>(twobyte pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartHorizontalPos</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a66a68b1559373fe6991ba4a7e12647ba</anchor>
      <arglist>(twobyte pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndVerticalPos</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a818452a5a7bbb4ab0edfe663f96ac030</anchor>
      <arglist>(twobyte pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEndHorizontalPos</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a16e254234705d398b7a312d383ab0ddc</anchor>
      <arglist>(twobyte pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFixedInsetStyle</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a5bc99cc241e53ab759f3741e9a4ca8b7</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftHeight</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>ad8defdd9de0a7f6875c61b8f14bf813c</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightHeight</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>add9a67d4ea82f4798a1f13b8aed93e16</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftInset</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a5afe9639cb09a0df520e53871ac76d67</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightInset</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a9d4f78b00adcffa5ac61d3f97b69184b</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTieDirection</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>af88e0d21e9ce46e14bbc13c835f612ad</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakForTimeSignature</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a3a16e7019a92289ba9cb0d1a92a632cd</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakForKeySignature</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>aadb06ea3c87005db2e87bb7e1776b89e</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOuterPlacement</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>ad53b89bfcfffdda7cf620d8d717db1d2</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidStaffLines</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>aec936bb3dcc3835debc654929353d9d4</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoteID</name>
      <anchorfile>class_f_c_tie_mod.html</anchorfile>
      <anchor>a940e8ee9471e982ac67746d616705267</anchor>
      <arglist>(twobyte id) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTiePlacementPrefs</name>
    <filename>class_f_c_tie_placement_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="enumeration">
      <type></type>
      <name>TIEPLACEMENT_INDEXES</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEPLACE_OVERINNER</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639a05b5cbb8d6ba9b977c79ede98db0c39d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEPLACE_UNDERINNER</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639a81f2e602aadd1794a97e5dc1eb060ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEPLACE_OVEROUTERNOTE</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639af0a7dc92e77bf0ead67082aeb4971e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEPLACE_UNDEROUTERNOTE</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639a68be3fc82eca867c119dff123e960efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEPLACE_OVEROUTERSTEM</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639a03ce5cf58a3e40347242d3f4b3fb4d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEPLACE_UNDEROUTERSTEM</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639a552083542619af458fa7aa1883a10d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEPLACE_OVERINNER</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639a05b5cbb8d6ba9b977c79ede98db0c39d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEPLACE_UNDERINNER</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639a81f2e602aadd1794a97e5dc1eb060ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEPLACE_OVEROUTERNOTE</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639af0a7dc92e77bf0ead67082aeb4971e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEPLACE_UNDEROUTERNOTE</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639a68be3fc82eca867c119dff123e960efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEPLACE_OVEROUTERSTEM</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639a03ce5cf58a3e40347242d3f4b3fb4d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEPLACE_UNDEROUTERSTEM</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a584f4d57d231c3cb9a112de29ce82639a552083542619af458fa7aa1883a10d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a720a33873ab90fd6220cef33387437bb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a6e74e31a56fa8895f756c874552d313a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTiePlacementPrefs</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a0eaa76f1a822402ffd82d84971d3419a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalStart</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a17b66263c2b149f92573fb02b9ff6741</anchor>
      <arglist>(TIEPLACEMENT_INDEXES placementtype) const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalStart</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>aaa546614bed0612b3479c6886f277b4c</anchor>
      <arglist>(TIEPLACEMENT_INDEXES placementtype) const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetHorizontalEnd</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>ae41d25bf5146c42d1eec65ea689ac7ee</anchor>
      <arglist>(TIEPLACEMENT_INDEXES placementtype) const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetVerticalEnd</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a9bf6b551def028439bc3d1423bfbda07</anchor>
      <arglist>(TIEPLACEMENT_INDEXES placementtype) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalStart</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>afa6d74ede93b7eccc0ec06862ac41db6</anchor>
      <arglist>(TIEPLACEMENT_INDEXES placementtype, Evpu16 offsetvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalStart</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a67c99f2222bdf73625ec4d973bde0794</anchor>
      <arglist>(TIEPLACEMENT_INDEXES placementtype, Evpu16 offsetvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalEnd</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>a0f8694f284b411136aa1925a98333428</anchor>
      <arglist>(TIEPLACEMENT_INDEXES placementtype, Evpu16 offsetvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalEnd</name>
      <anchorfile>class_f_c_tie_placement_prefs.html</anchorfile>
      <anchor>adcc763c3fc9b591c4a8554d49b32c58d</anchor>
      <arglist>(TIEPLACEMENT_INDEXES placementtype, Evpu16 offsetvalue)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTiePrefs</name>
    <filename>class_f_c_tie_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="enumeration">
      <type></type>
      <name>TIE_SECONDS_CONSTANTS</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5e1e182e41edce64c31c37080e49ef6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIESECONDS_NONE</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5e1e182e41edce64c31c37080e49ef6aab54a69d6e109978e95f11093fc9bb3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIESECONDS_SHIFTSTART</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5e1e182e41edce64c31c37080e49ef6aa78a7e7f48b51942019abd243d302ef29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIESECONDS_SHIFTEND</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5e1e182e41edce64c31c37080e49ef6aad02d6a0379857c8bd52b15d7d4548a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIESECONDS_SHIFTBOTH</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5e1e182e41edce64c31c37080e49ef6aa97a7afb7960fa5384520ab750b32b8a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TIE_CHORD_DIRECTIONS</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a1832f2046369199ee38640d4ffcee565</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIECHORDDIR_OUTSIDEINSIDE</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a1832f2046369199ee38640d4ffcee565ac2f11ba6046c4b7fac747c99f9a2f7b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIECHORDDIR_STEMREVERSAL</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a1832f2046369199ee38640d4ffcee565ac2476a910706cab4708f3829e265e95a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIECHORDDIR_SPLITEVENLY</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a1832f2046369199ee38640d4ffcee565a04ecb5e4263515819629f568e3432026</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TIE_MIXED_STEM_TYPES</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a451811bcae30218a92d27100b2b49bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMIXEDSTEM_OVER</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a451811bcae30218a92d27100b2b49bc3a24ef10819516f0153fc8a4640072d554</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMIXEDSTEM_UNDER</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a451811bcae30218a92d27100b2b49bc3a1399a037acbfbfe0a66c73c6b54a4bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMIXEDSTEM_OPPOSITEFIRSTSTEM</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a451811bcae30218a92d27100b2b49bc3a30487984ac0d320caf430fa687718552</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIESECONDS_NONE</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5e1e182e41edce64c31c37080e49ef6aab54a69d6e109978e95f11093fc9bb3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIESECONDS_SHIFTSTART</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5e1e182e41edce64c31c37080e49ef6aa78a7e7f48b51942019abd243d302ef29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIESECONDS_SHIFTEND</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5e1e182e41edce64c31c37080e49ef6aad02d6a0379857c8bd52b15d7d4548a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIESECONDS_SHIFTBOTH</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5e1e182e41edce64c31c37080e49ef6aa97a7afb7960fa5384520ab750b32b8a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIECHORDDIR_OUTSIDEINSIDE</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a1832f2046369199ee38640d4ffcee565ac2f11ba6046c4b7fac747c99f9a2f7b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIECHORDDIR_STEMREVERSAL</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a1832f2046369199ee38640d4ffcee565ac2476a910706cab4708f3829e265e95a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIECHORDDIR_SPLITEVENLY</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a1832f2046369199ee38640d4ffcee565a04ecb5e4263515819629f568e3432026</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMIXEDSTEM_OVER</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a451811bcae30218a92d27100b2b49bc3a24ef10819516f0153fc8a4640072d554</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMIXEDSTEM_UNDER</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a451811bcae30218a92d27100b2b49bc3a1399a037acbfbfe0a66c73c6b54a4bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIEMIXEDSTEM_OPPOSITEFIRSTSTEM</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a451811bcae30218a92d27100b2b49bc3a30487984ac0d320caf430fa687718552</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a1e90ca9193b9770d931f1452ad02c1de</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a94600776841c43059be7e035ce241a4b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTiePrefs</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a10e4c4a73a8f134693c966b09fee16f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetThicknessRight</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>ab2ad07fb6b9ca1eefc5ec58873657223</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetThicknessLeft</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>ac11a16f18b212a7db1da8b948a634eb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakForTimeSigs</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a064300abf5161ad2afffe1255bc673eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakForKeySigs</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>ad449638b686bf20ebea328fcf30dfb26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTimeSigLeftHorizontalOffset</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a0fce867ac6dd1404784a58e327d99bca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetTimeSigRightHorizontalOffset</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5be5b5f989584d9b748f4531d760f501</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetKeySigLeftHorizontalOffset</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>af1be69266e7791ad8fb187ea391609a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetKeySigRightHorizontalOffset</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a11718f8825c6935f95a73813bb6a104f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSystemLeftHorizontalOffset</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5c592635d6c1b3f9fa3ea9dd08c6dbc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetSystemRightHorizontalOffset</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a11723ca0454abe9aff7761733cdcf33a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetExtraSystemStartSpace</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>ab3e74fedfff65703153d8e99614cbda8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseOuterPlacement</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a68d8e65e868d9ba6fd028db0625d1fec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FLAG_16</type>
      <name>GetSecondsPlacement</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a77fa1f0dd896d0a77c9c1616e4371578</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetChordDirectionType</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>ae6246c37286a82e37285de8255904d2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetChordDirectionOpposingSeconds</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>ae4beb784b3b2c4c44b11fcc61b19df6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMixedStemDirectionType</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a8d637bed4deb1dccb6029e6211115496</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAfterSingleDot</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a3dc459f7c5e9477b8fd619cc666b1342</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAfterMultipleDots</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a4be7e7ba2ee0309c766ec846ca92bce7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBeforeSingleAccidental</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>ac7548eac9d6a3ab785362fa505668ef5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidStaffLines</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>ae0559c2d51e431d3282a5b549ee63fb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Evpu16</type>
      <name>GetAvoidStaffLinesDistance</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>aa3663ac0de1f0e2c4179ed8973301487</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFixedInsetStyle</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a1ae99774017565282ad648a457d88875</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseInterpolation</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>afb31304b5196d17e4a317a4bcf140f9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseTieEndStyle</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a514e21ff64326d3535568c39c5feb2da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidStaffLinesOnly</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a39b4fda79bca8b71364e365e8d8cfa41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>fourbyte</type>
      <name>GetTipWidth</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a90a136551896b60f104e3b01c1cdada9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetThicknessRight</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>ab688daba1835e6655c52662d9f2b753b</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetThicknessLeft</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>acb56f57879e9a3b7305a1f23192140e1</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakForTimeSigs</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a896d228fa31983f8e866bfe6c30c2b60</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakForKeySigs</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>ab836e0a5aec4e083094fcc64a502b214</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigLeftHorizontalOffset</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a2e54e4732655d9525d7c86346b9a109b</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeSigRightHorizontalOffset</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5761d9a38f78a1e30805f4a59c802576</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySigLeftHorizontalOffset</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a9eb9c77cdc80d3c202efc260b6ea16b7</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeySigRightHorizontalOffset</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>aa1a2a8c40a402d70ec3925946ec15683</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSystemLeftHorizontalOffset</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a9837ef8c3b5f093026c68f913fc7e5be</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSystemRightHorizontalOffset</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a09d638f296f4ba157faa8454802fcee6</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExtraSystemStartSpace</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a9cb0cf7f6002a1f01d98d986eff782e8</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseOuterPlacement</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a39193fe66afcd82f9c34841cb480e3cd</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSecondsPlacement</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a863f70c98105413c397a3c6a2cd2c61b</anchor>
      <arglist>(FLAG_16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordDirectionType</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>af415e64edd0e338e20ea6bf02684fefc</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChordDirectionOpposingSeconds</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>af236e32a0e1cb1691f230772060396ad</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMixedStemDirectionType</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a616a6a791a3d804834e902582fb80410</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAfterSingleDot</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>afd4a8075b2460a743a8d54915765d345</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAfterMultipleDots</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>ad63ce2e55ee8abb162f410cb4dee0f72</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBeforeSingleAccidental</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>ac88310dafc1e39967fe81adbe5d03615</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidStaffLines</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a07e215fb18d99667f35e92da73f3618b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidStaffLinesDistance</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5ae75bc42619c5d5dd0a3d4ae3d4e29b</anchor>
      <arglist>(Evpu16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFixedInsetStyle</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>aa405d77a0bbe48329dd9f0255d441576</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseInterpolation</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a0b676eed4f1b1525839030bef2c9ded5</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseTieEndStyle</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a443aead615fc9ee30cfaa20767989f89</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidStaffLinesOnly</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a004adf62512d5184f42e10963930d4e8</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTipWidth</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a5e39211e3e6a293fe6e9945338dc2b8b</anchor>
      <arglist>(fourbyte value)</arglist>
    </member>
    <member kind="function">
      <type>FCTiePlacementPrefs *</type>
      <name>CreateTiePlacementPrefs</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>af7a5320e4c28721066007d0e94748833</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveTiePlacementPrefs</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a3c7296d162cde617bbef7188ea132f33</anchor>
      <arglist>(FCTiePlacementPrefs *pPlacementPrefs)</arglist>
    </member>
    <member kind="function">
      <type>FCTieContourPrefs *</type>
      <name>CreateTieContourPrefs</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a2c2cf99359272ce8f2636339f3f1e16b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveTieContourPrefs</name>
      <anchorfile>class_f_c_tie_prefs.html</anchorfile>
      <anchor>a45caea3b0491fb1a8bd578d3ff9d7c3f</anchor>
      <arglist>(FCTieContourPrefs *pPrefs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTimeSignature</name>
    <filename>class_f_c_time_signature.html</filename>
    <base>__FCBaseData</base>
    <member kind="function">
      <type></type>
      <name>FCTimeSignature</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a310b74e2116a33cdfa82a40189652073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>ad56ec9c592dc50a813b2bee6b4e8a847</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a6bacd8c764246abf90fc251b8f27b322</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBeats</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a6a82e68320beb3c5907fd089b78974f5</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBeatDuration</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a43f28c67967a93e5be3a7972e6b555ec</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCompositeTop</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a4b7264cdb0f36a0ef8a04ac1b85419af</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCompositeBottom</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>ace443ecd2b48663e17350ce141fca9c4</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAbbreviate</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a0e6b2b29d1005f2622e9161700cd0252</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBeats</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a6ec05dc5c93b9d48c9fa4107f17aac33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcBeats</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>ade63f4669464b0cddfb50758b5e59a35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcLargestBeats</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a00f148d3960d0e51f8ef4053594f9248</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetBeatDuration</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a0cf08eb4aa5bf34c9677b73645549a98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcSmallestBeatDuration</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a5a7b59aaee35877b8842bbb51f7b9ba0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>CalcLargestBeatDuration</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a37ba1adac4748fd86c2599fb5e6a4517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCompositeTop</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a3b6d15b4e07bd5c8521cce350e9e528b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCompositeBottom</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a1f591598f0f492d2a3824c98af23801f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAbbreviate</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>af906bd404e2da3efad4956c59f51a68a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsBeatPosition</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a7d20d70a736ac01c46337f6d9821c4e3</anchor>
      <arglist>(TimeEdu32 eduposition)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CalcBeatPosition</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>aa59b18f9ddba9290fede557f74a0514f</anchor>
      <arglist>(TimeEdu32 eduposition)</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>CalcPrevBeatPosition</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a0bf29549ce1085d06d7da086fbda9740</anchor>
      <arglist>(TimeEdu32 eduposition)</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>CalcNextBeatPosition</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a5a1e862dce8f4f4cf9ec0901edc346ac</anchor>
      <arglist>(TimeEdu32 eduposition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdentical</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a5e9b181d9e49ad7662d7ad137c832876</anchor>
      <arglist>(__FCBase *pCompareObject) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCompound</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a522cf3ce7777c6366ec56a339b51e58a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCommonTime</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a84c28f5482ee8b3ded2eb5faefd18b84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveCompositeTop</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a6c735105e9bfcba7d9926e8a5707c701</anchor>
      <arglist>(twobyte newNumBeats)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveCompositeBottom</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>ac14c3bf483ade9f8c85c852163e452bc</anchor>
      <arglist>(twobyte newBeatDuration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeString</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>adc8bc4e944227031d3da074349479c54</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>FCCompositeTimeSigTop *</type>
      <name>CreateCompositeTop</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a1da8e23347df3d251d4906eac2a04067</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewCompositeTop</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a6118738ad69e54b746d693fa696b7f74</anchor>
      <arglist>(FCCompositeTimeSigTop *pCompositeTop)</arglist>
    </member>
    <member kind="function">
      <type>FCCompositeTimeSigBottom *</type>
      <name>CreateCompositeBottom</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>ae3fd242a0d6989173b9c6fc5e9d80709</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveNewCompositeBottom</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a3bbe30212f6e87c2d81fe4729a57cd05</anchor>
      <arglist>(FCCompositeTimeSigBottom *pCompositeBottom)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsCompoundBeatDuration</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>a563a4ef8ecc8460d2dd00e944b0343e2</anchor>
      <arglist>(TimeEdu32 duration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>LoadFirst</name>
      <anchorfile>class_f_c_time_signature.html</anchorfile>
      <anchor>aaf440161da02d7f067359aa6d0ab19df</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTreeNode</name>
    <filename>class_f_c_tree_node.html</filename>
    <base>__FCCollection</base>
    <member kind="function">
      <type></type>
      <name>FCTreeNode</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>adeeae1df7be53942a847378f4ce698c1</anchor>
      <arglist>(FCString *pText)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCTreeNode</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>a869fc1a1ff1afae8e7733c7d9745f800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>aecd622e2ed71bbc5f283a8c5080f2fcc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FCTreeNode *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>a15757f9d3f18c4c996679f99144bb3b7</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetText</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>a861fe2811592c7c4b0ffebc2500fee88</anchor>
      <arglist>(FCString *pText)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetText</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>a8dca3cdff3e96ccbe7a7d495f543e514</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>FCString *</type>
      <name>GetTextPtr</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>a7264fa8315481704d5494a0726ea4678</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIsContainer</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>ac64cb8495db3d303c17873458e14ca2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCTreeNode *</type>
      <name>GetParentNode</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>ac270d404ef6ecc741b4be658900bdc9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetIndex</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>a76b96881e2b3d31b9c15a7cd16e571df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSiblingCount</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>a9634627b42c84b8dcf15df5ac14556e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>HANDLE</type>
      <name>_GetItemHandle</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>aac7241700a0967c2db6010879d9ca798</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_SetItemHandle</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>a70ae8bae95273783cc89607906c6e83e</anchor>
      <arglist>(HANDLE item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_tree_node.html</anchorfile>
      <anchor>a297a7fe44e187acd5cf2804b493f375e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTuplet</name>
    <filename>class_f_c_tuplet.html</filename>
    <base>__FCEntryDetail</base>
    <member kind="enumeration">
      <type></type>
      <name>PLACEMENTMODE</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ab303a915259550adeeb6c8971bab6582</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NUMBERSTYLE</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>adedb82b4f43130dd249a8ddae29ef8cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SHAPESTYLE</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ac1d26b071ec96f27af734a932288a184</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BRACKETMODE</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a9c9277a5374761bbe20d3035e860e847</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a9880ce40160fe2b169b1de64d964015e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a5befcc6dbeddbc6603d5c93ac55ce979</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a87e1a55253d223db40e3aad31ad6ff23</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTuplet</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a01d62e8fc117f74c22b0a991f601d811</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>CalcFullReferenceDuration</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a4c079033bcecd5249c3265b3fa23d74d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeEdu32</type>
      <name>CalcFullSymbolicDuration</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>af4a6f935d35cf871b4a736ade080c9a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrefsReset</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ac3f0113ab326cab9759b5bfd5ec447c8</anchor>
      <arglist>(bool resetposition)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSymbolicDuration</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ae1f4351ff8b4fc1f4e6cd230c10a63ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSymbolicNumber</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ad9d0962dfc92d80e4535c87f0950dcb4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetReferenceDuration</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ac5364eb9b6a976130826a5504aca6ecb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetReferenceNumber</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a3c2d46b91ccad0da370915d156be583b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PLACEMENTMODE</type>
      <name>GetPlacementMode</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ab6292dd98cc16cfa8d8be97bf5c1076e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEngraverTuplet</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ab42c06d95e19257a2bacc3a9d04dbf23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidStaff</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a9ef26fdfbdce95bb1f2d57df3e399162</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAllowHorizontalDrag</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a4c9357778d9400f625a52985859782b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseBottomNote</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a4cf47e622ad52eba7a2ef3de409359df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NUMBERSTYLE</type>
      <name>GetNumberStyle</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ab6f112b2a5800c4bd76e72f43d18b673</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SHAPESTYLE</type>
      <name>GetShapeStyle</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a91dfda7d6e91d4d156f2036ae1f4bd05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakSlurBracket</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>af93815f1a8089cbe05195b3005dacb8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BRACKETMODE</type>
      <name>GetBracketMode</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>add2d601315aa3ff539a1fcec3f53a881</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAlwaysFlat</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a68ecd86507cf157e1cd5b726b4fe80d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBracketFullDuration</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a5f8cec204b028948a8a1d6f0f84d4ff0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalOffset</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>abaee36271be339a5fb0dd490de3b90ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalOffset</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a7ad976680e43102afaf4d3993998900d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCenterUsingDuration</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ac54b2eef4bc3c89868b387317e042a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIgnoreNumberOffset</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a6844735756e36019eef293e7e8500870</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalShapeOffset</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a72817245ded5781799c86eb60cfb068b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalShapeOffset</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a466c9762ad6820291bffedfe3e5fa736</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetMatchHookLengths</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>aed6721bcd30e051ba27ad6094898cf95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLeftHookLength</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a6700fbf5a9cfedd19e2c96e90c9b942c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLeftExtension</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ab4d97cd4d314714af510c54e2c3c134e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRightHookLength</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a2854b098066966d48e3054df0ea3b382</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRightExtension</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a38cbba385f63bd4d553b4a7cc46eb70a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSlopeAdjust</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a25d4841c2b27b88c0d8754b501e1e59a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVisible</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a96437580545c167b8e7ea3dae91702a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolicNumber</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>afa7cf157538d2f4a48b5ded30df139bc</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSymbolicDuration</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a7956eb87ace1485c5d6d31a1913884cd</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceNumber</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>aa3fef5652abc22856bfc12f2208e4082</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceDuration</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ae41e1f8737379af7f4e68884fc939ecc</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlacementMode</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ab952f82f16dbe1e6e0671f94cad12a5b</anchor>
      <arglist>(PLACEMENTMODE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverTuplet</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a6a368fe19826947754b27458de9ed834</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidStaff</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>aa664fddbc77d1b48b9de91980baef167</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllowHorizontalDrag</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a99f8f47308a8b0205c740958ea1e3ddc</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseBottomNote</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a2f872b5dfd5c5d2f36b187ff6fda346e</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberStyle</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ac53f667ab29741ef32d91abfb5178119</anchor>
      <arglist>(NUMBERSTYLE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeStyle</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a2fbd044efc1a4bae4cd120e5debf72c5</anchor>
      <arglist>(SHAPESTYLE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakSlurBracket</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a980d2ace1f76b25aeffceadd140d2989</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBracketMode</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a648c4a52a341edb0c072b60f060c8670</anchor>
      <arglist>(BRACKETMODE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlwaysFlat</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ab642cad73b55cb655d26cb64254ffdca</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBracketFullDuration</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a34b5bdee466e5cc192ddb0cbf60c704d</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOffset</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a9b89e434995c916e8d06569a4174ffe9</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalOffset</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a8610d512caaa3d1b3275df31f8b9ed83</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCenterUsingDuration</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ac22231adcb444cf7b5f7fbf0600ec8e3</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIgnoreNumberOffset</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>aae9af1f0a2299463cc50878cb785b65b</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalShapeOffset</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>aa7e2a878383fd4c1b9047a1b55c6bf5c</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalShapeOffset</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a2b992e4fbe57af6e0c9e663953b3cb5a</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMatchHookLengths</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a89c8716158a10a3fe9d244b3d773ea6e</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftHookLength</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ac5420edfee0218f04f4d350d45e0a513</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftExtension</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a458fb558f6b4a7bd8d189fd0ae275468</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightHookLength</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>af0a53b1e8315817716e1b1dca9a7a808</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightExtension</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ac8808f4dfdce45bf7e07b073315cfe37</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlopeAdjust</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>add8a7cfe82c9f10a9bbbf7c83809d1a9</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVisible</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>ae959298af0d73828231c25265075b9d0</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_tuplet.html</anchorfile>
      <anchor>a3dc66f841c4c338f905a1c83900692fc</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTupletPrefs</name>
    <filename>class_f_c_tuplet_prefs.html</filename>
    <base>__FCPrefsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a9770988c7b6574fd23ca198b0f9feb6f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>ae1fb17aab52c0ecbdcf7258303cf7594</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a186f98e0e9e773bd9c03cc69681baaec</anchor>
      <arglist>(twobyte prefsnumber=1) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a772f32d19d9bd31f975a7b5adef363f7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChangeTuplet</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>abe81c6868b2dc3547350bed7f68779d8</anchor>
      <arglist>(FCTuplet *pTuplet, bool changeposition=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CopyFromTuplet</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a8b189e4430567b655cbe607e69537ed9</anchor>
      <arglist>(FCTuplet *pTuplet, bool changeposition=true)</arglist>
    </member>
    <member kind="function">
      <type>FCTuplet::PLACEMENTMODE</type>
      <name>GetPlacementMode</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a7dfff0b9a9f749b3876ca789b07ad4ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEngraverTuplet</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>af02e517314130d881765460b7d1b3341</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAvoidStaff</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>aecdbbac71df8f0b56b8834e60d0ef38b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAllowHorizontalDrag</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>aea443a333f7938799ab38a3f79ad990f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseBottomNote</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>aaa415854f3ff7fd8543ad5d957733a22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCTuplet::NUMBERSTYLE</type>
      <name>GetNumberStyle</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a7babde7fd68f17139d7e3c7e5f379413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCTuplet::SHAPESTYLE</type>
      <name>GetShapeStyle</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>ac842db92c3ccee1dffc51260645e990d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBreakSlurBracket</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>abee4be6664ecc63aa305cb21bc1de3e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FCTuplet::BRACKETMODE</type>
      <name>GetBracketMode</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>ad4ad58716da1388a5e241f61465299ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAlwaysFlat</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a796904774d7ad36b8f16668401b64ff8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBracketFullDuration</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a41ec302b3762ea632127295c470b933a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalOffset</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>ad4a943ec45a3703cdf7cc83b5bcb3697</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalOffset</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a2c3564fd3a1a4fffa17fac4ca655db11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCenterUsingDuration</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a8c8a2f5678770606062ef4a0e2f61371</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIgnoreNumberOffset</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a3fd286fe0f4136108f9ca155cc9b2993</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetHorizontalShapeOffset</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a5e75631c7e6cbe99b0eeb94211290d0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetVerticalShapeOffset</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a7d10df5c0179794354964885346c63a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetMatchHookLengths</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>aac42ca801b127a45b498e40ba5a97ada</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLeftHookLength</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>af05a9964ff117322b22e4365b0e8057c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetLeftExtension</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a1683df139a0eabc3b1e66a190832dc71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRightHookLength</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a6cfa7ba6aed53499adf3f28e1a69bd67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetRightExtension</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>ac976bc2e1d082dde8a1fb6ce2bb8757f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetSlopeAdjust</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a6712e31e7a977cb2e6a322ea7f48f6c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetNumberOffsetUpstem</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>aee997b0fc6fb40bb5f720469aad381ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetNumberOffsetDownstem</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a31be617a11ae25a574850bbb0321e68f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Efix16</type>
      <name>GetBracketThickness</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>abbcd523e34f17cb0f26c2239823f98e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetMaxSlope</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a60e79ef6f885ced4f76502b563f15cd0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlacementMode</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a81528c737505c1174c65eadf702cd008</anchor>
      <arglist>(FCTuplet::PLACEMENTMODE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEngraverTuplet</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a75987dd1ab23bbdc619307f727f4ea4f</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAvoidStaff</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a6fe4df249e043963d666bae7dc5644f4</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllowHorizontalDrag</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a8bd86fba504005db5c92972f75c12aac</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseBottomNote</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a15299b3d1afde4e87ff9c969267c31e4</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberStyle</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>afbdf67d65f0eae5582ee50089f818589</anchor>
      <arglist>(FCTuplet::NUMBERSTYLE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShapeStyle</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a7a28506edd4a0946b2081b032539cc24</anchor>
      <arglist>(FCTuplet::SHAPESTYLE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBreakSlurBracket</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a20ba4a018ee4553a31e7eb1cf73ac10d</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBracketMode</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a9d40e527825d171447e5f0e4e49d048d</anchor>
      <arglist>(FCTuplet::BRACKETMODE value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlwaysFlat</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a52445f32696ffdd3247a550dfe885c73</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBracketFullDuration</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>af075b05b271c77cea6b7a98364b1d36e</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalOffset</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a10b63d56facf0a555c1b378a5d3ff343</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalOffset</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>aa4274f6bdc31a69d3f1cd3de6f90be20</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCenterUsingDuration</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a5ee3d89daedf422e69bf74d9f8347fd0</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIgnoreNumberOffset</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a2703935f6e099438dd0260ccd95e32aa</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHorizontalShapeOffset</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>adcd2760350f62647209382a5e181d692</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerticalShapeOffset</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>afd4462c52312eac679363bb3415b9bac</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMatchHookLengths</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a61ec22c6b15d2e4efbf710ffb4f7bc78</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftHookLength</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>adf437a6ad1c8253c3c6be40d5d771700</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLeftExtension</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>adfcfe80be2b395b09ba404b106ec69d1</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightHookLength</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>aec5135881cbc32f6de4bba10e7ac104d</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRightExtension</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a52c7f17bb50f34e5d0ad9b05262dec3e</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSlopeAdjust</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a5ab25a2adcb96e36835a2f140a5ce885</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberOffsetUpstem</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a17498e7c9df6414d99a2c0641916afa0</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberOffsetDownstem</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>acacac52bb7ae284bf5888cd3bc08b5bf</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBracketThickness</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a0df88bc081d3bc8367430f6728f1db7e</anchor>
      <arglist>(Efix16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxSlope</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>a90dd3c5469456d6ff92e169fd8d1522a</anchor>
      <arglist>(twobyte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_tuplet_prefs.html</anchorfile>
      <anchor>abf6cedb23cfe2cec590e39bcc51e4512</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCTuplets</name>
    <filename>class_f_c_tuplets.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_tuplets.html</anchorfile>
      <anchor>a0b57360feefbb609333a89373594f680</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCTuplets</name>
      <anchorfile>class_f_c_tuplets.html</anchorfile>
      <anchor>a937768f6853592c12c26d3cce16b64ae</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCTuplet *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_tuplets.html</anchorfile>
      <anchor>a29798e499d55d445eb7cc6edd60ffae6</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCUI</name>
    <filename>class_f_c_u_i.html</filename>
    <base>__FCBase</base>
    <member kind="enumeration">
      <type></type>
      <name>ALERT_RETURNS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a86a2c8755b357a6cc0ac10df3de2faf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OKRETURN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a86a2c8755b357a6cc0ac10df3de2faf4aed3bb41daebefe9235597c118fd5b07d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CANCELRETURN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a86a2c8755b357a6cc0ac10df3de2faf4af61b13dc08f14198ce0179003c3d8d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YESRETURN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a86a2c8755b357a6cc0ac10df3de2faf4a39c0e6abcd55c9d98ebfe22be1b826e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NORETURN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a86a2c8755b357a6cc0ac10df3de2faf4aa04b813da4c7b704cfd5123a29af6218</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWNRETURN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a86a2c8755b357a6cc0ac10df3de2faf4a27ed33e8543266a67e6609a18cce9e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MENU_COMMANDS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_NULL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a477506015f963361d72ab09d73dcf6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_NOTESPACING</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a915f274736b57de0b7affa26f0ca2d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_BEATSPACING</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ae15cacd0c32dcec0b7839fc64fe87bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_TIMESIGSPACING</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a30ed463eb790f1e57917eafdea0a6c69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_RESPELLNOTES</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a468c51c76b9de115e5f8c0f1a4f91360</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_MOVETOPREVSYSTEM</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9afc877198e9d6d64182358765ab08842b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_MOVETONEXTSYSTEM</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a2c421b8244982cdbf7e5b7c81848e774</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_LOCKSYSTEMS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a5bf4b27ee0668bd2a3e57f5c1a3a2291</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_UNLOCKSYSTEMS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a8ff2882e58758e466cc1059a227dd3a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_CHECKTIES</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a50326ce699489799d4ad08dd61a9c233</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_FILLWITHRESTS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a25d3b1c0540fc55f9852ddf3b3c57825</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_REMOVEMANUALSLURADJUSTMENTS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9acf8481029d4f05e9dd07df482cdd24f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_RESETALLGROUPSANDBRACKETS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9aba5b46ecd5aa74dde1643043db402853</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STEMDIRECTIONUP</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a77bd43ec7c8da365ef3c0533941890e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STEMDIRECTIONDOWN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a6aa0072e0d235867c6cae831f8e4d2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STEMDIRECTIONDEFAULT</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a96c428b48debc160bf1dab871da718b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_CLEARALLITEMS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a1aedfb9866fb053bd7366b1cc3602b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_EHSPELLING_DEFAULT</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a79d253413015b72a68814ab436e1b0b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_EHSPELLING_FAVORSHARPS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ab69ab83069e9acba45a860434cd82333</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_EHSPELLING_FAVORFLATS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a5473cc0e4e20d1c8a687753e5d9a79b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_EHSPELLING_USESPELLINGTABLES</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a10ca7864fc8a9b3fad71d637188f0ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_REBEAM</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a296ff678c214a3d49a9a26a33861aa65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_VIEWSCROLLVIEW</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9af68c1a86a08d3c4702b316c104fed7f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_VIEWPAGEVIEW</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a28213880a10d9875e626241a41b6c5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_VIEWSTUDIOVIEW</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a3f9a3b86125ac99bb29d1dfe96a33c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_REDRAWSCREEN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a8771975a5dab9b842ea789e266b2add4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_EDITSCORE</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9aad7e913a37d62dd8c6153d25688ae96f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSETALLSTAVES</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a11d3f8b87258d30cf2bcf92c4d660c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET1</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a93efc4382515e8e967ac5939b543bbf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET2</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9acf699913e9706ce6d97daced6cbb8a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET3</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9aab4a0b985b6f1c2d6b08f75cf0ec2f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET4</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a4eaa1490ed4b60d1a5e29a2d9dbbb731</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET5</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9aeef1a1c9c2522bedb90ef050f4421601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET6</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ae810ba55d7e0f3ed154005a063b429c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET7</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a501de3b6543ca0be49d7ef661975fcf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET8</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a7e92b70b33196fa0aacd580171db7f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_RETRANSCRIBE</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a508d86843cc292c302bf0a4045fc4b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_CREATEMMRESTS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a08c1afa10e54e574b7856d7a3cb270ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_BREAKMMRESTS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a8e478682127e4b345ac1efa579c2649e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_SELECTIONTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a90294530c453d423ee1a04ac3f0d4e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a86194f960743e3428bd05ea4876b4470</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_MEASURETOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a915d2e86f772e00175954c994dd28e8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_KEYSIGTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a7b7b723e7f4bfae492c8aedb823ef2ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_TIMESIGTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a0dd2d076246ac178d1bcf9ad2f709763</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_CLEFTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a4dbf76fd2fe92996879a893e298d7894</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_REPEATTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a3753d5656dbfca5e969636e9da77267f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_ARTICULATIONTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ac502eb2d52e7624b81688e0280b5cee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_CHORDTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a146ed364c7d54fbc85802d8fb0a2cb6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_EXPRESSIONTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a598499041ef34393c896d9d6f385eb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_GRAPHICSTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9adef440cb2c47c601d415eb8a612379d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_HANDGRABBERTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a3ace81c905c21af1a3685054fc40648d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_HYPERSCRIBETOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a2c2a0b1ac28ad4a3d2cdc97a1a39bbcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_LYRICSTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ad8c4022b16a285e90af3a938eb9552a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_MIDITOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a57c4bd1159a4f77774a93edaddc54a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_MIRRORTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ad8ff2f36a24e27e44cf0bad5e4fe9cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_NOTEMOVERTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ad1131b60f6427663ef7dc61a386464e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_OSSIATOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a15cc3ddf2d50e56bb5154fecea0c9919</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_PAGELAYOUTTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a3745638c3814c5464af0c71cb6cb876c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_RESIZETOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a92401373f6e8dbecce116c94f586aa89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_SPEEDYENTRYTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ad795ca38c20d2d248056fcf070aedc0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_TEMPOTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a1087b4814187d3591d48ab0c64d522fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_TEXTTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ae9b561e9150aa803aa5ad3814becc213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_TUPLETTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a6dc3358c07c9c7a1ec2391153b771a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_ZOOMTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a3c79b01fb66f0a579589f54efbf539ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OKRETURN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a86a2c8755b357a6cc0ac10df3de2faf4aed3bb41daebefe9235597c118fd5b07d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CANCELRETURN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a86a2c8755b357a6cc0ac10df3de2faf4af61b13dc08f14198ce0179003c3d8d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YESRETURN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a86a2c8755b357a6cc0ac10df3de2faf4a39c0e6abcd55c9d98ebfe22be1b826e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NORETURN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a86a2c8755b357a6cc0ac10df3de2faf4aa04b813da4c7b704cfd5123a29af6218</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWNRETURN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a86a2c8755b357a6cc0ac10df3de2faf4a27ed33e8543266a67e6609a18cce9e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_NULL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a477506015f963361d72ab09d73dcf6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_NOTESPACING</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a915f274736b57de0b7affa26f0ca2d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_BEATSPACING</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ae15cacd0c32dcec0b7839fc64fe87bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_TIMESIGSPACING</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a30ed463eb790f1e57917eafdea0a6c69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_RESPELLNOTES</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a468c51c76b9de115e5f8c0f1a4f91360</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_MOVETOPREVSYSTEM</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9afc877198e9d6d64182358765ab08842b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_MOVETONEXTSYSTEM</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a2c421b8244982cdbf7e5b7c81848e774</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_LOCKSYSTEMS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a5bf4b27ee0668bd2a3e57f5c1a3a2291</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_UNLOCKSYSTEMS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a8ff2882e58758e466cc1059a227dd3a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_CHECKTIES</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a50326ce699489799d4ad08dd61a9c233</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_FILLWITHRESTS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a25d3b1c0540fc55f9852ddf3b3c57825</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_REMOVEMANUALSLURADJUSTMENTS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9acf8481029d4f05e9dd07df482cdd24f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_RESETALLGROUPSANDBRACKETS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9aba5b46ecd5aa74dde1643043db402853</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STEMDIRECTIONUP</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a77bd43ec7c8da365ef3c0533941890e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STEMDIRECTIONDOWN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a6aa0072e0d235867c6cae831f8e4d2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STEMDIRECTIONDEFAULT</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a96c428b48debc160bf1dab871da718b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_CLEARALLITEMS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a1aedfb9866fb053bd7366b1cc3602b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_EHSPELLING_DEFAULT</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a79d253413015b72a68814ab436e1b0b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_EHSPELLING_FAVORSHARPS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ab69ab83069e9acba45a860434cd82333</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_EHSPELLING_FAVORFLATS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a5473cc0e4e20d1c8a687753e5d9a79b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_EHSPELLING_USESPELLINGTABLES</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a10ca7864fc8a9b3fad71d637188f0ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_REBEAM</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a296ff678c214a3d49a9a26a33861aa65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_VIEWSCROLLVIEW</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9af68c1a86a08d3c4702b316c104fed7f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_VIEWPAGEVIEW</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a28213880a10d9875e626241a41b6c5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_VIEWSTUDIOVIEW</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a3f9a3b86125ac99bb29d1dfe96a33c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_REDRAWSCREEN</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a8771975a5dab9b842ea789e266b2add4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_EDITSCORE</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9aad7e913a37d62dd8c6153d25688ae96f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSETALLSTAVES</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a11d3f8b87258d30cf2bcf92c4d660c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET1</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a93efc4382515e8e967ac5939b543bbf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET2</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9acf699913e9706ce6d97daced6cbb8a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET3</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9aab4a0b985b6f1c2d6b08f75cf0ec2f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET4</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a4eaa1490ed4b60d1a5e29a2d9dbbb731</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET5</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9aeef1a1c9c2522bedb90ef050f4421601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET6</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ae810ba55d7e0f3ed154005a063b429c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET7</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a501de3b6543ca0be49d7ef661975fcf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFSET8</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a7e92b70b33196fa0aacd580171db7f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_RETRANSCRIBE</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a508d86843cc292c302bf0a4045fc4b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_CREATEMMRESTS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a08c1afa10e54e574b7856d7a3cb270ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_BREAKMMRESTS</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a8e478682127e4b345ac1efa579c2649e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_SELECTIONTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a90294530c453d423ee1a04ac3f0d4e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_STAFFTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a86194f960743e3428bd05ea4876b4470</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_MEASURETOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a915d2e86f772e00175954c994dd28e8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_KEYSIGTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a7b7b723e7f4bfae492c8aedb823ef2ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_TIMESIGTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a0dd2d076246ac178d1bcf9ad2f709763</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_CLEFTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a4dbf76fd2fe92996879a893e298d7894</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_REPEATTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a3753d5656dbfca5e969636e9da77267f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_ARTICULATIONTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ac502eb2d52e7624b81688e0280b5cee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_CHORDTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a146ed364c7d54fbc85802d8fb0a2cb6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_EXPRESSIONTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a598499041ef34393c896d9d6f385eb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_GRAPHICSTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9adef440cb2c47c601d415eb8a612379d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_HANDGRABBERTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a3ace81c905c21af1a3685054fc40648d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_HYPERSCRIBETOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a2c2a0b1ac28ad4a3d2cdc97a1a39bbcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_LYRICSTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ad8c4022b16a285e90af3a938eb9552a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_MIDITOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a57c4bd1159a4f77774a93edaddc54a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_MIRRORTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ad8ff2f36a24e27e44cf0bad5e4fe9cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_NOTEMOVERTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ad1131b60f6427663ef7dc61a386464e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_OSSIATOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a15cc3ddf2d50e56bb5154fecea0c9919</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_PAGELAYOUTTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a3745638c3814c5464af0c71cb6cb876c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_RESIZETOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a92401373f6e8dbecce116c94f586aa89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_SPEEDYENTRYTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ad795ca38c20d2d248056fcf070aedc0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_TEMPOTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a1087b4814187d3591d48ab0c64d522fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_TEXTTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9ae9b561e9150aa803aa5ad3814becc213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_TUPLETTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a6dc3358c07c9c7a1ec2391153b771a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENUCMD_ZOOMTOOL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>acd5450fb0acd275cc51d596bfb0366b9a3c79b01fb66f0a579589f54efbf539ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCUI</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a3b8c3950384ee219bdc68687a8a13dbf</anchor>
      <arglist>(EWND parent)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a0d93d155e9643eef2388969f91f1e4df</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AlertErrorCString</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a0293869debf4a3bc4371316aafa66210</anchor>
      <arglist>(const char *pszMessage, const char *pszTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AlertErrorUTF8</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a2b0e68430c88ffdee70611386052e07c</anchor>
      <arglist>(const char *pszMessage, const char *pszTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AlertError</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a1375605c9cc7fedeec532a062fa6aab4</anchor>
      <arglist>(FCString *pMessage, FCString *pTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ALERT_RETURNS</type>
      <name>AlertYesNoCString</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>ac55aa739da514ffb9f6c3ffb7b3a839e</anchor>
      <arglist>(const char *pszMessage, const char *pszTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ALERT_RETURNS</type>
      <name>AlertYesNoUTF8</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a2428d7cd48faa3cda24c5e26a19a6c9a</anchor>
      <arglist>(const char *pszMessage, const char *pszTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ALERT_RETURNS</type>
      <name>AlertYesNo</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>aaa61a2b86fa3e20b028fd1ea64288344</anchor>
      <arglist>(FCString *pMessage, FCString *pTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCUI::ALERT_RETURNS</type>
      <name>AlertYesNoCancelUTF8</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a53ecc6a08c748de21245eb1be128cf84</anchor>
      <arglist>(const char *pszMessage, const char *pszTitle)</arglist>
    </member>
    <member kind="function">
      <type>ALERT_RETURNS</type>
      <name>AlertYesNoCancel</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>adc3a40726d8f5e34a948b7cbbff96b17</anchor>
      <arglist>(FCString *pMessage, FCString *pTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ALERT_RETURNS</type>
      <name>AlertOkCancelCString</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a78ecb51cb8d27ff0731c65ca850222a6</anchor>
      <arglist>(const char *pszMessage, const char *pszTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ALERT_RETURNS</type>
      <name>AlertOkCancelUTF8</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a423c62d01365d69d28493aa54934e6e8</anchor>
      <arglist>(const char *pszMessage, const char *pszTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ALERT_RETURNS</type>
      <name>AlertOkCancel</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a40fc8d704e8048196a0c5ef6feb35a80</anchor>
      <arglist>(FCString *pMessage, FCString *pTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AlertNeutralCString</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>ae1c9883af7471b3fd2c2a6d6c0c87484</anchor>
      <arglist>(const char *pszMessage, const char *pszTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AlertNeutralUTF8</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>ae01f7996b6fba41e19c9fc22f144da4a</anchor>
      <arglist>(const char *pszMessage, const char *pszTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AlertNeutral</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a532732f74cb6738fb4a8ae694bda00b1</anchor>
      <arglist>(FCString *pMessage, FCString *pTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AlertInfoCString</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>aa6b1ac562d6d9da43330b88070b9ad33</anchor>
      <arglist>(const char *pszMessage, const char *pszTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AlertInfoUTF8</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a1ccc976679241e1210fb29166950caca</anchor>
      <arglist>(const char *pszMessage, const char *pszTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AlertInfo</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a3731f068b436e7f23b15c74e053b00fe</anchor>
      <arglist>(FCString *pMessage, FCString *pTitle=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MenuCommand</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a336e6328a0c420c5e680a447820df470</anchor>
      <arglist>(MENU_COMMANDS menucmd)</arglist>
    </member>
    <member kind="function">
      <type>EMENUID</type>
      <name>GetOSMenuCommandFromItemText</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a5213a34f8a6e4a91aa6791ad0e43cad4</anchor>
      <arglist>(const char *pszTopMenu, const char *pszItemText)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExecuteOSMenuCommand</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>afd4b22c9dcc626f02feb5e85484610c6</anchor>
      <arglist>(EMENUID osmenucmd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MenuPositionCommand</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a83b7417837915916254475ad27030505</anchor>
      <arglist>(int mainmenuidx, int dropdownidx, int submenuidx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RedrawDocument</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a38184a0ad5c2195319a35ba1270346ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPageView</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>ab819422f4a10f1b4b64e8852c255b7af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPartView</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>af9e691e32f8aa6e172ad248bebb5aa9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetDecimalSeparator</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a4f79005d803ecf8bb47b63214140633c</anchor>
      <arglist>(FCString *pString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUseIsFontAvailableAPI</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>aa13212aa397e4cd00f54984b98e70d1b</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseIsFontAvailableAPI</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>aaf38d011af23bf09aa58fc7e0996b3f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOnWindows</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a8fedcc5fd2d8e537e10d664d0242150d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOnMac</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a8f44d5bdf5acf16992407f2005749109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TextToClipboard</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a1a87597779f2130f9209c4cc357a2bdf</anchor>
      <arglist>(const char *pszText)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TextToClipboardUTF8</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>ac31f85aa8cf9f40a9d11582ffd845c14</anchor>
      <arglist>(const char *pszText)</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetCurrentPage</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>ab9d40b6b755f13d76f46de8911c4916e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetCurrentMeasure</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>add37d6eb6ad6c8c3882bdc16981045b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>twobyte</type>
      <name>GetZoomLevel</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>aa47c8497c9a6b11f624d34f68d803f72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaxLayers</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a6a705e6283705499c1c95da7a4259044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EWND</type>
      <name>GetDocumentWindow</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>aa1c6eba90921a15f65cd7b4107a34d11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ActivateDocumentWindow</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>ab3a243689818fd5467c75e55bbfa7f7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EWND</type>
      <name>GetActiveWindow</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>afe1776ff5c8cb98057c764ee31fb4842</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ActivateWindow</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a45b174677ecc01f00c4ed807597aa4e4</anchor>
      <arglist>(EWND hwnd)</arglist>
    </member>
    <member kind="function">
      <type>FXWND</type>
      <name>GetParentWindow</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a81674d89e418f851b52d19eecc1ddaad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MoveToMeasure</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a4fd5ee9154ebe4df73326d5dfbe9c650</anchor>
      <arglist>(int measure, int staffno=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Beep</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a621675bbcfa8a2d522efdce6cfd9e218</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetScreenWidth</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a7214711ddbf76319f3c0314f00920eb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetScreenHeight</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a6738b3797d44e6326d7c53d4bea6f128</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>DisplayTextExpressionDialog</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>ad732dd70640d13950a864132534be78d</anchor>
      <arglist>(CMPER cmperinit=0)</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>DisplayArticulationDialog</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a583d269da50ee33b9b5e1d4fee891f6a</anchor>
      <arglist>(CMPER cmperinit=0)</arglist>
    </member>
    <member kind="function">
      <type>CMPER</type>
      <name>DisplayShapeDialog</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>aedd93a5534dfce727e59a4b25d8be121</anchor>
      <arglist>(CMPER cmperinit=0)</arglist>
    </member>
    <member kind="function">
      <type>eUniChar32</type>
      <name>DisplaySymbolDialog</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a37302a54705ad30e2cf8ea5fe4cfe813</anchor>
      <arglist>(FCFontInfo *pFontInfo, eUniChar32 symbolinit=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFontAvailable</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>ab27513f9bbba2692a7381d88a377e371</anchor>
      <arglist>(FCString *pFontName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DisplayWebURL</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a3e0501cad4093647ec0e37238607903d</anchor>
      <arglist>(FCString *pURLString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DisplayShellFolder</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a8229beda98d3baec9301e51ede3e8686</anchor>
      <arglist>(FCString *pFolderString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartPerformanceTimer</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>aab3cfc42e7a205ad55bf1491a8707eb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopPerformanceTimer</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a4b1550b3fdbfc0df17a859bfe29a141c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ReturnPerformanceTiming</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>adb692c0f354aa1c626530c183fcb0fdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugDump</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>a53837b15dadde803e536330f4313ade6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetHiResTimer</name>
      <anchorfile>class_f_c_u_i.html</anchorfile>
      <anchor>ae711bc53fe3eec3643dde434c752c3e8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCUndoBlock</name>
    <filename>class_f_c_undo_block.html</filename>
    <base>__FCBase</base>
    <member kind="function">
      <type>bool</type>
      <name>Execute</name>
      <anchorfile>class_f_c_undo_block.html</anchorfile>
      <anchor>a03bc5f540d6a56b3d1b494d0bd333127</anchor>
      <arglist>(__FCUndoBlockHandler *pHandler, FCString *pUndoString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddSession</name>
      <anchorfile>class_f_c_undo_block.html</anchorfile>
      <anchor>a2a1b2ee7f603e25ae8478155161bc83d</anchor>
      <arglist>(FCString *pUndoString, bool storecurrentblock)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCVerseLyricsText</name>
    <filename>class_f_c_verse_lyrics_text.html</filename>
    <base>__FCLyricsBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_verse_lyrics_text.html</anchorfile>
      <anchor>ad2ba95a8bc88f28a12667f6f82c5d45a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_verse_lyrics_text.html</anchorfile>
      <anchor>a799902558dc12871959d612934c8f87b</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCVerseSyllable</name>
    <filename>class_f_c_verse_syllable.html</filename>
    <base>FCSyllableBase</base>
    <member kind="function">
      <type>EXTAG</type>
      <name>Tag</name>
      <anchorfile>class_f_c_verse_syllable.html</anchorfile>
      <anchor>a71b31474eb5b22c7c8ab1ba7be8e8377</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_verse_syllable.html</anchorfile>
      <anchor>a3c9234afa9a62d7299ca494811c53fe9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const PDKFRAMEWORK_CLASSID</type>
      <name>GetClassID</name>
      <anchorfile>class_f_c_verse_syllable.html</anchorfile>
      <anchor>abc7cb8addc2a6f55fe1602b327e53499</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsVerse</name>
      <anchorfile>class_f_c_verse_syllable.html</anchorfile>
      <anchor>a8f7c87072ad2ee1f9369cd601d17b0a2</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FCVerseSyllables</name>
    <filename>class_f_c_verse_syllables.html</filename>
    <base>__FCCollectionEntryDetail</base>
    <member kind="function">
      <type>const char *</type>
      <name>ClassName</name>
      <anchorfile>class_f_c_verse_syllables.html</anchorfile>
      <anchor>a0846b8c105d59c685680ea8bd074257f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCVerseSyllables</name>
      <anchorfile>class_f_c_verse_syllables.html</anchorfile>
      <anchor>a6da5b7d4649dcbe462aa7f4e73088bd1</anchor>
      <arglist>(FCNoteEntry *pConnectEntry=NULL)</arglist>
    </member>
    <member kind="function">
      <type>FCVerseSyllable *</type>
      <name>GetItemAt</name>
      <anchorfile>class_f_c_verse_syllables.html</anchorfile>
      <anchor>af84061a58ab0ce8f99e513e169e18ef4</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>data_classes</name>
    <title>Data Classes</title>
    <filename>group__data__classes.html</filename>
    <class kind="class">FCMidiExpression</class>
    <class kind="class">FCSeparateMeasureNumber</class>
    <class kind="class">FCChord</class>
    <class kind="class">FCGroup</class>
    <class kind="class">FCBaseline</class>
    <class kind="class">FCNoteheadMod</class>
    <class kind="class">FCDotMod</class>
    <class kind="class">FCCrossStaffMod</class>
    <class kind="class">FCSecondaryBeamBreakMod</class>
    <class kind="class">FCStemMod</class>
    <class kind="class">FCArticulation</class>
    <class kind="class">FCTuplet</class>
    <class kind="class">FCSyllableBase</class>
    <class kind="class">FCVerseSyllable</class>
    <class kind="class">FCChorusSyllable</class>
    <class kind="class">FCSectionSyllable</class>
    <class kind="class">FCSyllableEntryMod</class>
    <class kind="class">FCEntryAlterMod</class>
    <class kind="class">FCAccidentalMod</class>
    <class kind="class">FCPercussionNoteMod</class>
    <class kind="class">FCCustomStemMod</class>
    <class kind="class">FCBeamMod</class>
    <class kind="class">FCPerformanceMod</class>
    <class kind="class">FCTieMod</class>
    <class kind="class">FCBrokenBeamMod</class>
    <class kind="class">FCTablatureNoteMod</class>
    <class kind="class">FCClefDef</class>
    <class kind="class">FCKeySignature</class>
    <class kind="class">FCNote</class>
    <class kind="class">FCNotePitch</class>
    <class kind="class">FCNoteEntry</class>
    <class kind="class">FCNoteEntryCell</class>
    <class kind="class">FCShapeDef</class>
    <class kind="class">FCPage</class>
    <class kind="class">FCStaffSystem</class>
    <class kind="class">FCMeasure</class>
    <class kind="class">FCMeasureNumberRegion</class>
    <class kind="class">FCStaff</class>
    <class kind="class">FCCurrentStaffSpec</class>
    <class kind="class">FCArticulationDef</class>
    <class kind="class">FCCategoryDef</class>
    <class kind="class">FCFreezeSystem</class>
    <class kind="class">FCTextExpressionDef</class>
    <class kind="class">FCShapeExpressionDef</class>
    <class kind="class">FCTextBlock</class>
    <class kind="class">FCPageText</class>
    <class kind="class">FCSeparatePlacement</class>
    <class kind="class">FCExpression</class>
    <class kind="class">FCStaffStyleDef</class>
    <class kind="class">FCStaffStyleAssign</class>
    <class kind="class">FCMultiMeasureRest</class>
    <class kind="class">FCMultiStaffInstrument</class>
    <class kind="class">FCAllotment</class>
    <class kind="class">FCTextRepeatDef</class>
    <class kind="class">FCTextRepeat</class>
    <class kind="class">FCExecutableShapeDef</class>
    <class kind="class">FCChordSuffixElement</class>
    <class kind="class">FCFretboardStyleDef</class>
    <class kind="class">FCEndingRepeat</class>
    <class kind="class">FCBackwardRepeat</class>
    <class kind="class">FCBeatChartElement</class>
    <class kind="class">FCTempoElement</class>
    <class kind="class">FCInstrumentDef</class>
    <class kind="class">FCInstrumentPlaybackData</class>
    <class kind="class">FCPercussionLayoutNote</class>
    <class kind="class">FCFretInstrumentDef</class>
    <class kind="class">FCCellClefChange</class>
    <class kind="class">FCMetatoolAssignment</class>
    <class kind="class">FCSmartShapeMeasureMark</class>
    <class kind="class">FCSmartShapeEntryMark</class>
    <class kind="class">FCSmartShape</class>
    <class kind="class">FCCustomSmartLineDef</class>
    <class kind="class">FCRawText</class>
    <class kind="class">FCVerseLyricsText</class>
    <class kind="class">FCSectionLyricsText</class>
    <class kind="class">FCChorusLyricsText</class>
    <class kind="class">FCFileInfoText</class>
    <class kind="class">FCTimeSignature</class>
  </compound>
  <compound kind="group">
    <name>text_classes</name>
    <title>Text Data Classes</title>
    <filename>group__text__classes.html</filename>
    <class kind="class">FCRawText</class>
    <class kind="class">FCVerseLyricsText</class>
    <class kind="class">FCSectionLyricsText</class>
    <class kind="class">FCChorusLyricsText</class>
    <class kind="class">FCFileInfoText</class>
  </compound>
  <compound kind="group">
    <name>data_collections</name>
    <title>Data Collection Classes</title>
    <filename>group__data__collections.html</filename>
    <class kind="class">FCSettingsPairs</class>
    <class kind="class">FCStrings</class>
    <class kind="class">FCSeparateMeasureNumbers</class>
    <class kind="class">FCCellGraphics</class>
    <class kind="class">FCCellTexts</class>
    <class kind="class">FCCellFrameHolds</class>
    <class kind="class">FCMidiExpressions</class>
    <class kind="class">FCChords</class>
    <class kind="class">FCGroups</class>
    <class kind="class">FCBaselines</class>
    <class kind="class">FCArticulations</class>
    <class kind="class">FCPrimaryBeamMods</class>
    <class kind="class">FCSecondaryBeamMods</class>
    <class kind="class">FCTuplets</class>
    <class kind="class">FCVerseSyllables</class>
    <class kind="class">FCChorusSyllables</class>
    <class kind="class">FCSectionSyllables</class>
    <class kind="class">FCNoteheadMods</class>
    <class kind="class">FCAccidentalMods</class>
    <class kind="class">FCPercussionNoteMods</class>
    <class kind="class">FCTablatureNoteMods</class>
    <class kind="class">FCStartTieMods</class>
    <class kind="class">FCEndTieMods</class>
    <class kind="class">FCDotMods</class>
    <class kind="class">FCCrossStaffMods</class>
    <class kind="class">FCPerformanceMods</class>
    <class kind="class">FCClefDefs</class>
    <class kind="class">FCNoteEntries</class>
    <class kind="class">FCStaffList</class>
    <class kind="class">FCPages</class>
    <class kind="class">FCStaffSystems</class>
    <class kind="class">FCMeasures</class>
    <class kind="class">FCStaves</class>
    <class kind="class">FCMeasureNumberRegions</class>
    <class kind="class">FCArticulationDefs</class>
    <class kind="class">FCSystemStaves</class>
    <class kind="class">FCCategoryDefs</class>
    <class kind="class">FCTextExpressionDefs</class>
    <class kind="class">FCShapeExpressionDefs</class>
    <class kind="class">FCExpressions</class>
    <class kind="class">FCPageTexts</class>
    <class kind="class">FCTextBlocks</class>
    <class kind="class">FCStaffStyleDefs</class>
    <class kind="class">FCStaffStyleAssigns</class>
    <class kind="class">FCMultiMeasureRests</class>
    <class kind="class">FCFreezeSystems</class>
    <class kind="class">FCMultiStaffInstruments</class>
    <class kind="class">FCAllotments</class>
    <class kind="class">FCPageGraphics</class>
    <class kind="class">FCTextRepeatDefs</class>
    <class kind="class">FCFretInstrumentDefs</class>
    <class kind="class">FCTextRepeats</class>
    <class kind="class">FCExecutableShapeDefs</class>
    <class kind="class">FCShapeDefs</class>
    <class kind="class">FCChordSuffixElements</class>
    <class kind="class">FCFretboardStyleDefs</class>
    <class kind="class">FCFretboardGroupDefs</class>
    <class kind="class">FCBeatChartElements</class>
    <class kind="class">FCTempoElements</class>
    <class kind="class">FCPercussionLayoutNotes</class>
    <class kind="class">FCInstrumentDefs</class>
    <class kind="class">FCStaffLists</class>
    <class kind="class">FCCellClefChanges</class>
    <class kind="class">FCGuides</class>
    <class kind="class">FCMetatoolAssignments</class>
    <class kind="class">FCSmartShapeMeasureMarks</class>
    <class kind="class">FCSmartShapeEntryMarks</class>
    <class kind="class">FCCustomSmartLineDefs</class>
    <class kind="class">FCSmartShapes</class>
  </compound>
  <compound kind="group">
    <name>data_browsers</name>
    <title>Data Browser Classes</title>
    <filename>group__data__browsers.html</filename>
    <class kind="class">FCBrowserPages</class>
    <class kind="class">FCBrowserStaffSystems</class>
    <class kind="class">FCBrowserMeasures</class>
    <class kind="class">FCBrowserStaves</class>
    <class kind="class">FCBrowserArticulationDefs</class>
  </compound>
  <compound kind="group">
    <name>utility_classes</name>
    <title>Utility Classes</title>
    <filename>group__utility__classes.html</filename>
    <class kind="class">FCCell</class>
    <class kind="class">FCCellPos</class>
    <class kind="class">FCCells</class>
    <class kind="class">FCIteratorHandler</class>
    <class kind="class">FCMusicRegion</class>
    <class kind="class">FCUI</class>
    <class kind="class">FCUndoBlock</class>
  </compound>
  <compound kind="group">
    <name>abstract_classes</name>
    <title>Abstract Classes</title>
    <filename>group__abstract__classes.html</filename>
    <class kind="class">__FCBase</class>
    <class kind="class">__FCBaseData</class>
    <class kind="class">__FCCollection</class>
    <class kind="class">__FCCollectionTinyXML</class>
    <class kind="class">__FCCollectionData</class>
    <class kind="class">__FCCollectionEntryDetail</class>
    <class kind="class">__FCCollectionInciOther</class>
    <class kind="class">__FCCollectionNoInciOther</class>
    <class kind="class">__FCCollectionGlobal</class>
    <class kind="class">__FCCollectionDetail</class>
    <class kind="class">__FCCollectionPrefs</class>
    <class kind="class">__FCCollectionNoInciDetail</class>
    <class kind="class">__FCBrowserBase</class>
    <class kind="class">__FCBrowserBaseData</class>
    <class kind="class">__FCBrowserNoInciOther</class>
    <class kind="class">__FCCellDetail</class>
    <class kind="class">__FCNoInciCellDetail</class>
    <class kind="class">__FCCollectionCellDetail</class>
    <class kind="class">__FCCollectionNoInciCellDetail</class>
    <class kind="class">__FCEntryDetail</class>
    <class kind="class">__FCEntryDetailNoteID</class>
    <class kind="class">__FCGlobals</class>
    <class kind="class">__FCIteratorBase</class>
    <class kind="class">__FCOther</class>
    <class kind="class">__FCNoInciOther</class>
    <class kind="class">__FCOtherText</class>
    <class kind="class">__FCLyricsBase</class>
    <class kind="class">__FCUndoBlockHandler</class>
  </compound>
  <compound kind="group">
    <name>lua_classes</name>
    <title>Lua Classes</title>
    <filename>group__lua__classes.html</filename>
    <class kind="class">__FCBaseData</class>
    <class kind="class">FCFontInfo</class>
    <class kind="class">FCString</class>
    <class kind="class">FCCellMetrics</class>
    <class kind="class">FCEntryMetrics</class>
    <class kind="class">FCTextMetrics</class>
    <class kind="class">FCNumber</class>
    <class kind="class">FCPoint</class>
    <class kind="class">FCPrintSettings</class>
    <class kind="class">FCFontDialog</class>
    <class kind="class">FCCell</class>
    <class kind="class">FCCellPos</class>
    <class kind="class">__FCCellDetail</class>
    <class kind="class">__FCNoInciCellDetail</class>
    <class kind="class">__FCCollectionCellDetail</class>
    <class kind="class">FCMidiExpression</class>
    <class kind="class">FCSeparateMeasureNumber</class>
    <class kind="class">FCCellFrameHold</class>
    <class kind="class">FCChord</class>
    <class kind="class">FCCellText</class>
    <class kind="class">__FCNoInciDetail</class>
    <class kind="class">FCGroup</class>
    <class kind="class">FCBaseline</class>
    <class kind="class">__FCFileDialogBase</class>
    <class kind="class">FCFileOpenDialog</class>
    <class kind="class">FCFileSaveAsDialog</class>
    <class kind="class">FCFolderBrowseDialog</class>
    <class kind="class">__FCUserWindow</class>
    <class kind="class">FCCtrlUpDown</class>
    <class kind="class">FCCtrlLine</class>
    <class kind="class">FCCtrlEdit</class>
    <class kind="class">FCCtrlPopup</class>
    <class kind="class">FCDataListRow</class>
    <class kind="class">FCCtrlDataList</class>
    <class kind="class">FCCtrlListBox</class>
    <class kind="class">FCTreeNode</class>
    <class kind="class">FCCtrlTree</class>
    <class kind="class">FCCtrlSwitcher</class>
    <class kind="class">FCCtrlCheckbox</class>
    <class kind="class">FCCtrlButton</class>
    <class kind="class">FCCtrlSlider</class>
    <class kind="class">FCResourceWindow</class>
    <class kind="class">FCCustomWindow</class>
    <class kind="class">FCDocument</class>
    <class kind="class">FCDocuments</class>
    <class kind="class">__FCEntryDetail</class>
    <class kind="class">__FCEntryDetailNoteID</class>
    <class kind="class">FCNoteheadMod</class>
    <class kind="class">FCDotMod</class>
    <class kind="class">FCCrossStaffMod</class>
    <class kind="class">FCSecondaryBeamBreakMod</class>
    <class kind="class">FCStemMod</class>
    <class kind="class">FCArticulation</class>
    <class kind="class">FCTuplet</class>
    <class kind="class">FCSyllableBase</class>
    <class kind="class">FCVerseSyllable</class>
    <class kind="class">FCChorusSyllable</class>
    <class kind="class">FCSectionSyllable</class>
    <class kind="class">FCSyllableEntryMod</class>
    <class kind="class">FCEntryAlterMod</class>
    <class kind="class">FCAccidentalMod</class>
    <class kind="class">FCPercussionNoteMod</class>
    <class kind="class">FCCustomStemMod</class>
    <class kind="class">FCBeamMod</class>
    <class kind="class">FCPerformanceMod</class>
    <class kind="class">FCTieMod</class>
    <class kind="class">FCBrokenBeamMod</class>
    <class kind="class">FCTablatureNoteMod</class>
    <class kind="class">__FCGlobals</class>
    <class kind="class">FCClefDef</class>
    <class kind="class">FCClefDefs</class>
    <class kind="class">__FCIteratorBase</class>
    <class kind="class">FCKeySignature</class>
    <class kind="class">FCNote</class>
    <class kind="class">FCNoteEntry</class>
    <class kind="class">FCNoteEntryCell</class>
    <class kind="class">FCNoteEntryLayer</class>
    <class kind="class">__FCNoInciOther</class>
    <class kind="class">FCShapeDefInstruction</class>
    <class kind="class">FCShapeDefInstructions</class>
    <class kind="class">FCShapeDef</class>
    <class kind="class">FCEnclosure</class>
    <class kind="class">FCPage</class>
    <class kind="class">FCStaffSystem</class>
    <class kind="class">FCMeasure</class>
    <class kind="class">FCMeasureNumberRegion</class>
    <class kind="class">FCSystemStaff</class>
    <class kind="class">FCStaffNamePosition</class>
    <class kind="class">FCStaff</class>
    <class kind="class">FCCurrentStaffSpec</class>
    <class kind="class">FCArticulationDef</class>
    <class kind="class">FCCategoryDef</class>
    <class kind="class">FCFreezeSystem</class>
    <class kind="class">FCTextExpressionDef</class>
    <class kind="class">FCShapeExpressionDef</class>
    <class kind="class">FCTextBlock</class>
    <class kind="class">FCPageText</class>
    <class kind="class">FCSeparatePlacement</class>
    <class kind="class">FCExpression</class>
    <class kind="class">FCStaffStyleDef</class>
    <class kind="class">FCStaffStyleAssign</class>
    <class kind="class">FCMultiMeasureRest</class>
    <class kind="class">FCMultiStaffInstrument</class>
    <class kind="class">FCPageGraphic</class>
    <class kind="class">FCTextRepeatDef</class>
    <class kind="class">FCTextRepeat</class>
    <class kind="class">FCChordSuffixElement</class>
    <class kind="class">FCFretboardStyleDef</class>
    <class kind="class">FCEndingRepeat</class>
    <class kind="class">FCBackwardRepeat</class>
    <class kind="class">FCBeatChartElement</class>
    <class kind="class">FCTempoElement</class>
    <class kind="class">FCPercussionMapNote</class>
    <class kind="class">FCPercussionMapNotes</class>
    <class kind="class">FCPercussionMapNotesLookup</class>
    <class kind="class">FCPercussionLayoutNotesLookup</class>
    <class kind="class">FCInstrumentDef</class>
    <class kind="class">FCLayerPlaybackData</class>
    <class kind="class">FCInstrumentPlaybackData</class>
    <class kind="class">FCPercussionLayoutNote</class>
    <class kind="class">FCStaffList</class>
    <class kind="class">FCFretInstrumentDef</class>
    <class kind="class">FCCellClefChange</class>
    <class kind="class">FCGuide</class>
    <class kind="class">FCMetatoolAssignment</class>
    <class kind="class">FCStaffSystemsLookup</class>
    <class kind="class">FCPart</class>
    <class kind="class">FCPartStaffVoicing</class>
    <class kind="class">FCPDFPage</class>
    <class kind="class">FCPDFWriter</class>
    <class kind="class">__FCPrefsBase</class>
    <class kind="class">FCPlaybackPrefs</class>
    <class kind="class">FCDistancePrefs</class>
    <class kind="class">FCSizePrefs</class>
    <class kind="class">FCMiscDocPrefs</class>
    <class kind="class">FCTupletPrefs</class>
    <class kind="class">FCPageFormatPrefs</class>
    <class kind="class">FCGeneralPrefs</class>
    <class kind="class">FCMusicSpacingPrefs</class>
    <class kind="class">FCFontPrefs</class>
    <class kind="class">FCMultiMeasureRestPrefs</class>
    <class kind="class">FCSmartShapePrefs</class>
    <class kind="class">FCTiePlacementPrefs</class>
    <class kind="class">FCTieContourPrefs</class>
    <class kind="class">FCTiePrefs</class>
    <class kind="class">FCLayerPrefs</class>
    <class kind="class">FCChordPrefs</class>
    <class kind="class">FCStaffNamePositionPrefs</class>
    <class kind="class">FCGroupNamePositionPrefs</class>
    <class kind="class">FCMusicCharacterPrefs</class>
    <class kind="class">FCPartScopePrefs</class>
    <class kind="class">FCLyricsPrefs</class>
    <class kind="class">FCStemConnectionTable</class>
    <class kind="class">FCRepeatPrefs</class>
    <class kind="class">FCGridsGuidesPrefs</class>
    <class kind="class">FCPianoBracePrefs</class>
    <class kind="class">FCMusicRegion</class>
    <class kind="class">FCSmartShapeMeasureMark</class>
    <class kind="class">FCSmartShapeEntryMark</class>
    <class kind="class">FCSmartShapeSegment</class>
    <class kind="class">FCSmartShapeCtrlPointAdjust</class>
    <class kind="class">FCSmartShape</class>
    <class kind="class">FCCustomSmartLineDef</class>
    <class kind="class">FCSmartShapeMeasureMarks</class>
    <class kind="class">FCCustomSmartLineDefs</class>
    <class kind="class">FCRawText</class>
    <class kind="class">FCVerseLyricsText</class>
    <class kind="class">FCSectionLyricsText</class>
    <class kind="class">FCChorusLyricsText</class>
    <class kind="class">FCFileInfoText</class>
    <class kind="class">FCTimeSignature</class>
    <class kind="class">FCUI</class>
    <class kind="class">FCCustomLuaWindow</class>
    <class kind="class">FCLuaIterator</class>
  </compound>
  <compound kind="group">
    <name>lua_collections</name>
    <title>Lua Collections</title>
    <filename>group__lua__collections.html</filename>
    <class kind="class">__FCCollection</class>
    <class kind="class">FCNumbers</class>
    <class kind="class">__FCCollectionEntryDetail</class>
    <class kind="class">__FCCollectionInciOther</class>
    <class kind="class">__FCCollectionNoInciOther</class>
    <class kind="class">FCStrings</class>
    <class kind="class">FCCells</class>
    <class kind="class">FCSeparateMeasureNumbers</class>
    <class kind="class">FCCellTexts</class>
    <class kind="class">FCMidiExpressions</class>
    <class kind="class">FCChords</class>
    <class kind="class">FCGroups</class>
    <class kind="class">FCBaselines</class>
    <class kind="class">FCArticulations</class>
    <class kind="class">FCPrimaryBeamMods</class>
    <class kind="class">FCTuplets</class>
    <class kind="class">FCVerseSyllables</class>
    <class kind="class">FCChorusSyllables</class>
    <class kind="class">FCSectionSyllables</class>
    <class kind="class">FCNoteheadMods</class>
    <class kind="class">FCAccidentalMods</class>
    <class kind="class">FCPercussionNoteMods</class>
    <class kind="class">FCTablatureNoteMods</class>
    <class kind="class">FCStartTieMods</class>
    <class kind="class">FCEndTieMods</class>
    <class kind="class">FCDotMods</class>
    <class kind="class">FCCrossStaffMods</class>
    <class kind="class">FCPerformanceMods</class>
    <class kind="class">FCCompositeTimeSigTop</class>
    <class kind="class">FCCompositeTimeSigBottom</class>
    <class kind="class">FCPages</class>
    <class kind="class">FCStaffSystems</class>
    <class kind="class">FCMeasures</class>
    <class kind="class">FCStaves</class>
    <class kind="class">FCMeasureNumberRegions</class>
    <class kind="class">FCArticulationDefs</class>
    <class kind="class">FCSystemStaves</class>
    <class kind="class">FCCategoryDefs</class>
    <class kind="class">FCTextExpressionDefs</class>
    <class kind="class">FCShapeExpressionDefs</class>
    <class kind="class">FCExpressions</class>
    <class kind="class">FCPageTexts</class>
    <class kind="class">FCTextBlocks</class>
    <class kind="class">FCSeparatePlacements</class>
    <class kind="class">FCStaffStyleDefs</class>
    <class kind="class">FCStaffStyleAssigns</class>
    <class kind="class">FCMultiMeasureRests</class>
    <class kind="class">FCMultiStaffInstruments</class>
    <class kind="class">FCPageGraphics</class>
    <class kind="class">FCTextRepeatDefs</class>
    <class kind="class">FCFretInstrumentDefs</class>
    <class kind="class">FCTextRepeats</class>
    <class kind="class">FCShapeDefs</class>
    <class kind="class">FCChordSuffixElements</class>
    <class kind="class">FCFretboardStyleDefs</class>
    <class kind="class">FCBeatChartElements</class>
    <class kind="class">FCTempoElements</class>
    <class kind="class">FCPercussionLayoutNotes</class>
    <class kind="class">FCInstrumentDefs</class>
    <class kind="class">FCStaffLists</class>
    <class kind="class">FCStaffListLookup</class>
    <class kind="class">FCCellClefChanges</class>
    <class kind="class">FCGuides</class>
    <class kind="class">FCMetatoolAssignments</class>
    <class kind="class">FCParts</class>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Finale PDK Framework</title>
    <filename>index.html</filename>
  </compound>
</tagfile>
